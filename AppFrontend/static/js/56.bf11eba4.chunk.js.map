{"version":3,"sources":["modules/adminpanel/MyTableCell/Types/readonly_progress.js","modules/adminpanel/hooks/fnListOfTableCell.js","modules/adminpanel/hooks/useConfigTableCell.js","services/apiConfigApi.js","../node_modules/reactstrap/es/Progress.js"],"names":["WrapCell","styled","div","MTCReadonlyHtml","props","cell","ctc","useConfigTableCell","row","HIs","isObject","_configFormat","_configProgress","more","KMore","configFormat","configProgress","_value","Number","fPercent","needMultip","_numberPercent","HFormat","format","type","_moreProps","color","moreProps","_textTotal","showTotal","fTotal","fNumber","className","style","styleWrap","striped","value","kfnGetScreenCode","fnListOfTableCell","oneTableCell","_fnList","fnList","kfnGetSourceData","extra","_optionKey","Type","source","_sourceList","fnListMyPage","getSourceList","AHOptions","sourceField","startsWith","HJson","getObj","_optionField","slice","length","Array","isArray","kfnRenderBadge","customMore","count","tooltip","helpersOfTableCell","renderBadge","kfnGetHeaderTitle","customTitle","V","Cell_GetHeaderTitle","kfnGetConfigInMore","key","df","_result","hasOwnProperty","kfnGetConfigModal","Cell_GetConfigModal","kfnGetIsHide","getValue","FlowGetCanShow","hideWhenEmpty","hideWhenNull","MyTableCellHelpers","onSendMsg","msg","console","error","onReExpand","HUtils","runFuntion","args","configBadge","badge","show","_count","_tooltip","fCount","fTooltip","overlay","html","kfnRequestUpdate","kfnRequestCustom","ModalContentFiles","_id","Id","_screenCode","_configFileFromMore","fID","configFile","file","needRequestPhotos","pasteAsFile","showUploadFromGGDrive","requestData","ScreenCode","ProjectId","FieldName","fieldName","canUpload","ATCHelper","_extra","_more","_canEdit","CanEdit","fCanEdit","canEditF","indexOf","_arrcanEditF","split","lockF","fLock","_fLock","_arrLock","countForceUpdate","useState","undefined","valueCell","setValueCell","isUpdating","setIsUpdating","isFetching","setIsFetching","refOneTableCell","React","useRef","OneTableCell","current","custom","refFnList","_onePage","updateOnePage","fnGetOnePage","forceUpdate","useForceUpdate","updateValueCellFromRow","cbWhenEqual","log","IsLocked","canEdit","useEffect","moreObj","updateFieldData","v","opts","warn","cbError","apiController","fnGetApiPath","newValue","cbSuccess","fnForceUpdateTable","cbSuccessUpdate","e","requestCustom","getSharedConfig","getMoreAttrsFromCustomConfig","moreAttrs","getMorePropsButton","defaultStyle","_style","disabled","button","Object","keys","renderHide","classNameWrap","customConfig","cls","scrwhhover","styledMini","overideStyle","Cell_GetStyleCell","onUpdateRow","newRow","getTextDisplaySelect","_display","fDisplay","fShow","_sourceData","fnGetSourceData","_textFromOption","HOptions","getTextDisplayOfValueFromOptions","renderTopRight","moreBtns","moreConfig","renderLoadingOverlay","size","onClickForm","customShowForm","FlowCheckApiShowModal","cb","canShow","config","configForm","getConfigForm","_defaultValuesForm","fDefaultValues","configFormToShow","MyFormControlHelpers","defaultValues","onSubmitForm","valuesForm","myForm","configApi","getConfigApi","Promise","resolve","reject","query","assign","apiWithConfigApi","then","res","FlowParseResponseAndNeedReload","response","closeMyModal","catch","configModal","getConfigModal","MyModal","showFromMyForm","onClickApi","cbBeforeRequest","cbAfterRequest","confirmMsg","showConfirm","title","titleConfirm","onClickOK","cModal","finally","hide","onClickFiles","showFromComponent","propsComponent","backdrop","showHeader","updateCell","onChangeData","data","mergeObjIfExist","_excluded","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","propTypes","children","PropTypes","node","bar","bool","multi","tag","tagPropType","oneOfType","string","number","min","max","animated","barClassName","cssModule","barStyle","barAriaValueText","barAriaLabelledBy","Progress","Tag","attributes","_objectWithoutPropertiesLoose","percent","toNumber","progressClasses","mapToCssModules","classNames","progressBarProps","width","role","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/56.bf11eba4.chunk.js","sourcesContent":["import { HFormat, HIs, MyUI } from \"@macashipo/mlib\"\r\nimport React from \"react\"\r\nimport { Progress } from \"reactstrap\"\r\nimport { KMore } from \"src/helpers/Flows/TableCell\"\r\nimport styled from \"styled-components\"\r\nimport useConfigTableCell from \"../../hooks/useConfigTableCell\"\r\n\r\nconst WrapCell = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  & .a-title {\r\n    text-align: center;\r\n  }\r\n  & .progress {\r\n    & .progress-bar {\r\n      overflow: visible;\r\n      // text-shadow: 0.07em 0 #b1b1b1, 0 0.07em #b1b1b1, -0.07em 0 #b1b1b1,\r\n      //   0 -0.07em #b1b1b1;\r\n      text-shadow: #000000 0 0 2px, #000000 0 0 1px, #000000 0 0 2px;\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`\r\nexport default function MTCReadonlyHtml(props) {\r\n  const { cell } = props\r\n  const ctc = useConfigTableCell({ props })\r\n  const row = ctc.row\r\n  if (HIs.isObject(cell)) {\r\n    return <div></div>\r\n  }\r\n  let _configFormat = {}\r\n  let _configProgress = {}\r\n  if (ctc.more && ctc.more[KMore.configFormat]) {\r\n    _configFormat = ctc.more[KMore.configFormat]\r\n  }\r\n  if (ctc.more && ctc.more[KMore.configProgress]) {\r\n    _configProgress = ctc.more[KMore.configProgress]\r\n  }\r\n\r\n  let _value = Number(cell)\r\n  if (_configProgress.fPercent) {\r\n    _value = row[_configProgress.fPercent]\r\n  }\r\n  if (_configFormat.needMultip) {\r\n    _value = _value * 100\r\n  }\r\n  let _numberPercent = HFormat.format(_value, {\r\n    type: \"number_percent\",\r\n    ..._configFormat,\r\n  })\r\n  let _moreProps = {}\r\n  if (_configProgress.color) {\r\n    _moreProps.color = _configProgress.color\r\n  }\r\n  if (_configProgress.moreProps) {\r\n    _moreProps = { ..._moreProps, ..._configProgress.moreProps }\r\n  }\r\n  let _textTotal = null\r\n  if (\r\n    _configProgress.showTotal &&\r\n    _configProgress.fTotal &&\r\n    _configProgress.fNumber\r\n  ) {\r\n    _textTotal = `${row[_configProgress.fNumber]} of ${\r\n      row[_configProgress.fTotal]\r\n    }`\r\n  }\r\n  // console.warn(\"render progress:\", _configProgress, _textTotal)\r\n  return (\r\n    <WrapCell className=\"mct-progress disabled\" style={ctc.styleWrap()}>\r\n      {_textTotal != null && <div className=\"a-title\">{_textTotal}</div>}\r\n      <Progress striped value={_value} {..._moreProps}>\r\n        <span>&nbsp;{_numberPercent}</span>\r\n      </Progress>\r\n    </WrapCell>\r\n  )\r\n}\r\n","import { HUtils, MyUI, MyTableCellHelpers, HJson } from \"@macashipo/mlib\"\r\nimport { Tooltip } from \"src/core/components\"\r\nimport {\r\n  kfnGetSourceData,\r\n  kfnRenderBadge,\r\n  kfnGetHeaderTitle,\r\n  fnListMyPage,\r\n  kfnGetConfigInMore,\r\n  kfnGetConfigModal,\r\n  kfnGetIsHide,\r\n} from \"src/helpers/fnList\"\r\nimport * as AHOptions from \"src/core/helpers/options\"\r\nimport V from \"src/helpers/V\"\r\nimport { FlowGetCanShow, KMore } from \"src/helpers/Flows/TableCell\"\r\nconst kfnGetScreenCode = \"fnGetScreenCode\"\r\n\r\nconst fnListOfTableCell = {\r\n  init({ oneTableCell }) {\r\n    let _fnList = {\r\n      ...oneTableCell.fnList,\r\n    }\r\n    _fnList[kfnGetSourceData] = () => {\r\n      const { row, extra } = oneTableCell\r\n      let _optionKey = oneTableCell.extra.Type.source\r\n      let _sourceList = fnListMyPage.getSourceList(_fnList)\r\n      // console.warn(\"_sourceList\", _sourceList, fieldName, extra)\r\n      if (AHOptions.isHasLevelOptionKey(_optionKey)) {\r\n        return AHOptions.getOptionsByLevel(\r\n          _sourceList,\r\n          _optionKey,\r\n          row,\r\n          extra.Type.sourceField\r\n        )\r\n      } else if (_optionKey && _optionKey.startsWith(\"[\")) {\r\n        //bo sung truong hop optionKey la string json source\r\n        return HJson.getObj(_optionKey)\r\n      } else if (_optionKey && _optionKey.startsWith(\"f\")) {\r\n        let _optionField = _optionKey.slice(1, _optionKey.length)\r\n        if (row[_optionField] != null && Array.isArray(row[_optionField])) {\r\n          return row[_optionField]\r\n        } else if (row[_optionKey] != null && Array.isArray(row[_optionKey])) {\r\n          return row[_optionKey]\r\n        }\r\n        return []\r\n      } else {\r\n        return _sourceList[_optionKey] || []\r\n      }\r\n    }\r\n    _fnList[kfnRenderBadge] = ({ customMore, count, tooltip } = {}) => {\r\n      // console.info(kfnRenderBadge, count, tooltip, more, row)\r\n      const { row, more } = oneTableCell\r\n      return helpersOfTableCell.renderBadge({\r\n        more: customMore || more,\r\n        row,\r\n        count,\r\n        tooltip,\r\n      })\r\n    }\r\n\r\n    _fnList[kfnGetHeaderTitle] = ({ customTitle } = {}) => {\r\n      // console.warn(\"get Header title\", row, oneTableCell.row)\r\n      return V.Cell_GetHeaderTitle({ extra: oneTableCell.extra, customTitle })\r\n    }\r\n\r\n    _fnList[kfnGetConfigInMore] = (key = \"\", df) => {\r\n      const { more } = oneTableCell\r\n      let _result = df\r\n      if (more && more.hasOwnProperty(key)) {\r\n        _result = more[key]\r\n      }\r\n      return _result\r\n    }\r\n    _fnList[kfnGetConfigModal] = () => {\r\n      const { row, extra, more } = oneTableCell\r\n      return V.Cell_GetConfigModal({\r\n        extra,\r\n        more,\r\n        row,\r\n      })\r\n    }\r\n    _fnList[kfnGetIsHide] = () => {\r\n      const { row, extra, more } = oneTableCell\r\n      const cell = oneTableCell.getValue()\r\n      //check canshow\r\n      let _canShow = FlowGetCanShow({ extra, row, more })\r\n      // console.log(\"_canShow\", _canShow, oneTableCell.fieldName)\r\n      if (_canShow === false) {\r\n        return true\r\n      }\r\n      let _isHide = false\r\n      if (\r\n        more[KMore.hideWhenEmpty] &&\r\n        (cell === \"\" || cell == null || cell === 0)\r\n      ) {\r\n        return true\r\n      }\r\n      if (more[KMore.hideWhenNull] && cell == null) {\r\n        return true\r\n      }\r\n      if (\r\n        MyTableCellHelpers[\"ConfigByTypes\"] &&\r\n        MyTableCellHelpers[\"ConfigByTypes\"][oneTableCell.type] &&\r\n        MyTableCellHelpers[\"ConfigByTypes\"][oneTableCell.type][\"isHide\"]\r\n      ) {\r\n        if (\r\n          MyTableCellHelpers[\"ConfigByTypes\"][oneTableCell.type][\"isHide\"](\r\n            oneTableCell\r\n          )\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n      return _isHide\r\n    }\r\n\r\n    _fnList.onSendMsg = msg => {\r\n      console.error(\"missing onSendMsg, need update fnList\", msg)\r\n    }\r\n    _fnList.onReExpand = () => {\r\n      const { row } = oneTableCell\r\n      HUtils.runFuntion(row, \"_fnForceUpdateDetail\")\r\n    }\r\n\r\n    //update fnList to oneTableCell again\r\n    oneTableCell.fnList = _fnList\r\n    return _fnList\r\n  },\r\n  fnGetScreenCode(ctc = {}, args = []) {\r\n    return HUtils.runFuntion(ctc.fnList, kfnGetScreenCode, args)\r\n  },\r\n}\r\n\r\nconst helpersOfTableCell = {\r\n  renderBadge({ more = {}, row = {}, count, tooltip } = {}) {\r\n    const configBadge = more.configBadge || more.badge\r\n    // console.warn(\"renderBadge\", more, count, row)\r\n    if (count != null || (configBadge && configBadge.show === true)) {\r\n      let _count = count\r\n      let _tooltip = tooltip\r\n      if (\r\n        configBadge &&\r\n        configBadge.fCount &&\r\n        row[configBadge.fCount] != null\r\n      ) {\r\n        _count = row[configBadge.fCount]\r\n      }\r\n      if (_count) {\r\n        if (configBadge && configBadge.fTooltip && row[configBadge.fTooltip]) {\r\n          _tooltip = row[configBadge.fTooltip]\r\n        }\r\n        if (_tooltip) {\r\n          return (\r\n            <Tooltip overlay={<MyUI type=\"html\" html={_tooltip} />}>\r\n              <span className=\"mct-ui-badge\">{_count}</span>\r\n            </Tooltip>\r\n          )\r\n        }\r\n        return <span className=\"mct-ui-badge\">{_count}</span>\r\n      }\r\n    }\r\n  },\r\n}\r\nexport { helpersOfTableCell, fnListOfTableCell }\r\n","/*eslint-disable @typescript-eslint/no-unused-vars */\r\nimport {\r\n  HOptions,\r\n  HUtils,\r\n  MyFormControlHelpers,\r\n  MyTableCellHelpers,\r\n  MyUI,\r\n  MyLoading,\r\n  MyTableCell,\r\n  OneTableCell,\r\n} from \"@macashipo/mlib\"\r\nimport cls from \"classnames\"\r\nimport React, { useState } from \"react\"\r\nimport { MyModal } from \"src/core/components\"\r\nimport { fnListMyPage } from \"src/helpers/fnList\"\r\nimport apiWithConfigApi from \"src/services/apiConfigApi\"\r\nimport V from \"src/helpers/V\"\r\nimport { fnListOfTableCell, helpersOfTableCell } from \"./fnListOfTableCell\"\r\nimport useForceUpdate from \"./useForceUpdate\"\r\nimport {\r\n  FlowCheckApiShowModal,\r\n  FlowParseResponseAndNeedReload,\r\n} from \"src/helpers/Flows/TableCell\"\r\nconst kfnRequestUpdate = \"fnRequestUpdate\"\r\nconst kfnRequestCustom = \"fnRequestCustom\"\r\n\r\nfunction ModalContentFiles(props) {\r\n  const { ctc, more } = props\r\n  let _id = ctc.row.Id\r\n  let _screenCode = fnListOfTableCell.fnGetScreenCode(ctc)\r\n  let _configFileFromMore = {}\r\n  if (more) {\r\n    if (more.fID && ctc.row[more.fID]) {\r\n      _id = ctc.row[more.fID]\r\n    }\r\n    _configFileFromMore = more.configFile || more.file || {}\r\n  }\r\n  const configFile = {\r\n    needRequestPhotos: true,\r\n    pasteAsFile: true,\r\n    showUploadFromGGDrive: false,\r\n    ..._configFileFromMore,\r\n  }\r\n  const requestData = {\r\n    ScreenCode: _screenCode,\r\n    ProjectId: \"\",\r\n    Id: _id,\r\n    FieldName: ctc.fieldName,\r\n  }\r\n  // console.warn(\"render filemanager:\", requestData, ctc.fnList)\r\n  return (\r\n    <div>\r\n      <MyUI\r\n        type=\"file_manager\"\r\n        requestData={requestData}\r\n        fnList={props.fnList}\r\n        configFile={configFile}\r\n        canUpload={props.canUpload}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nconst ATCHelper = {\r\n  //can chuyen sang Flow\r\n  getCanEdit: ({ fieldName, extra, row, more }) => {\r\n    let _extra = extra || {}\r\n    let _more = more\r\n    let _canEdit = false\r\n    if (typeof _extra.CanEdit === \"boolean\") {\r\n      _canEdit = _extra.CanEdit\r\n    }\r\n    //check more.fCanEdit more.canEditF\r\n    if (_canEdit == true) {\r\n      if (_more.fCanEdit == null && _more.canEditF != null) {\r\n        _more.fCanEdit = _more.canEditF\r\n      }\r\n      if (typeof _more.fCanEdit === \"boolean\") {\r\n        _canEdit = _more.fCanEdit\r\n      } else if (typeof _more.fCanEdit === \"string\") {\r\n        if (_more.fCanEdit.length > 0) {\r\n          if (row[_more.fCanEdit] != null) {\r\n            _canEdit = row[_more.fCanEdit]\r\n          } else if (_more.fCanEdit.indexOf(\",\") > -1) {\r\n            let _arrcanEditF = _more.fCanEdit.split(\",\")\r\n            if (_arrcanEditF && _arrcanEditF.length > 0) {\r\n              for (let f of _arrcanEditF) {\r\n                if (row[f] == false) {\r\n                  //only need one cannot edit -> cannot edit\r\n                  _canEdit = false\r\n                  break\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //check more.lockF more.fLock\r\n    if (_more.lockF != null || _more.fLock != null) {\r\n      let _fLock = _more.lockF || _more.fLock\r\n      if (typeof _fLock == \"boolean\") {\r\n        _canEdit = !_fLock\r\n      } else if (typeof _fLock == \"string\") {\r\n        if (_fLock.length > 0) {\r\n          if (row[_fLock] != null) {\r\n            _canEdit = !row[_fLock]\r\n          } else if (_fLock.indexOf(\",\") > -1) {\r\n            let _arrLock = _fLock.split(\",\")\r\n            if (_arrLock && _arrLock.length > 0) {\r\n              for (let f of _arrLock) {\r\n                if (row[f] == true) {\r\n                  //only need one lock edit -> cannot edit\r\n                  _canEdit = false\r\n                  break\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return _canEdit\r\n  },\r\n}\r\n\r\nvar countForceUpdate = 0\r\n// var countForceUpdateMax = 1000\r\nfunction useConfigTableCell({ props } = {}) {\r\n  countForceUpdate++\r\n  const [valueFU, setValueFU] = useState(0) // integer state\r\n  const [valueCell, setValueCell] = useState(\r\n    props.cell === null || props.cell === undefined ? \"\" : props.cell\r\n  ) // integer state\r\n  const { cell, extra } = props\r\n  const { fieldName } = extra\r\n  const [isUpdating, setIsUpdating] = useState(false)\r\n  const [isFetching, setIsFetching] = useState(false)\r\n  const refOneTableCell = React.useRef(new OneTableCell(props))\r\n  const oneTableCell = refOneTableCell.current\r\n  // update row and extra to oneTableCell, may be it will change so need update\r\n  // oneTableCell.update(props.row, extra)\r\n  oneTableCell.row = props.row\r\n  oneTableCell.extra = extra\r\n  if (props.custom) {\r\n    if (oneTableCell[\"_updateCustom\"] !== true) {\r\n      oneTableCell.more = { ...props.custom.more, ...oneTableCell.more }\r\n      oneTableCell[\"_updateCustom\"] = true\r\n      // console.warn(\"new more:\", oneTableCell.more)\r\n    }\r\n  }\r\n\r\n  const row = oneTableCell.row\r\n  const refFnList = React.useRef(\r\n    fnListOfTableCell.init({ oneTableCell, row, extra, cell })\r\n  )\r\n  const fnList = refFnList.current\r\n  if (oneTableCell._onePage == null) {\r\n    oneTableCell.updateOnePage(fnListMyPage.fnGetOnePage(fnList))\r\n  }\r\n  const more = oneTableCell.more\r\n  // const forceUpdate = () => {\r\n  //   console.warn(\"forceUpdate\", countForceUpdate)\r\n  //   setValueFU(valueFU + 1)\r\n  // }\r\n  const forceUpdate = useForceUpdate()\r\n  //chua hieu vi sao 2 forceUpdate se hoat dong khac nhau\r\n  //setValueFU nhieu luc ko hoat dong\r\n\r\n  const updateValueCellFromRow = ({ cbWhenEqual } = {}) => {\r\n    let _value = row[fieldName]\r\n    console.log(\"updateValueCellFromRow:\", _value)\r\n    if (valueCell != _value) {\r\n      setValueCell(_value === null || _value === undefined ? \"\" : _value)\r\n    } else {\r\n      console.log(\"call cbWhenEqual\")\r\n      if (cbWhenEqual) {\r\n        cbWhenEqual()\r\n      }\r\n    }\r\n  }\r\n\r\n  //parse\r\n  if (row.IsLocked === true) {\r\n    oneTableCell.canEdit = false\r\n  } else if (\r\n    oneTableCell.canEdit == null ||\r\n    oneTableCell.canEdit === true ||\r\n    oneTableCell.canEdit === false\r\n  ) {\r\n    oneTableCell.canEdit = ATCHelper.getCanEdit({\r\n      extra: oneTableCell.extra,\r\n      more,\r\n      row,\r\n    })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // console.log(\r\n    //   \"props.cell change:\",\r\n    //   oneTableCell.fieldName,\r\n    //   valueCell,\r\n    //   props.cell\r\n    // )\r\n    if (\r\n      typeof props.cell === \"string\" ||\r\n      typeof props.cell === \"number\" ||\r\n      typeof props.cell === \"boolean\"\r\n    ) {\r\n      if (props.cell != valueCell) {\r\n        // console.log(\"update valueCell:\", valueCell, props.cell)\r\n        setValueCell(props.cell)\r\n      }\r\n    } else {\r\n      //truong hop con lai luon update valueCell\r\n      setValueCell(props.cell)\r\n    }\r\n  }, [props.cell])\r\n\r\n  // React.useEffect(() => {\r\n  //   console.log(\"props change:\", oneTableCell.fieldName, valueCell, props.cell)\r\n  // }, [props])\r\n\r\n  // if (typeof props.cell === \"boolean\") {\r\n  //   console.warn(\"aaaaa\", props.cell, valueCell, row)\r\n  //   if (valueCell != props.cell) {\r\n  //     setValueCell(props.cell)\r\n  //   }\r\n  // }\r\n\r\n  // console.warn(\r\n  //   \"useConfigTableCell:\",\r\n  //   oneTableCell.fieldName,\r\n  //   countForceUpdate,\r\n  //   oneTableCell,\r\n  //   isUpdating\r\n  // )\r\n\r\n  // console.log(\"render cell\", fieldName)\r\n  return {\r\n    forceUpdate,\r\n    fnList,\r\n    updateValueCellFromRow,\r\n    oneTableCell,\r\n    extra: oneTableCell.extra,\r\n    row: oneTableCell.row,\r\n    fieldName: oneTableCell.fieldName,\r\n    more: oneTableCell.more,\r\n    moreObj: oneTableCell.more,\r\n    canEdit: oneTableCell.canEdit,\r\n    updateFieldData: (v, opts = {}) => {\r\n      console.warn(\"updateFieldData:\", v, oneTableCell)\r\n      if (v != cell && !(cell == null && v == \"\")) {\r\n        setIsUpdating(true)\r\n        HUtils.runFuntion(oneTableCell.fnList, kfnRequestUpdate, [\r\n          {\r\n            ...opts,\r\n            apiController: fnListMyPage.fnGetApiPath(fnList),\r\n            fieldName: opts.fieldName || oneTableCell.fieldName,\r\n            row: oneTableCell.row,\r\n            newValue: v,\r\n            cbSuccess: v => {\r\n              console.warn(\"cbss\", v)\r\n              setIsUpdating(false)\r\n              fnListMyPage.fnForceUpdateTable(fnList, [])\r\n              if (opts && opts.cbSuccess) {\r\n                opts.cbSuccess(v)\r\n              }\r\n              //bo sung cbSuccessUpdate danh cho cell ben trong cell\r\n              if (props.fnList && props.fnList.cbSuccessUpdate) {\r\n                props.fnList.cbSuccessUpdate()\r\n              }\r\n            },\r\n            cbError: e => {\r\n              console.warn(\"cber\", e)\r\n              setIsUpdating(false)\r\n              if (opts && opts.cbError) {\r\n                opts.cbError(v)\r\n              }\r\n            },\r\n          },\r\n        ])\r\n      } else {\r\n        console.warn(\"not update:\", v, cell, opts)\r\n        if (opts && opts.cbError) {\r\n          opts.cbError({ msg: \"Nothing to change\" })\r\n        }\r\n      }\r\n    },\r\n    requestCustom: (opts = {}) => {\r\n      console.log(\"requestCustom:\", opts)\r\n      HUtils.runFuntion(oneTableCell.fnList, kfnRequestCustom, [\r\n        {\r\n          ...opts,\r\n        },\r\n      ])\r\n    },\r\n    getSharedConfig: () => {\r\n      return {}\r\n    },\r\n    getMoreAttrsFromCustomConfig: () => {\r\n      if (\r\n        MyTableCellHelpers[\"ConfigByTypes\"] &&\r\n        MyTableCellHelpers[\"ConfigByTypes\"][oneTableCell.type] &&\r\n        MyTableCellHelpers[\"ConfigByTypes\"][oneTableCell.type].moreAttrs\r\n      ) {\r\n        return MyTableCellHelpers[\"ConfigByTypes\"][oneTableCell.type].moreAttrs\r\n      }\r\n      return {}\r\n    },\r\n    getMorePropsButton: ({ defaultStyle } = {}) => {\r\n      let _moreProps = {}\r\n      let _style = defaultStyle || {}\r\n      if (isFetching) {\r\n        _moreProps.disabled = true\r\n      }\r\n      //bo sung style button from more\r\n      if (more && more.button && more.button.style) {\r\n        _style = { ..._style, ...more.button.style }\r\n      }\r\n      if (_style && Object.keys(_style).length > 0) {\r\n        _moreProps.style = _style\r\n      }\r\n      return _moreProps\r\n    },\r\n    renderHide: () => {\r\n      return <div className=\"disabled\"></div>\r\n    },\r\n    isUpdating: isUpdating,\r\n    setIsUpdating: v => {\r\n      setIsUpdating(v)\r\n    },\r\n    isFetching,\r\n    setIsFetching,\r\n    valueCell,\r\n    setValueCell,\r\n    classNameWrap: (df = \"\", customConfig = {}) => {\r\n      return cls(df, {\r\n        disabled: oneTableCell.canEdit === false,\r\n        \"a-scrwhhover\":\r\n          more.scrwhhover != null\r\n            ? more.scrwhhover\r\n            : customConfig.scrwhhover || false,\r\n        \"styled-mini\": more.styledMini,\r\n        ...(props.custom != null && props.custom.className != null\r\n          ? {\r\n              [props.custom.className]: true,\r\n            }\r\n          : {}),\r\n      })\r\n    },\r\n    styleWrap: (df = {}, overideStyle = {}) => {\r\n      return V.Cell_GetStyleCell({\r\n        extra,\r\n        more,\r\n        row,\r\n        defaultStyle: df,\r\n        overideStyle,\r\n      })\r\n    },\r\n    // getSourceData: fnList.fnGetSourceData,\r\n    onUpdateRow: newRow => {\r\n      HUtils.runFuntion(oneTableCell.fnList, \"onUpdateRow\", [\r\n        {\r\n          row,\r\n          newRow,\r\n        },\r\n      ])\r\n    },\r\n    getTextDisplaySelect: () => {\r\n      // console.warn(\"getTextDisplaySelect:\", valueCell)\r\n      let _display = \"\"\r\n      if (more.fDisplay && row[more.fDisplay]) {\r\n        _display = row[more.fDisplay]\r\n      } else if (more.fShow && row[more.fShow]) {\r\n        _display = row[more.fShow]\r\n      }\r\n      if (_display == \"\" && valueCell != null && valueCell !== \"\") {\r\n        let _sourceData = fnList.fnGetSourceData()\r\n        // console.warn(\"sourceData:\", _sourceData)\r\n        let _textFromOption = HOptions.getTextDisplayOfValueFromOptions(\r\n          _sourceData,\r\n          valueCell\r\n        )\r\n        if (_textFromOption) {\r\n          _display = _textFromOption\r\n        }\r\n      }\r\n      let _alwayShowSelectValueIfNoText = true //can cau hinh\r\n      if (_display == \"\" && _alwayShowSelectValueIfNoText) {\r\n        _display = valueCell || \"\"\r\n      }\r\n      return _display\r\n    },\r\n    renderTopRight: (moreBtns = [], moreConfig = {}) => {\r\n      return (\r\n        <MyTableCell\r\n          {...props}\r\n          fnList={fnList}\r\n          more={more}\r\n          oneTableCell={oneTableCell}\r\n          type=\"_barTopRight\"\r\n          moreBtns={moreBtns}\r\n          moreConfig={moreConfig}\r\n        />\r\n      )\r\n    },\r\n    renderLoadingOverlay: () => {\r\n      return (\r\n        <div className=\"a-overlay-center\">\r\n          <MyLoading type=\"threedotsvertical\" size={12} />\r\n        </div>\r\n      )\r\n    },\r\n    onClickForm: ({ customMore, cbSuccess, customShowForm } = {}) => {\r\n      let _more = customMore || more\r\n      console.warn(\"onClickForm:\", _more)\r\n      setIsFetching(true)\r\n      FlowCheckApiShowModal({\r\n        extra,\r\n        row,\r\n        more,\r\n        fnList: fnList,\r\n        cb: ({ canShow, config }) => {\r\n          if (canShow) {\r\n            const configForm = oneTableCell.getConfigForm({ customMore: _more })\r\n            let _defaultValuesForm = row\r\n            if (_more.fDefaultValues) {\r\n              if (row[_more.fDefaultValues]) {\r\n                _defaultValuesForm = row[_more.fDefaultValues]\r\n              } else {\r\n                _defaultValuesForm = {}\r\n              }\r\n            }\r\n            if (configForm) {\r\n              const configFormToShow = MyFormControlHelpers[\r\n                \"getConfigFormFromConfigV1\"\r\n              ](configForm, {\r\n                defaultValues: _defaultValuesForm,\r\n                fnList: {\r\n                  ...fnList,\r\n                  onSubmitForm: (valuesForm, { myForm }) => {\r\n                    console.warn(\"onSubmitForm:\", valuesForm)\r\n                    const configApi = oneTableCell.getConfigApi({\r\n                      customMore: _more,\r\n                    })\r\n                    return new Promise((resolve, reject) => {\r\n                      if (configApi) {\r\n                        configApi.query = Object.assign(\r\n                          configApi.query,\r\n                          valuesForm\r\n                        )\r\n                        apiWithConfigApi(configApi)\r\n                          .then(res => {\r\n                            console.warn(\"onClickBtn API rs\", res)\r\n                            FlowParseResponseAndNeedReload({\r\n                              extra,\r\n                              row,\r\n                              fieldName,\r\n                              more,\r\n                              oneTableCell: oneTableCell,\r\n                              response: res,\r\n                            })\r\n                            if (myForm.closeMyModal) {\r\n                              myForm.closeMyModal()\r\n                            }\r\n                            cbSuccess && cbSuccess(res)\r\n                            resolve(res)\r\n                          })\r\n                          .catch(error => {\r\n                            reject(error)\r\n                          })\r\n                      } else {\r\n                        console.warn(\"Missing configApi\")\r\n                        reject(\"Missing configApi\")\r\n                      }\r\n                    })\r\n                  },\r\n                },\r\n              })\r\n              const configModal = oneTableCell.getConfigModal({\r\n                customMore: _more,\r\n              })\r\n              if (customShowForm) {\r\n                customShowForm(configFormToShow, { ...configModal })\r\n              } else {\r\n                MyModal.showFromMyForm(configFormToShow, { ...configModal })\r\n              }\r\n            } else {\r\n              console.error(\"Missing configForm:\", configForm)\r\n            }\r\n          }\r\n          setIsFetching(false)\r\n        },\r\n      })\r\n    },\r\n    onClickApi: ({\r\n      customMore,\r\n      cbSuccess,\r\n      cbError,\r\n      cbBeforeRequest,\r\n      cbAfterRequest,\r\n    } = {}) => {\r\n      let _more = customMore || more\r\n      console.warn(\"onClickApi:\", _more)\r\n      const configApi = oneTableCell.getConfigApi({ customMore: _more })\r\n      if (_more.confirmMsg) {\r\n        MyModal.showConfirm({\r\n          title: _more.titleConfirm || \"Confirm\",\r\n          msg: _more.confirmMsg,\r\n          onClickOK: cModal => {\r\n            if (configApi) {\r\n              if (cbBeforeRequest) {\r\n                cbBeforeRequest()\r\n              }\r\n              apiWithConfigApi(configApi)\r\n                .then(res => {\r\n                  console.warn(\"onClickBtn API rs\", res)\r\n                  FlowParseResponseAndNeedReload({\r\n                    extra,\r\n                    row,\r\n                    fieldName,\r\n                    more: _more,\r\n                    oneTableCell: oneTableCell,\r\n                    response: res,\r\n                  })\r\n                })\r\n                .finally(() => {\r\n                  if (cbAfterRequest) {\r\n                    cbAfterRequest()\r\n                  }\r\n                })\r\n            } else {\r\n              console.warn(\"Missing configApi\")\r\n            }\r\n            if (cModal && cModal.hide) {\r\n              cModal.hide()\r\n            }\r\n          },\r\n        })\r\n      } else {\r\n        if (configApi) {\r\n          if (cbBeforeRequest) {\r\n            cbBeforeRequest()\r\n          }\r\n          apiWithConfigApi(configApi)\r\n            .then(res => {\r\n              console.warn(\"onClickBtn API rs\", res)\r\n              FlowParseResponseAndNeedReload({\r\n                extra,\r\n                row,\r\n                fieldName,\r\n                more: _more,\r\n                oneTableCell: oneTableCell,\r\n                response: res,\r\n              })\r\n            })\r\n            .finally(() => {\r\n              if (cbAfterRequest) {\r\n                cbAfterRequest()\r\n              }\r\n            })\r\n        } else {\r\n          console.warn(\"Missing configApi\")\r\n          if (cbError) {\r\n            cbError()\r\n          }\r\n        }\r\n      }\r\n    },\r\n    onClickFiles: ({ ctc, customMore, canUpload } = {}) => {\r\n      let _more = customMore || more\r\n      console.warn(\"onClickFiles:\", _more)\r\n      MyModal.showFromComponent(\r\n        propsComponent => {\r\n          return (\r\n            <ModalContentFiles\r\n              {...propsComponent}\r\n              more={_more}\r\n              canUpload={canUpload}\r\n              ctc={ctc}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          title: \"Modal\",\r\n          backdrop: \"static\",\r\n          size: \"xl\",\r\n          showHeader: false,\r\n          fnList: {\r\n            updateCell: (v, opts) => {\r\n              console.warn(\"Updatecell:\", v, opts)\r\n            },\r\n            fnGetApiPath: () => {\r\n              return fnListMyPage.fnGetApiPath(fnList)\r\n            },\r\n            onChangeData: data => {\r\n              console.warn(\"onChangeData:\", data, cell)\r\n              if (data && cell) {\r\n                //server hien tra ve Cell.Id = null nen de bo sung them, chi can chua Photos\r\n                if (\r\n                  data.Id === cell.Id ||\r\n                  (cell.hasOwnProperty &&\r\n                    data.hasOwnProperty &&\r\n                    cell.hasOwnProperty(\"Photos\") &&\r\n                    data.hasOwnProperty(\"Photos\"))\r\n                ) {\r\n                  HUtils.mergeObjIfExist(row[fieldName], data)\r\n                  HUtils.runFuntion(oneTableCell.fnList, \"onUpdateRow\", [\r\n                    {\r\n                      row,\r\n                      newRow: row,\r\n                    },\r\n                  ])\r\n                  forceUpdate()\r\n                } else {\r\n                  console.warn(\"Update data row, wrong ID\", data, cell)\r\n                }\r\n              } else {\r\n                console.warn(\"Update data row, wrong data\", data, cell)\r\n              }\r\n            },\r\n          },\r\n        }\r\n      )\r\n    },\r\n  }\r\n}\r\n\r\nexport { fnListOfTableCell, helpersOfTableCell }\r\nexport default useConfigTableCell\r\n","import { apiWithConfigApi } from \"src/core/helpers/api\"\r\nexport default apiWithConfigApi\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"min\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\", \"style\", \"barStyle\", \"barAriaValueText\", \"barAriaLabelledBy\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, toNumber } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  style: PropTypes.object,\n  barStyle: PropTypes.object,\n  barAriaValueText: PropTypes.string,\n  barAriaLabelledBy: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  value: 0,\n  min: 0,\n  max: 100,\n  style: {},\n  barStyle: {}\n};\n\nvar Progress = function Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      min = props.min,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      style = props.style,\n      barStyle = props.barStyle,\n      barAriaValueText = props.barAriaValueText,\n      barAriaLabelledBy = props.barAriaLabelledBy,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var progressBarProps = {\n    className: progressBarClasses,\n    style: _objectSpread(_objectSpread(_objectSpread({}, bar ? style : {}), barStyle), {}, {\n      width: percent + \"%\"\n    }),\n    role: 'progressbar',\n    'aria-valuenow': value,\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuetext': barAriaValueText,\n    'aria-labelledby': barAriaLabelledBy,\n    children: children\n  };\n\n  if (bar) {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, progressBarProps));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    style: style,\n    className: progressClasses\n  }), multi ? children : /*#__PURE__*/React.createElement(\"div\", progressBarProps));\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\nexport default Progress;"],"sourceRoot":""}