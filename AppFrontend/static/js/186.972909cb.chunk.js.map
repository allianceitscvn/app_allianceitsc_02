{"version":3,"sources":["modules/adminpanel/MyBase/Types/daterangepicker.js"],"names":["Wrap","styled","div","DateRange","props","state","startDate","endDate","event","picker","console","log","start","end","label","this","onChange","value","attrs","initialSettings","moment","_valuesDates","length","format","warn","onApply","setState","style","color","placeholder","i18next","t","React","Component"],"mappings":"8PAOMA,EAAOC,IAAOC,IAAV,0QAcJC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,KACXC,QAAS,MAJM,E,+CAOnB,SAAYC,EAAOC,GACjBC,QAAQC,IAAI,cAAeF,EAAOH,a,4BAEpC,SAAeM,EAAOC,EAAKC,GACzBJ,QAAQC,IAAI,iBAAkBC,EAAOC,EAAKC,K,oBAE5C,WAAU,IAAD,OACP,EAA4BC,KAAKX,MAAzBY,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,MACZC,EAAQH,KAAKX,MAAMc,OAAS,GAC9BA,EAAMC,kBACJD,EAAMC,gBAAgBb,YACxBY,EAAMC,gBAAgBb,UAAYc,IAChCF,EAAMC,gBAAgBb,YAGtBY,EAAMC,gBAAgBZ,UACxBW,EAAMC,gBAAgBZ,QAAUa,IAAOF,EAAMC,gBAAgBZ,WAGjE,IAAIc,EAAe,CAACN,KAAKV,MAAMC,UAAWS,KAAKV,MAAME,SAarD,OAZIU,GAASA,EAAMK,OAAS,IAC1BD,EAAa,GAAKJ,EAAM,GACxBI,EAAa,GAAKJ,EAAM,GAEpBI,EAAa,KAAOA,EAAa,GAAGE,SACtCF,EAAa,GAAKD,IAAOC,EAAa,KAEpCA,EAAa,KAAOA,EAAa,GAAGE,SACtCF,EAAa,GAAKD,IAAOC,EAAa,MAG1CX,QAAQc,KAAK,0BAA2BT,KAAKX,OAE3C,cAAC,IAAD,yBAOEqB,QAAS,SAACjB,EAAOC,GACf,EAAKiB,SACH,CACEpB,UAAWG,EAAOH,UAClBC,QAASE,EAAOF,UAElB,WACES,GAAYA,EAAS,CAACP,EAAOH,UAAWG,EAAOF,eAIjDW,GAlBN,aAoBE,cAAClB,EAAD,UACsB,MAAnBqB,EAAa,IAAiC,MAAnBA,EAAa,GACvC,mCACGA,EAAa,GAAGE,OAAO,cAD1B,KAC2C,IACxCF,EAAa,GAAGE,OAAO,iBAG1B,wBAAQI,MAAO,CAAEC,MAAO,4BAAxB,SACGV,EAAMW,aAAeC,IAAQC,EAAE,wB,GArEtBC,IAAMC,WA8Ef9B","file":"static/js/186.972909cb.chunk.js","sourcesContent":["import \"bootstrap-daterangepicker/daterangepicker.css\"\r\nimport moment from \"moment\"\r\n// import \"bootstrap/dist/css/bootstrap.css\"\r\nimport React from \"react\"\r\nimport DateRangePicker from \"react-bootstrap-daterangepicker\"\r\nimport styled from \"styled-components\"\r\nimport i18next from \"i18next\"\r\nconst Wrap = styled.div`\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  border: 1px solid #cccccc;\r\n  padding: 0.5rem;\r\n  border-radius: 4px;\r\n  & > button {\r\n    flex: 1;\r\n    text-align: left;\r\n    border: 0px;\r\n    background: transparent;\r\n  }\r\n`\r\nclass DateRange extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      startDate: null,\r\n      endDate: null,\r\n    }\r\n  }\r\n  handleEvent(event, picker) {\r\n    console.log(\"handleEvent\", picker.startDate)\r\n  }\r\n  handleCallback(start, end, label) {\r\n    console.log(\"handleCallback\", start, end, label)\r\n  }\r\n  render() {\r\n    const { onChange, value } = this.props\r\n    const attrs = this.props.attrs || {}\r\n    if (attrs.initialSettings) {\r\n      if (attrs.initialSettings.startDate) {\r\n        attrs.initialSettings.startDate = moment(\r\n          attrs.initialSettings.startDate\r\n        )\r\n      }\r\n      if (attrs.initialSettings.endDate) {\r\n        attrs.initialSettings.endDate = moment(attrs.initialSettings.endDate)\r\n      }\r\n    }\r\n    let _valuesDates = [this.state.startDate, this.state.endDate]\r\n    if (value && value.length > 1) {\r\n      _valuesDates[0] = value[0]\r\n      _valuesDates[1] = value[1]\r\n      //chuyen sang kieu moment\r\n      if (_valuesDates[0] && !_valuesDates[0].format) {\r\n        _valuesDates[0] = moment(_valuesDates[0])\r\n      }\r\n      if (_valuesDates[1] && !_valuesDates[1].format) {\r\n        _valuesDates[1] = moment(_valuesDates[1])\r\n      }\r\n    }\r\n    console.warn(\"render daterangepicker:\", this.props)\r\n    return (\r\n      <DateRangePicker\r\n        // onEvent={this.handleEvent}\r\n        // onCallback={this.handleCallback}\r\n        // initialSettings={{ startDate: \"1/1/2014\", endDate: \"3/1/2014\" }}\r\n        // locale={{\r\n        //   format: \"DD/MM/YYYY\",\r\n        // }}\r\n        onApply={(event, picker) => {\r\n          this.setState(\r\n            {\r\n              startDate: picker.startDate,\r\n              endDate: picker.endDate,\r\n            },\r\n            () => {\r\n              onChange && onChange([picker.startDate, picker.endDate])\r\n            }\r\n          )\r\n        }}\r\n        {...attrs}\r\n      >\r\n        <Wrap>\r\n          {_valuesDates[0] != null && _valuesDates[1] != null ? (\r\n            <button>\r\n              {_valuesDates[0].format(\"DD/MM/YYYY\")} -{\" \"}\r\n              {_valuesDates[1].format(\"DD/MM/YYYY\")}\r\n            </button>\r\n          ) : (\r\n            <button style={{ color: \"var(--color-placeholder)\" }}>\r\n              {attrs.placeholder || i18next.t(\"Pick Date\")}\r\n            </button>\r\n          )}\r\n        </Wrap>\r\n      </DateRangePicker>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DateRange\r\n"],"sourceRoot":""}