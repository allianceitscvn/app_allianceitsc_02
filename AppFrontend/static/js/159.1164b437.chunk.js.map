{"version":3,"sources":["modules/adminpanel/MyBase/Types/datefromto_flatpickr.js","../node_modules/flatpickr/dist/plugins/rangePlugin.js"],"names":["GlobalStyles","createGlobalStyle","WrapInput","styled","div","CustomInput","value","defaultValue","inputRef","props","console","warn","refInput","React","useRef","style","position","ref","r","current","className","opacity","left","top","onClick","click","length","HFormat","format","type","MyControlDateFlatPickr","getIsShowTime","getFormatDate","getMoreProps","getMoreOptions","getFormatDateFlatPickr","this","onChange","attrs","date","options","enableTime","dateFormat","disableMobile","plugins","RangePlugin","render","Component","module","exports","__spreadArrays","s","i","il","arguments","Array","k","a","j","jl","rangePlugin","config","fp","secondInput","_secondInputFocused","_prevDates","createSecondInput","input","Element","window","document","querySelector","errorHandler","Error","wrap","_input","cloneNode","removeAttribute","_flatpickr","undefined","parsedDate","parseDate","selectedDates","push","setAttribute","clickOpens","_bind","latestSelectedDateObj","_setHoursFromDate","jumpToDate","isOpen","open","e","preventDefault","allowInput","key","setDate","parentNode","insertBefore","nextSibling","plugin","onParseConfig","mode","altInput","altFormat","onReady","ignoredFocusElements","onValueUpdate","loadedPlugins","onPreCalendarPosition","_positionElement","setTimeout","focus","onDestroy","removeChild","selDates","_a","_b","_c","newSelectedDate","newDates","map","d","formatDate","factory"],"mappings":"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","file":"static/js/159.1164b437.chunk.js","sourcesContent":["import \"flatpickr/dist/themes/material_blue.css\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport React from \"react\"\r\nimport styled, { createGlobalStyle } from \"styled-components\"\r\nimport { HFormat } from \"@macashipo/mlib\"\r\nimport RangePlugin from \"flatpickr/dist/plugins/rangePlugin\"\r\nconst GlobalStyles = createGlobalStyle`\r\n  // .flatpickr-input[readonly]{\r\n  //   background-color: #fff;\r\n  // }\r\n`\r\nconst WrapInput = styled.div`\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  border: 1px solid #cccccc;\r\n  padding: 0.5rem;\r\n  border-radius: 4px;\r\n  & > span {\r\n    flex: 1;\r\n    text-align: center;\r\n    &.a-seperator {\r\n      flex: 0;\r\n    }\r\n  }\r\n`\r\nconst CustomInput = ({ value, defaultValue, inputRef, ...props }) => {\r\n  console.warn(\"render Custom Input\", value, defaultValue, props)\r\n  const refInput = React.useRef(null)\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <input\r\n        {...props}\r\n        defaultValue={defaultValue}\r\n        ref={r => {\r\n          console.warn(\"r:\", r)\r\n          if (r) {\r\n            refInput.current = r\r\n            inputRef(r)\r\n          }\r\n        }}\r\n        className=\"zz\"\r\n        style={{ opacity: 0, position: \"absolute\", left: 0, top: 0 }}\r\n      />\r\n      <WrapInput\r\n        onClick={() => {\r\n          console.warn(\"click\", inputRef, refInput.current)\r\n          refInput.current.click()\r\n        }}\r\n      >\r\n        <span>\r\n          {value != null &&\r\n            value.length > 0 &&\r\n            HFormat.format(value[0], { type: \"date\", format: \"DD/MM/YYYY\" })}\r\n        </span>\r\n        <span className=\"a-seperator\">-</span>\r\n        <span>\r\n          {value != null &&\r\n            value.length > 1 &&\r\n            HFormat.format(value[1], { type: \"date\", format: \"DD/MM/YYYY\" })}\r\n        </span>\r\n      </WrapInput>\r\n    </div>\r\n  )\r\n}\r\nclass MyControlDateFlatPickr extends React.Component {\r\n  getIsShowTime = () => {\r\n    return false\r\n  }\r\n  getFormatDate = () => {\r\n    return \"d/m/Y\"\r\n  }\r\n  componentDidMount() {}\r\n  getMoreProps = () => {\r\n    return {}\r\n  }\r\n  getMoreOptions = () => {\r\n    return {}\r\n  }\r\n  getFormatDateFlatPickr = () => {\r\n    return this.getFormatDate() || \"d/m/Y\"\r\n  }\r\n  render() {\r\n    const { onChange, value, attrs } = this.props\r\n    return (\r\n      <>\r\n        <Flatpickr\r\n          // data-enable-time\r\n          value={value}\r\n          className=\"form-control\"\r\n          onChange={date => {\r\n            console.warn(\"onChange:\", date)\r\n            onChange && onChange(date)\r\n          }}\r\n          options={{\r\n            enableTime: this.getIsShowTime(),\r\n            dateFormat: this.getFormatDateFlatPickr(),\r\n            disableMobile: \"true\",\r\n            plugins: [new RangePlugin({})], //input: \"#secondRangeInput\"\r\n            ...this.getMoreOptions(),\r\n          }}\r\n          render={({ defaultValue, value, ...props }, ref) => {\r\n            console.warn(\"render:\", defaultValue)\r\n            return (\r\n              <CustomInput\r\n                {...props}\r\n                value={value}\r\n                defaultValue={defaultValue}\r\n                inputRef={ref}\r\n              />\r\n            )\r\n          }}\r\n          {...this.getMoreProps()}\r\n          {...attrs}\r\n        />\r\n        <GlobalStyles />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyControlDateFlatPickr\r\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.rangePlugin = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    function rangePlugin(config) {\n        if (config === void 0) { config = {}; }\n        return function (fp) {\n            var dateFormat = \"\", secondInput, _secondInputFocused, _prevDates;\n            var createSecondInput = function () {\n                if (config.input) {\n                    secondInput =\n                        config.input instanceof Element\n                            ? config.input\n                            : window.document.querySelector(config.input);\n                    if (!secondInput) {\n                        fp.config.errorHandler(new Error(\"Invalid input element specified\"));\n                        return;\n                    }\n                    if (fp.config.wrap) {\n                        secondInput = secondInput.querySelector(\"[data-input]\");\n                    }\n                }\n                else {\n                    secondInput = fp._input.cloneNode();\n                    secondInput.removeAttribute(\"id\");\n                    secondInput._flatpickr = undefined;\n                }\n                if (secondInput.value) {\n                    var parsedDate = fp.parseDate(secondInput.value);\n                    if (parsedDate)\n                        fp.selectedDates.push(parsedDate);\n                }\n                secondInput.setAttribute(\"data-fp-omit\", \"\");\n                if (fp.config.clickOpens) {\n                    fp._bind(secondInput, [\"focus\", \"click\"], function () {\n                        if (fp.selectedDates[1]) {\n                            fp.latestSelectedDateObj = fp.selectedDates[1];\n                            fp._setHoursFromDate(fp.selectedDates[1]);\n                            fp.jumpToDate(fp.selectedDates[1]);\n                        }\n                        _secondInputFocused = true;\n                        fp.isOpen = false;\n                        fp.open(undefined, config.position === \"left\" ? fp._input : secondInput);\n                    });\n                    fp._bind(fp._input, [\"focus\", \"click\"], function (e) {\n                        e.preventDefault();\n                        fp.isOpen = false;\n                        fp.open();\n                    });\n                }\n                if (fp.config.allowInput)\n                    fp._bind(secondInput, \"keydown\", function (e) {\n                        if (e.key === \"Enter\") {\n                            fp.setDate([fp.selectedDates[0], secondInput.value], true, dateFormat);\n                            secondInput.click();\n                        }\n                    });\n                if (!config.input)\n                    fp._input.parentNode &&\n                        fp._input.parentNode.insertBefore(secondInput, fp._input.nextSibling);\n            };\n            var plugin = {\n                onParseConfig: function () {\n                    fp.config.mode = \"range\";\n                    dateFormat = fp.config.altInput\n                        ? fp.config.altFormat\n                        : fp.config.dateFormat;\n                },\n                onReady: function () {\n                    createSecondInput();\n                    fp.config.ignoredFocusElements.push(secondInput);\n                    if (fp.config.allowInput) {\n                        fp._input.removeAttribute(\"readonly\");\n                        secondInput.removeAttribute(\"readonly\");\n                    }\n                    else {\n                        secondInput.setAttribute(\"readonly\", \"readonly\");\n                    }\n                    fp._bind(fp._input, \"focus\", function () {\n                        fp.latestSelectedDateObj = fp.selectedDates[0];\n                        fp._setHoursFromDate(fp.selectedDates[0]);\n                        _secondInputFocused = false;\n                        fp.jumpToDate(fp.selectedDates[0]);\n                    });\n                    if (fp.config.allowInput)\n                        fp._bind(fp._input, \"keydown\", function (e) {\n                            if (e.key === \"Enter\")\n                                fp.setDate([fp._input.value, fp.selectedDates[1]], true, dateFormat);\n                        });\n                    fp.setDate(fp.selectedDates, false);\n                    plugin.onValueUpdate(fp.selectedDates);\n                    fp.loadedPlugins.push(\"range\");\n                },\n                onPreCalendarPosition: function () {\n                    if (_secondInputFocused) {\n                        fp._positionElement = secondInput;\n                        setTimeout(function () {\n                            fp._positionElement = fp._input;\n                        }, 0);\n                    }\n                },\n                onChange: function () {\n                    if (!fp.selectedDates.length) {\n                        setTimeout(function () {\n                            if (fp.selectedDates.length)\n                                return;\n                            secondInput.value = \"\";\n                            _prevDates = [];\n                        }, 10);\n                    }\n                    if (_secondInputFocused) {\n                        setTimeout(function () {\n                            secondInput.focus();\n                        }, 0);\n                    }\n                },\n                onDestroy: function () {\n                    if (!config.input)\n                        secondInput.parentNode &&\n                            secondInput.parentNode.removeChild(secondInput);\n                },\n                onValueUpdate: function (selDates) {\n                    var _a, _b, _c;\n                    if (!secondInput)\n                        return;\n                    _prevDates =\n                        !_prevDates || selDates.length >= _prevDates.length\n                            ? __spreadArrays(selDates) : _prevDates;\n                    if (_prevDates.length > selDates.length) {\n                        var newSelectedDate = selDates[0];\n                        var newDates = _secondInputFocused\n                            ? [_prevDates[0], newSelectedDate]\n                            : [newSelectedDate, _prevDates[1]];\n                        fp.setDate(newDates, false);\n                        _prevDates = __spreadArrays(newDates);\n                    }\n                    _a = fp.selectedDates.map(function (d) { return fp.formatDate(d, dateFormat); }), _b = _a[0], fp._input.value = _b === void 0 ? \"\" : _b, _c = _a[1], secondInput.value = _c === void 0 ? \"\" : _c;\n                },\n            };\n            return plugin;\n        };\n    }\n\n    return rangePlugin;\n\n})));\n"],"sourceRoot":""}