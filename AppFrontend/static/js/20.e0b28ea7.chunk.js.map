{"version":3,"sources":["../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/react-virtualized/node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/react-virtualized/node_modules/prop-types/index.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/react-virtualized/node_modules/prop-types/lib/ReactPropTypesSecret.js"],"names":["calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","this","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","key","value","_ref2","_lastMeasuredIndex","index","Error","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","i","undefined","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","Object","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","document","createElement","scrollbarSize","recalc","canUseDOM","scrollDiv","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","call","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","props","_this","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","polyfill","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","offsetHeight","_window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","createDetectElementResize","addResizeListener","_onResize","removeResizeListener","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","element","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","prototype","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","indexOf","splice","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","addEventListener","unregisterScrollListener","removeEventListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","module","exports","require","len","arr2","__esModule","_typeof","assertThisInitialized","TypeError","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","configurable","arrayLikeToArray","minLen","name","from","test","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","err","objectWithoutPropertiesLoose","excluded","sourceSymbolKeys","propertyIsEnumerable","arrayWithoutHoles","iterableToArray","nonIterableSpread","iter","hostWindow","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","__animationListener__","detachEvent","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"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","file":"static/js/20.e0b28ea7.chunk.js","sourcesContent":["/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"sourceRoot":""}