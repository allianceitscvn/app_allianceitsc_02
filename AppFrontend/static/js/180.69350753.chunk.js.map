{"version":3,"sources":["core/modules/dev/MyPage/Types/Dev_CustomHook.tsx","core/hook/useRequestAxios/useCustomHook.tsx"],"names":["Local","lastFetch","f5","PageDev","useState","count","setCount","obj","result","useRef","plus","console","warn","get","current","useFetchObjFix3","a","useEffect","onClick","c"],"mappings":"sKASMA,EAAa,CACjBC,UAAW,KACXC,GAAI,MA8DSC,UA3DC,WACd,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAsBMJ,EC8BgB,SAAAK,GACtB,MAA0BH,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAMME,GALSC,iBAAOF,GAKPE,iBAAO,CACpBJ,QACAK,KANW,WACXC,QAAQC,KAAK,QAASL,EAAKF,GAC3BC,EAASD,EAAQ,IAKjBQ,IAAK,WAEH,OADAF,QAAQC,KAAK,YAAaP,GACnBA,MAMX,OAFAM,QAAQC,KAAKL,EAAb,sBAAyCF,GAElCG,EAAOM,QDhDHC,CAAgB,CAAEC,EAAG,IAOhC,OANAL,QAAQC,KAAK,sBAAuBV,EAAIA,IAAOF,EAAME,IACrDF,EAAME,GAAKA,EACXe,qBAAU,WACRf,EAAGQ,SACF,CAACR,IAGF,gCACE,8CACA,sBACEgB,QAAS,WACPZ,EAASD,EAAQ,IAFrB,sBAKYA,EALZ,OAOA,sBACEa,QAAS,WACP,IAAMC,EAAIjB,EAAGW,MACbF,QAAQC,KAAK,OAAQO,IAHzB,wBAMcjB,EAAGG,MANjB,IAOE,qBACEa,QAAS,WACPhB,EAAGQ,QAFP","file":"static/js/180.69350753.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport {\r\n  // useFetch,\r\n  // useFetchObj,\r\n  // useFetchObjFix,\r\n  // useFetchObjFix2,\r\n  useFetchObjFix3,\r\n} from \"src/core/hook/useRequestAxios/useCustomHook\"\r\n\r\nconst Local: any = {\r\n  lastFetch: null,\r\n  f5: null,\r\n}\r\n\r\nconst PageDev = () => {\r\n  const [count, setCount] = useState(0)\r\n  // const { status, data } = useFetch(\r\n  //   \"https://jsonplaceholder.typicode.com/todos/1\"\r\n  // )\r\n  // console.warn(\"render useFetch:\", status, data)\r\n\r\n  // const f2 = useFetch(\"http://apple.com\")\r\n  // console.warn(\"f2 alway change after re-render:\", f2 !== Local.lastFetch)\r\n  // Local.lastFetch = f2\r\n\r\n  // const f3 = useFetchObj({ a: 1 })\r\n  // console.warn(\"render useFetch f3:\", f3)\r\n\r\n  // const f4 = useFetchObjFix({ a: 1 })\r\n  // console.warn(\"render useFetch f4:\", f4)\r\n\r\n  // const f5 = useFetchObjFix2({ a: 1 })\r\n  // console.warn(\"render useFetch f5:\", f5)\r\n  // useEffect(() => {\r\n  //   f5.plus()\r\n  // }, [])\r\n\r\n  const f5 = useFetchObjFix3({ a: 1 })\r\n  console.warn(\"render useFetch f5:\", f5, f5 === Local.f5)\r\n  Local.f5 = f5\r\n  useEffect(() => {\r\n    f5.plus()\r\n  }, [f5])\r\n\r\n  return (\r\n    <div>\r\n      <div>Custom Hook</div>\r\n      <div\r\n        onClick={() => {\r\n          setCount(count + 1)\r\n        }}\r\n      >\r\n        + count:({count})\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          const c = f5.get()\r\n          console.warn(\"get:\", c)\r\n        }}\r\n      >\r\n        get count:({f5.count})\r\n        <div\r\n          onClick={() => {\r\n            f5.plus()\r\n          }}\r\n        >\r\n          plus\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageDev\r\n","/*eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { useState, useRef, useEffect, useDebugValue } from \"react\"\r\n\r\nconst useFetch = url => {\r\n  const [status, setStatus] = useState(\"idle\")\r\n  const [data, setData] = useState([])\r\n  useEffect(() => {\r\n    console.warn(\"useFetch-useEffect:\", url)\r\n    if (!url) return\r\n    const fetchData = async () => {\r\n      setStatus(`[${url}] fetching  -----`)\r\n      const response = await fetch(url)\r\n      const data = await response.json()\r\n      setData(data)\r\n      setStatus(\"fetched\")\r\n    }\r\n    fetchData()\r\n  }, [url])\r\n  console.warn(`[${url}]: useFetch is called:`, status, data)\r\n  return { status, data }\r\n}\r\n\r\nconst useFetchObj = obj => {\r\n  const [status, setStatus] = useState(\"idle\")\r\n  useEffect(() => {\r\n    console.warn(obj, \"useFetch-useEffect:\")\r\n    setTimeout(() => {\r\n      setStatus(prev => {\r\n        return prev + 1\r\n      })\r\n    }, 2000)\r\n  }, [obj]) //depend la obj -> luon bi doi khi re-render -> luon goi useEffect\r\n  console.warn(obj, `useFetch is called:`, status)\r\n  return { status }\r\n}\r\n\r\nconst useFetchObjFix = obj => {\r\n  const [status, setStatus] = useState(\"idle\")\r\n  const iniObj = useRef(obj)\r\n  useEffect(() => {\r\n    console.warn(iniObj.current, \"useFetch-useEffect:\")\r\n    setTimeout(() => {\r\n      setStatus(prev => {\r\n        return prev + 1\r\n      })\r\n    }, 2000)\r\n  }, []) //depend la ref obj\r\n  console.warn(obj, `useFetch is called:`, status)\r\n  return { status }\r\n}\r\n\r\nconst useFetchObjFix2 = obj => {\r\n  const [count, setCount] = useState(1)\r\n  const iniObj = useRef(obj)\r\n  const plus = () => {\r\n    setCount(count + 1)\r\n  }\r\n  console.warn(obj, `useFetch is called:`, count)\r\n  return {\r\n    count,\r\n    plus,\r\n    get: () => {\r\n      return count\r\n    },\r\n  }\r\n}\r\n\r\nconst useFetchObjFix3 = obj => {\r\n  const [count, setCount] = useState(1)\r\n  const iniObj = useRef(obj)\r\n  const plus = () => {\r\n    console.warn(\"plus:\", obj, count)\r\n    setCount(count + 1) //goi fn nay goi lai console.warn duoi cung chi 1 lan roi thoi\r\n  }\r\n  const result = useRef({\r\n    count,\r\n    plus: plus,\r\n    get: () => {\r\n      console.warn(\"getcount:\", count)\r\n      return count\r\n    },\r\n  })\r\n\r\n  console.warn(obj, `useFetch is called:`, count)\r\n  // useDebugValue(\"Test useDebugValue\")//chua biet cach xai\r\n  return result.current\r\n}\r\n\r\nexport {\r\n  useFetch,\r\n  useFetchObj,\r\n  useFetchObjFix,\r\n  useFetchObjFix2,\r\n  useFetchObjFix3,\r\n}\r\n"],"sourceRoot":""}