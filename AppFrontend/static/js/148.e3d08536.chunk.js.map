{"version":3,"sources":["modules/qlproject/MyUI/prj_new_task.js","../node_modules/reactstrap/es/Spinner.js","modules/qlproject/MyUI/prj_task_item.js"],"names":["ColorByStatus","TODO","DONE","DOING","PENDING","EMPTY","getColorByStatus","item","_status","String","TaskStatusCode","toUpperCase","MPDailyTaskItem","props","requestUpdate","fieldName","value","data","Id","ApiGeneric","request","method","path","name","Values","FieldName","NewValue","successCallBack","response","Data","Object","keys","k","forceUpdate","errorCallBack","err","console","log","requestAdd","doTask","fnList","setState","loading","HUtils","runFuntion","_getCanEdit","_canEdit","_getOptions","_getProjects","_optionsProjects","_options","ProjectList","_getStaffOfProject","warn","_staffOfProject","_projectId","ProjectId","i","length","Value","UserProject","_getStatus","_optionsStatus","TaskStatusCodeList","state","this","canAdd","TaskName","WrapLayout","className","style","background","overlay","propsOverlay","type","sourceData","valueSelected","onChange","itemOption","Text","hide","overlayClassName","placement","destroyTooltipOnHide","ProjectName","AssignToId","AssignToName","defaultValue","placeholder","rows","onBlur","ev","currentTarget","TaskLink","onUpdateValue","v","Note","cbSuccess","marginTop","display","alignItems","justifyContent","marginLeft","onClick","HUI","showToastWarning","Component","styled","div","_excluded","propTypes","tag","tagPropType","PropTypes","string","size","color","cssModule","object","children","Spinner","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","role","defaultProps","Status","UISliderRange","useState","setValue","flexDirection","marginRight","position","height","flex","userSelect","left","top","right","bottom","width","min","max","onMouseUp","UIPopoverTaskLink","setV","onlyLink","WrapTaskLink","stopPropagation","title","href","target","rel","WrapPopoverTaskLink","startsWith","opacity","UIPopoverTaskNote","disabled","WrapPopoverTaskNote","requestDelete","requestDoneTask","task","loadingDoneTask","requestDoTask","loadingDoTask","multi","_values","map","showMoreDetail","mode","IM_AssignToName","AssignById","IM_AssignByName","spellCheck","PercentCompleted","MyModal","showConfirm","msg","onClickOK","cModal","showAssignTo","HFormat","format","IM_CreatedDate"],"mappings":"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","file":"static/js/148.e3d08536.chunk.js","sourcesContent":["import { HUtils } from \"@macashipo/mlib\"\r\nimport React, { Component } from \"react\"\r\nimport { Spinner } from \"reactstrap\"\r\nimport { MyUI, Popover } from \"src/core/components\"\r\nimport { HUI } from \"src/core/helpers\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport styled from \"styled-components\"\r\nimport { UIPopoverTaskLink, UIPopoverTaskNote } from \"./prj_task_item\"\r\nconst ColorByStatus = {\r\n  TODO: \"#17a2b8\",\r\n  DONE: \"#28a745\",\r\n  DOING: \"#007bff\",\r\n  PENDING: \"#ffc107\",\r\n  EMPTY: \"#6faae5\",\r\n}\r\nconst getColorByStatus = (item = {}) => {\r\n  let _status = String(item.TaskStatusCode).toUpperCase()\r\n  if (ColorByStatus[_status]) {\r\n    return ColorByStatus[_status]\r\n  }\r\n  return \"#6faae5\"\r\n}\r\n\r\nclass MPDailyTaskItem extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: false,\r\n    }\r\n  }\r\n  componentDidMount() {}\r\n  requestUpdate = (fieldName, value) => {\r\n    const data = this.props.data || {}\r\n    if (data.Id) {\r\n      if (data[fieldName] != value) {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"UserTask\",\r\n            name: \"UpdateFields\",\r\n          },\r\n          data: {\r\n            Id: data.Id,\r\n            Values: [{ FieldName: fieldName, NewValue: value }],\r\n          },\r\n          successCallBack: response => {\r\n            if (response.Data) {\r\n              for (let k of Object.keys(response.Data)) {\r\n                data[k] = response.Data[k]\r\n              }\r\n            }\r\n            this.forceUpdate()\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n          },\r\n        })\r\n      }\r\n    } else {\r\n      data[fieldName] = value\r\n      this.forceUpdate()\r\n    }\r\n  }\r\n  requestAdd = ({ doTask } = { doTask: false }) => {\r\n    const data = this.props.data || {}\r\n    const fnList = this.props.fnList || {}\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"UserTask\",\r\n            name: \"Add\",\r\n          },\r\n          data: {\r\n            ...data,\r\n          },\r\n          successCallBack: response => {\r\n            if (response.Data) {\r\n              for (let k of Object.keys(response.Data)) {\r\n                data[k] = response.Data[k]\r\n              }\r\n            }\r\n            this.forceUpdate()\r\n            if (doTask) {\r\n              ApiGeneric({\r\n                request: {\r\n                  method: \"POST\",\r\n                  path: \"UserTask\",\r\n                  name: `SetStatusStartDoingTask/${response.Data.Id}`,\r\n                },\r\n                data: {},\r\n                successCallBack: response => {\r\n                  //hide modal and reload list\r\n                  HUtils.runFuntion(fnList, \"reloadTasks\", [])\r\n                  HUtils.runFuntion(fnList, \"hideModal\", [])\r\n                },\r\n                errorCallBack: err => {\r\n                  console.log(err)\r\n                  this.setState({ loading: false })\r\n                },\r\n              })\r\n            } else {\r\n              //hide modal and reload list\r\n              HUtils.runFuntion(fnList, \"reloadTasks\", [])\r\n              HUtils.runFuntion(fnList, \"hideModal\", [])\r\n            }\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({ loading: false })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  _getCanEdit = () => {\r\n    if (this._canEdit != null) {\r\n      return this._canEdit\r\n    }\r\n    const fnList = this.props.fnList || {}\r\n    let _canEdit = false\r\n    if (fnList && fnList[\"getCanEdit\"]) {\r\n      _canEdit = fnList[\"getCanEdit\"]()\r\n    }\r\n    this._canEdit = _canEdit\r\n    return _canEdit\r\n  }\r\n  _getOptions = () => {\r\n    const fnList = this.props.fnList || {}\r\n    let _options = HUtils.runFuntion(fnList, \"getOptions\") || {}\r\n    return _options\r\n  }\r\n  _getProjects = () => {\r\n    if (this._optionsProjects) {\r\n      return this._optionsProjects\r\n    }\r\n    this._optionsProjects = []\r\n    let _options = this._getOptions()\r\n    if (_options && _options.ProjectList) {\r\n      this._optionsProjects = _options.ProjectList\r\n    }\r\n    return this._optionsProjects\r\n  }\r\n  _getStaffOfProject = () => {\r\n    const data = this.props.data || {}\r\n    console.warn(\"_getStaffOfProject\", data, this._staffOfProject)\r\n    let _projectId = data.ProjectId\r\n    if (_projectId) {\r\n      if (this._staffOfProject) {\r\n        return this._staffOfProject[_projectId] || []\r\n      }\r\n      console.warn(\"_staffOfProject\", this._staffOfProject)\r\n      this._staffOfProject = {}\r\n      let _options = this._getOptions()\r\n      if (_options && _options.ProjectList) {\r\n        for (let i = 0; i < _options.ProjectList.length; i++) {\r\n          this._staffOfProject[_options.ProjectList[i].Value] =\r\n            _options.ProjectList[i].UserProject\r\n        }\r\n      }\r\n      return this._staffOfProject[_projectId] || []\r\n    }\r\n    return []\r\n  }\r\n  _getStatus = () => {\r\n    if (this._optionsStatus) {\r\n      return this._optionsStatus\r\n    }\r\n    this._optionsStatus = []\r\n    let _options = this._getOptions()\r\n    if (_options && _options.TaskStatusCodeList) {\r\n      this._optionsStatus = _options.TaskStatusCodeList\r\n    }\r\n    console.log(\"status:\", _options, this._optionsStatus)\r\n    return this._optionsStatus\r\n  }\r\n  render() {\r\n    const data = this.props.data || {}\r\n    const fnList = this.props.fnList || {}\r\n    const canAdd = data.ProjectId != null && data.TaskName != null\r\n    if (this._getCanEdit()) {\r\n      console.warn(\"render\", data)\r\n      return (\r\n        <WrapLayout className=\"a-canedit\">\r\n          <div\r\n            className=\"a-header\"\r\n            style={{ background: getColorByStatus(data) }}\r\n          >\r\n            <div className=\"a-headerleft\">\r\n              <Popover\r\n                overlay={propsOverlay => {\r\n                  return (\r\n                    <MyUI\r\n                      type=\"select_box_search_v2\"\r\n                      sourceData={this._getProjects()}\r\n                      valueSelected={data.ProjectId}\r\n                      onChange={itemOption => {\r\n                        console.warn(\"onChange:\", itemOption, itemOption.Value)\r\n                        this.requestUpdate(\"ProjectId\", itemOption.Value)\r\n                        this.requestUpdate(\"ProjectName\", itemOption.Text)\r\n                        //hide popover\r\n                        if (propsOverlay.hide) {\r\n                          propsOverlay.hide()\r\n                        }\r\n                      }}\r\n                    />\r\n                  )\r\n                }}\r\n                overlayClassName=\"m-popover\"\r\n                placement=\"bottom\"\r\n                destroyTooltipOnHide={true}\r\n              >\r\n                <div className=\"a-pick-project\">\r\n                  {data.ProjectName || \"[Project]\"}\r\n                </div>\r\n              </Popover>\r\n              {data.ProjectId != null && data.ProjectId.length > 0 && (\r\n                <Popover\r\n                  overlay={propsOverlay => {\r\n                    return (\r\n                      <MyUI\r\n                        type=\"select_box_search_v2\"\r\n                        sourceData={this._getStaffOfProject()}\r\n                        valueSelected={data.AssignToId}\r\n                        onChange={itemOption => {\r\n                          console.warn(\r\n                            \"onChange:\",\r\n                            itemOption,\r\n                            itemOption.Value\r\n                          )\r\n                          this.requestUpdate(\"AssignToId\", itemOption.Value)\r\n                          this.requestUpdate(\"AssignToName\", itemOption.Text)\r\n                          //hide popover\r\n                          if (propsOverlay.hide) {\r\n                            propsOverlay.hide()\r\n                          }\r\n                        }}\r\n                      />\r\n                    )\r\n                  }}\r\n                  overlayClassName=\"m-popover\"\r\n                  placement=\"bottom\"\r\n                  destroyTooltipOnHide={true}\r\n                >\r\n                  <div className=\"a-pick-assignto\">\r\n                    Assign to{\" \"}\r\n                    {data.AssignToId\r\n                      ? `${data.AssignToName || data.AssignToId}`\r\n                      : \"me\"}\r\n                  </div>\r\n                </Popover>\r\n              )}\r\n            </div>\r\n            <div className=\"a-right-info\">\r\n              <Popover\r\n                overlay={propsOverlay => {\r\n                  return (\r\n                    <MyUI\r\n                      type=\"select_box_search_v2\"\r\n                      sourceData={this._getStatus()}\r\n                      valueSelected={data.TaskStatusCode}\r\n                      onChange={itemOption => {\r\n                        console.warn(\"onChange:\", itemOption, itemOption.Value)\r\n                        this.requestUpdate(\"TaskStatusCode\", itemOption.Value)\r\n                        //hide popover\r\n                        if (propsOverlay.hide) {\r\n                          propsOverlay.hide()\r\n                        }\r\n                      }}\r\n                    />\r\n                  )\r\n                }}\r\n                overlayClassName=\"m-popover\"\r\n                placement=\"bottom\"\r\n                destroyTooltipOnHide={true}\r\n              >\r\n                <div className=\"a-pick-status\">\r\n                  {data.TaskStatusCode || \"[Status]\"}\r\n                </div>\r\n              </Popover>\r\n            </div>\r\n          </div>\r\n          <div className=\"a-name\">\r\n            <textarea\r\n              defaultValue={data.TaskName}\r\n              placeholder=\"Task Name\"\r\n              rows={4}\r\n              onBlur={ev => {\r\n                this.requestUpdate(\"TaskName\", ev.currentTarget.value)\r\n              }}\r\n            />\r\n            <div className=\"a-side-right\">\r\n              <UIPopoverTaskLink\r\n                defaultValue={data.TaskLink}\r\n                fnList={{\r\n                  onUpdateValue: v => {\r\n                    this.requestUpdate(\"TaskLink\", v)\r\n                  },\r\n                }}\r\n              />\r\n              <UIPopoverTaskNote\r\n                defaultValue={data.Note}\r\n                fnList={{\r\n                  onUpdateValue: (v, cbSuccess) => {\r\n                    this.requestUpdate(\"Note\", v, cbSuccess)\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* <Popover\r\n            overlay={propsOverlay => {\r\n              return (\r\n                <UISliderRange\r\n                  defaultValue={data.PercentCompleted}\r\n                  fnList={{\r\n                    onUpdateValue: v => {\r\n                      this.requestUpdate(\"PercentCompleted\", v)\r\n                    },\r\n                  }}\r\n                />\r\n              )\r\n            }}\r\n            overlayClassName=\"m-popover\"\r\n            placement=\"bottom\"\r\n            destroyTooltipOnHide={true}\r\n          >\r\n            <div\r\n              className=\"progress\"\r\n              style={{ height: \"8px\", marginTop: \"5px\" }}\r\n            >\r\n              <div\r\n                className=\"progress-bar bg-success progress-bar-striped\"\r\n                role=\"progressbar\"\r\n                style={{ width: `${data.PercentCompleted || 0}%` }}\r\n              ></div>\r\n            </div>\r\n          </Popover> */}\r\n          <div\r\n            style={{\r\n              marginTop: \"10px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              style={{ marginLeft: \"2px\" }}\r\n              onClick={() => {\r\n                if (canAdd) {\r\n                  this.requestAdd()\r\n                } else {\r\n                  console.log(\"props\", this.props)\r\n                  HUI.showToastWarning(\r\n                    \"Please chose project and enter your task name to create new task\"\r\n                  )\r\n                }\r\n              }}\r\n            >\r\n              Add new\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              style={{ marginLeft: \"2px\" }}\r\n              onClick={() => {\r\n                if (canAdd) {\r\n                  this.requestAdd({ doTask: true })\r\n                } else {\r\n                  HUI.showToastWarning(\r\n                    \"Please chose project and enter your task name to create new task\"\r\n                  )\r\n                }\r\n              }}\r\n            >\r\n              Add and Do Task\r\n            </button>\r\n          </div>\r\n          {this.state.loading === true && (\r\n            <div className=\"a-loading\">\r\n              <Spinner />\r\n            </div>\r\n          )}\r\n        </WrapLayout>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst WrapLayout = styled.div`\r\n  position: relative;\r\n  background: white;\r\n  padding: 10px;\r\n  box-shadow: 0 0 0 1px rgba(53, 72, 91, 0.07), 0 2px 2px rgba(0, 0, 0, 0.01),\r\n    0 4px 4px rgba(0, 0, 0, 0.02), 0 10px 8px rgba(0, 0, 0, 0.03),\r\n    0 15px 15px rgba(0, 0, 0, 0.03), 0 30px 30px rgba(0, 0, 0, 0.04),\r\n    0 70px 65px rgba(0, 0, 0, 0.05);\r\n  & > .a-loading {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background: #e9e9e97d;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  &.a-canedit {\r\n    & .a-pick-assignto {\r\n      cursor: pointer;\r\n      padding: 0px 5px;\r\n      &:hover {\r\n        background: #ededed6e;\r\n        border-radius: 2px;\r\n      }\r\n    }\r\n    & .a-pick-project {\r\n      cursor: pointer;\r\n      padding: 0px 5px;\r\n      &:hover {\r\n        background: #ededed6e;\r\n        border-radius: 2px;\r\n      }\r\n    }\r\n    & .a-pick-status {\r\n      cursor: pointer;\r\n      padding: 0px 5px;\r\n      &:hover {\r\n        background: #ededed6e;\r\n      }\r\n    }\r\n    & .progress {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  & .a-name {\r\n    position: relative;\r\n    & textarea {\r\n      border: 0px;\r\n      width: 100%;\r\n      outline: none;\r\n    }\r\n    & .a-side-right {\r\n      position: absolute;\r\n      top: 0px;\r\n      right: 0px;\r\n      background: whitesmoke;\r\n      width: 20px;\r\n      // height: 100px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      box-shadow: 0px 4px 8px -2px rgba(9, 30, 66, 0.25),\r\n        0px 0px 0px 1px rgba(9, 30, 66, 0.08);\r\n    }\r\n  }\r\n  & .a-header {\r\n    display: flex;\r\n    background: green;\r\n    margin: -10px;\r\n    margin-bottom: 5px;\r\n    color: white;\r\n    padding: 2px;\r\n    padding-left: 5px;\r\n    padding-right: 5px;\r\n    font-size: 13px;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    & .a-headerleft {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    & .a-right-info {\r\n      display: flex;\r\n      align-items: center;\r\n      & > div {\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default MPDailyTaskItem\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import { HFormat, HUtils } from \"@macashipo/mlib\"\r\nimport classNames from \"classnames\"\r\nimport React, { Component } from \"react\"\r\nimport { Spinner } from \"reactstrap\"\r\nimport { MyModal, MyUI, Popover } from \"src/core/components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport styled from \"styled-components\"\r\n\r\nconst ColorByStatus = {\r\n  TODO: \"#17a2b8\",\r\n  DONE: \"#28a745\",\r\n  DOING: \"#007bff\",\r\n  PENDING: \"#ffc107\",\r\n  EMPTY: \"#6faae5\",\r\n}\r\nconst Status = {\r\n  TODO: \"ToDo\",\r\n  DONE: \"Done\",\r\n  DOING: \"Doing\",\r\n  PENDING: \"Pending\",\r\n  EMPTY: \"\",\r\n}\r\nconst getColorByStatus = (item = {}) => {\r\n  let _status = String(item.TaskStatusCode).toUpperCase()\r\n  if (ColorByStatus[_status]) {\r\n    return ColorByStatus[_status]\r\n  }\r\n  return \"#6faae5\"\r\n}\r\n\r\nconst UISliderRange = props => {\r\n  const [value, setValue] = React.useState(props.defaultValue || 0)\r\n  console.warn(\"render slider:\", props)\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\r\n    >\r\n      <div style={{ marginRight: \"10px\" }}>Complete: {value}%</div>\r\n      <div style={{ position: \"relative\", height: \"24px\", flex: 1 }}>\r\n        <div\r\n          className=\"progress\"\r\n          style={{\r\n            userSelect: \"none\",\r\n            height: \"8px\",\r\n            position: \"absolute\",\r\n            left: 0,\r\n            top: 8,\r\n            right: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <div\r\n            className=\"progress-bar bg-success progress-bar-striped\"\r\n            role=\"progressbar\"\r\n            style={{ width: `${value}%` }}\r\n          ></div>\r\n        </div>\r\n        <input\r\n          style={{ position: \"absolute\", height: \"24px\" }}\r\n          type=\"range\"\r\n          className=\"form-range\"\r\n          defaultValue={props.defaultValue || 0}\r\n          min=\"0\"\r\n          max=\"100\"\r\n          onChange={ev => {\r\n            console.log(\"change:\", ev.currentTarget.value)\r\n            setValue(ev.currentTarget.value)\r\n          }}\r\n          onMouseUp={() => {\r\n            console.log(\"mouse up\", value)\r\n            HUtils.runFuntion(props.fnList, \"onUpdateValue\", [value])\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UIPopoverTaskLink = props => {\r\n  const defaultValue = props.defaultValue || \"\"\r\n  const [v, setV] = React.useState(defaultValue)\r\n  if (props.onlyLink) {\r\n    return (\r\n      <WrapTaskLink\r\n        onClick={ev => {\r\n          //ngan viec mo detail\r\n          ev.stopPropagation()\r\n        }}\r\n        title={`Open link: ${defaultValue}`}\r\n      >\r\n        <a href={defaultValue} target=\"_blank\" rel=\"noreferrer\">\r\n          <i style={{ color: \"#007bff\" }} className=\"fa fa-external-link\"></i>\r\n        </a>\r\n      </WrapTaskLink>\r\n    )\r\n  }\r\n  return (\r\n    <WrapTaskLink>\r\n      <Popover\r\n        overlay={propsOverlay => {\r\n          return (\r\n            <WrapPopoverTaskLink>\r\n              <div className=\"a-top\">\r\n                <div className=\"a-left\">Task Link</div>\r\n                <div className=\"a-right\">\r\n                  {defaultValue != null && defaultValue.startsWith(\"http\") && (\r\n                    <a href={defaultValue} target=\"_blank\" rel=\"noreferrer\">\r\n                      <i\r\n                        style={{ color: \"#007bff\" }}\r\n                        className=\"fa fa-external-link\"\r\n                      ></i>\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Task Link\"\r\n                  defaultValue={v}\r\n                  onChange={ev => {\r\n                    setV(ev.currentTarget.value)\r\n                  }}\r\n                />\r\n                {v != defaultValue && (\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    onClick={() => {\r\n                      HUtils.runFuntion(props.fnList, \"onUpdateValue\", [v])\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-check\" /> Save\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </WrapPopoverTaskLink>\r\n          )\r\n        }}\r\n        overlayClassName=\"m-popover\"\r\n        placement=\"bottom\"\r\n        destroyTooltipOnHide={true}\r\n      >\r\n        <div>\r\n          <i\r\n            className=\"fa fa-link\"\r\n            style={\r\n              defaultValue != null && defaultValue.startsWith(\"http\")\r\n                ? { color: \"#007bff\", opacity: 1 }\r\n                : { opacity: 0.5 }\r\n            }\r\n          ></i>\r\n        </div>\r\n      </Popover>\r\n    </WrapTaskLink>\r\n  )\r\n}\r\nconst UIPopoverTaskNote = props => {\r\n  const defaultValue = props.defaultValue || \"\"\r\n  const disabled = props.disabled\r\n  const [v, setV] = React.useState(defaultValue)\r\n  return (\r\n    <WrapTaskLink\r\n      onClick={ev => {\r\n        //ngan viec mo detail\r\n        ev.stopPropagation()\r\n      }}\r\n      title={`Task Note`}\r\n    >\r\n      <Popover\r\n        overlay={propsOverlay => {\r\n          return (\r\n            <WrapPopoverTaskNote>\r\n              <div className=\"a-top\">\r\n                <div className=\"a-left\">Task Note</div>\r\n                <div className=\"a-right\"></div>\r\n              </div>\r\n              <div>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  placeholder=\"Task Note\"\r\n                  disabled={disabled}\r\n                  rows={5}\r\n                  defaultValue={v}\r\n                  onChange={ev => {\r\n                    setV(ev.currentTarget.value)\r\n                  }}\r\n                />\r\n                {v != defaultValue && (\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    onClick={() => {\r\n                      HUtils.runFuntion(props.fnList, \"onUpdateValue\", [\r\n                        v,\r\n                        () => {\r\n                          propsOverlay.hide && propsOverlay.hide()\r\n                        },\r\n                      ])\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-check\" /> Save\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </WrapPopoverTaskNote>\r\n          )\r\n        }}\r\n        overlayClassName=\"m-popover\"\r\n        placement=\"bottom\"\r\n        destroyTooltipOnHide={true}\r\n      >\r\n        <div>\r\n          <i\r\n            className=\"fa fa-file-text-o\"\r\n            style={\r\n              defaultValue != null && defaultValue.length > 0\r\n                ? { color: \"#007bff\", opacity: 1 }\r\n                : { opacity: 0.5 }\r\n            }\r\n          ></i>\r\n        </div>\r\n      </Popover>\r\n    </WrapTaskLink>\r\n  )\r\n}\r\nclass MPDailyTaskItem extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showMoreDetail: false,\r\n      loadingDoTask: false,\r\n      loadingDoneTask: false,\r\n    }\r\n  }\r\n  componentDidMount() {}\r\n  requestDelete = () => {\r\n    const data = this.props.data || {}\r\n    const fnList = this.props.fnList || {}\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"UserTask\",\r\n            name: `Delete/${data.Id}`,\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            HUtils.runFuntion(fnList, \"reloadTasks\", [])\r\n            HUtils.runFuntion(fnList, \"hideModal\", [])\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({ loading: false })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  requestDoneTask = task => {\r\n    const data = this.props.data || {}\r\n    const fnList = this.props.fnList || {}\r\n    this.setState(\r\n      {\r\n        loadingDoneTask: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"UserTask\",\r\n            name: `SetStatusDoneTask/${task.Id}`,\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            if (response.Data) {\r\n              for (let k of Object.keys(response.Data)) {\r\n                data[k] = response.Data[k]\r\n              }\r\n            }\r\n            this.forceUpdate()\r\n            HUtils.runFuntion(fnList, \"afterUpdateData\", [data])\r\n            this.setState({ loadingDoneTask: false })\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({ loadingDoneTask: false })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  requestDoTask = task => {\r\n    const data = this.props.data || {}\r\n    const fnList = this.props.fnList || {}\r\n    this.setState(\r\n      {\r\n        loadingDoTask: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"UserTask\",\r\n            name: `SetStatusStartDoingTask/${task.Id}`,\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            if (response.Data) {\r\n              for (let k of Object.keys(response.Data)) {\r\n                data[k] = response.Data[k]\r\n              }\r\n            }\r\n            this.forceUpdate()\r\n            HUtils.runFuntion(fnList, \"afterUpdateData\", [data])\r\n            this.setState({ loadingDoTask: false })\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({ loadingDoTask: false })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  requestUpdate = (fieldName, value, cbSuccess, { multi } = {}) => {\r\n    const data = this.props.data || {}\r\n    const fnList = this.props.fnList || {}\r\n    if (data[fieldName] != value) {\r\n      this.setState(\r\n        {\r\n          loading: true,\r\n        },\r\n        () => {\r\n          let _values = [{ FieldName: fieldName, NewValue: value }]\r\n          if (multi) {\r\n            _values = multi.map((v, i) => {\r\n              return { FieldName: v.FieldName, NewValue: v.NewValue }\r\n            })\r\n          }\r\n          ApiGeneric({\r\n            request: {\r\n              method: \"POST\",\r\n              path: \"UserTask\",\r\n              name: \"UpdateFields\",\r\n            },\r\n            data: {\r\n              Id: data.Id,\r\n              Values: _values,\r\n            },\r\n            successCallBack: response => {\r\n              if (cbSuccess) {\r\n                cbSuccess(response)\r\n              }\r\n              if (response.Data) {\r\n                for (let k of Object.keys(response.Data)) {\r\n                  data[k] = response.Data[k]\r\n                }\r\n              }\r\n              this.setState({\r\n                loading: false,\r\n              })\r\n              HUtils.runFuntion(fnList, \"afterUpdateData\", [data])\r\n            },\r\n            errorCallBack: err => {\r\n              console.log(err)\r\n              this.setState({\r\n                loading: false,\r\n              })\r\n            },\r\n          })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  _getCanEdit = () => {\r\n    if (this._canEdit != null) {\r\n      return this._canEdit\r\n    }\r\n    const fnList = this.props.fnList || {}\r\n    let _canEdit = false\r\n    if (fnList && fnList[\"getCanEdit\"]) {\r\n      _canEdit = fnList[\"getCanEdit\"]()\r\n    }\r\n    this._canEdit = _canEdit\r\n    return _canEdit\r\n  }\r\n  _getOptions = () => {\r\n    const fnList = this.props.fnList || {}\r\n    let _options = HUtils.runFuntion(fnList, \"getOptions\") || {}\r\n    return _options\r\n  }\r\n  _getProjects = () => {\r\n    if (this._optionsProjects) {\r\n      return this._optionsProjects\r\n    }\r\n    this._optionsProjects = []\r\n    let _options = this._getOptions()\r\n    if (_options && _options.ProjectList) {\r\n      this._optionsProjects = _options.ProjectList\r\n    }\r\n    return this._optionsProjects\r\n  }\r\n  _getStaffOfProject = () => {\r\n    const data = this.props.data || {}\r\n    console.warn(\"_getStaffOfProject\", data, this._staffOfProject)\r\n    let _projectId = data.ProjectId\r\n    if (_projectId) {\r\n      if (this._staffOfProject) {\r\n        return this._staffOfProject[_projectId] || []\r\n      }\r\n      console.warn(\"_staffOfProject\", this._staffOfProject)\r\n      this._staffOfProject = {}\r\n      let _options = this._getOptions()\r\n      if (_options && _options.ProjectList) {\r\n        for (let i = 0; i < _options.ProjectList.length; i++) {\r\n          this._staffOfProject[_options.ProjectList[i].Value] =\r\n            _options.ProjectList[i].UserProject\r\n        }\r\n      }\r\n      return this._staffOfProject[_projectId] || []\r\n    }\r\n    return []\r\n  }\r\n  _getStatus = () => {\r\n    if (this._optionsStatus) {\r\n      return this._optionsStatus\r\n    }\r\n    this._optionsStatus = []\r\n    let _options = this._getOptions()\r\n    if (_options && _options.TaskStatusCodeList) {\r\n      this._optionsStatus = _options.TaskStatusCodeList\r\n    }\r\n    console.log(\"status:\", _options, this._optionsStatus)\r\n    return this._optionsStatus\r\n  }\r\n  render() {\r\n    const data = this.props.data || {}\r\n    const mode = this.props.mode || \"\"\r\n    const fnList = this.props.fnList || {}\r\n    if (this._getCanEdit()) {\r\n      return (\r\n        <WrapLayout className=\"a-canedit\">\r\n          <div\r\n            className=\"a-header\"\r\n            style={{ background: getColorByStatus(data) }}\r\n          >\r\n            <div className=\"a-headerleft\">\r\n              <Popover\r\n                overlay={propsOverlay => {\r\n                  return (\r\n                    <MyUI\r\n                      type=\"select_box_search_v2\"\r\n                      sourceData={this._getProjects()}\r\n                      valueSelected={\"\"}\r\n                      onChange={itemOption => {\r\n                        console.warn(\"onChange:\", itemOption, itemOption.Value)\r\n                        this.requestUpdate(\"ProjectId\", itemOption.Value)\r\n                        //hide popover\r\n                        if (propsOverlay.hide) {\r\n                          propsOverlay.hide()\r\n                        }\r\n                      }}\r\n                    />\r\n                  )\r\n                }}\r\n                overlayClassName=\"m-popover\"\r\n                placement=\"bottom\"\r\n                destroyTooltipOnHide={true}\r\n              >\r\n                <div className=\"a-pick-project\">\r\n                  {data.ProjectName || \"[No Project]\"}\r\n                </div>\r\n              </Popover>\r\n              {data.ProjectId != null && data.ProjectId.length > 0 && (\r\n                <Popover\r\n                  overlay={propsOverlay => {\r\n                    return (\r\n                      <MyUI\r\n                        type=\"select_box_search_v2\"\r\n                        sourceData={this._getStaffOfProject()}\r\n                        valueSelected={data.AssignToId}\r\n                        onChange={itemOption => {\r\n                          console.warn(\r\n                            \"onChange:\",\r\n                            itemOption,\r\n                            itemOption.Value\r\n                          )\r\n                          this.requestUpdate(\"AssignToId\", itemOption.Value)\r\n                          // this.requestUpdate(\"AssignToName\", itemOption.Text)\r\n                          //hide popover\r\n                          if (propsOverlay.hide) {\r\n                            propsOverlay.hide()\r\n                          }\r\n                        }}\r\n                      />\r\n                    )\r\n                  }}\r\n                  overlayClassName=\"m-popover\"\r\n                  placement=\"bottom\"\r\n                  destroyTooltipOnHide={true}\r\n                >\r\n                  <div className=\"a-pick-assignto\">\r\n                    Assign to{\" \"}\r\n                    {data.AssignToId\r\n                      ? `${data.IM_AssignToName || data.AssignToId}`\r\n                      : \"me\"}\r\n                  </div>\r\n                </Popover>\r\n              )}\r\n            </div>\r\n            <div className=\"a-right-info\">\r\n              <Popover\r\n                overlay={propsOverlay => {\r\n                  return (\r\n                    <MyUI\r\n                      type=\"select_box_search_v2\"\r\n                      sourceData={this._getStatus()}\r\n                      valueSelected={\"\"}\r\n                      onChange={itemOption => {\r\n                        console.warn(\"onChange:\", itemOption, itemOption.Value)\r\n                        this.requestUpdate(\"TaskStatusCode\", itemOption.Value)\r\n                        //hide popover\r\n                        if (propsOverlay.hide) {\r\n                          propsOverlay.hide()\r\n                        }\r\n                      }}\r\n                    />\r\n                  )\r\n                }}\r\n                overlayClassName=\"m-popover\"\r\n                placement=\"bottom\"\r\n                destroyTooltipOnHide={true}\r\n              >\r\n                <div className=\"a-pick-status\">\r\n                  {data.TaskStatusCode || \"[Status]\"}\r\n                </div>\r\n              </Popover>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {data.AssignById != data.AssignToId && (\r\n              <div className=\"a-assign\">\r\n                Assign from <span>{data.IM_AssignByName}</span> to{\" \"}\r\n                <span>{data.IM_AssignToName}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"a-name\">\r\n            <textarea\r\n              defaultValue={data.TaskName}\r\n              placeholder=\"Task Name\"\r\n              spellCheck=\"false\"\r\n              rows={mode == \"detail\" ? 4 : 2}\r\n              onBlur={ev => {\r\n                this.requestUpdate(\"TaskName\", ev.currentTarget.value)\r\n              }}\r\n            />\r\n            <div className=\"a-side-right\">\r\n              <UIPopoverTaskLink\r\n                defaultValue={data.TaskLink}\r\n                fnList={{\r\n                  onUpdateValue: v => {\r\n                    this.requestUpdate(\"TaskLink\", v)\r\n                  },\r\n                }}\r\n              />\r\n              <UIPopoverTaskNote\r\n                defaultValue={data.Note}\r\n                fnList={{\r\n                  onUpdateValue: (v, cbSuccess) => {\r\n                    this.requestUpdate(\"Note\", v, cbSuccess)\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <UISliderRange\r\n            defaultValue={data.PercentCompleted}\r\n            key={`slider_${data.PercentCompleted}`}\r\n            fnList={{\r\n              onUpdateValue: v => {\r\n                this.requestUpdate(\"PercentCompleted\", v)\r\n              },\r\n            }}\r\n          />\r\n          {/* <Popover\r\n            overlay={propsOverlay => {\r\n              return (\r\n                <UISliderRange\r\n                  defaultValue={data.PercentCompleted}\r\n                  fnList={{\r\n                    onUpdateValue: v => {\r\n                      this.requestUpdate(\"PercentCompleted\", v)\r\n                    },\r\n                  }}\r\n                />\r\n              )\r\n            }}\r\n            overlayClassName=\"m-popover\"\r\n            placement=\"bottom\"\r\n            destroyTooltipOnHide={true}\r\n          >\r\n            <div\r\n              className=\"progress\"\r\n              style={{ height: \"8px\", marginTop: \"5px\" }}\r\n            >\r\n              <div\r\n                className=\"progress-bar bg-success progress-bar-striped\"\r\n                role=\"progressbar\"\r\n                style={{ width: `${data.PercentCompleted || 0}%` }}\r\n              ></div>\r\n            </div>\r\n          </Popover> */}\r\n          {/* {mode == \"detail\" && (\r\n            <div>\r\n              <div\r\n                className=\"a-moredetail\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    showMoreDetail: !this.state.showMoreDetail,\r\n                  })\r\n                }}\r\n              >\r\n                {this.state.showMoreDetail == false ? (\r\n                  <div>\r\n                    Show more detail <i className=\"fa fa-angle-down\" />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    Hide more detail <i className=\"fa fa-angle-up\" />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {this.state.showMoreDetail == true && (\r\n                <div className=\"a-moredetail-expand\">\r\n                  <div>\r\n                    <div>Assign To</div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )} */}\r\n          {mode == \"detail\" && (\r\n            <div\r\n              style={{\r\n                marginTop: \"10px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              {data.TaskStatusCode != Status.DONE && (\r\n                <button\r\n                  className=\"btn btn-success\"\r\n                  style={{ marginLeft: \"2px\" }}\r\n                  disabled={this.state.loadingDoneTask}\r\n                  onClick={() => {\r\n                    MyModal.showConfirm({\r\n                      title: \"Done task\",\r\n                      msg: \"Are you sure you want to set done this task?\",\r\n                      onClickOK: cModal => {\r\n                        console.log(\"onOK\")\r\n                        this.requestDoneTask(data)\r\n                        if (cModal && cModal.hide) {\r\n                          cModal.hide()\r\n                        }\r\n                      },\r\n                    })\r\n                  }}\r\n                >\r\n                  Done Task\r\n                </button>\r\n              )}\r\n              {data.TaskStatusCode != Status.DONE && (\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ marginLeft: \"2px\" }}\r\n                  disabled={this.state.loadingDoTask}\r\n                  onClick={() => {\r\n                    this.requestDoTask(data)\r\n                  }}\r\n                >\r\n                  Do Task\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                style={{ marginLeft: \"2px\" }}\r\n                onClick={() => {\r\n                  MyModal.showConfirm({\r\n                    title: \"Delete task\",\r\n                    msg: \"Are you sure you want to delete this task?\",\r\n                    onClickOK: cModal => {\r\n                      console.log(\"onOK\")\r\n                      this.requestDelete(cModal)\r\n                      if (cModal && cModal.hide) {\r\n                        cModal.hide()\r\n                      }\r\n                    },\r\n                  })\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {this.state.loading === true && (\r\n            <div className=\"a-loading\">\r\n              <Spinner />\r\n            </div>\r\n          )}\r\n        </WrapLayout>\r\n      )\r\n    }\r\n    // console.warn(\"render task item:\", this.props)\r\n    return (\r\n      <WrapLayout\r\n        onClick={() => {\r\n          console.log(\"mode:\", mode, this.props)\r\n          HUtils.runFuntion(fnList, \"onClickItem\", [data])\r\n        }}\r\n      >\r\n        <div\r\n          className=\"a-header\"\r\n          style={{ background: getColorByStatus(data) }}\r\n        >\r\n          <div className=\"a-project\">{data.ProjectName || \"[No Project]\"}</div>\r\n          <div className=\"a-right-info\">\r\n            <div className=\"a-status\">{data.TaskStatusCode || \"[Status]\"}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"a-more-top\">\r\n          {data.AssignById != data.AssignToId ? (\r\n            <div\r\n              className=\"a-assign\"\r\n              title={`Assign from ${data.IM_AssignByName} to ${data.IM_AssignToName}`}\r\n            >\r\n              Assign to <span>{data.IM_AssignToName}</span>\r\n            </div>\r\n          ) : this.props.showAssignTo === true ? (\r\n            <div className=\"a-assign\">\r\n              Assign to <span>{data.IM_AssignToName}</span>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <div className=\"a-more-top-right\">\r\n            {data.TaskLink && (\r\n              <UIPopoverTaskLink\r\n                defaultValue={data.TaskLink}\r\n                onlyLink={true}\r\n                fnList={{\r\n                  onUpdateValue: v => {\r\n                    this.requestUpdate(\"TaskLink\", v)\r\n                  },\r\n                }}\r\n              />\r\n            )}\r\n            {data.Note && (\r\n              <UIPopoverTaskNote\r\n                defaultValue={data.Note}\r\n                disabled={true}\r\n                fnList={{\r\n                  onUpdateValue: (v, cbSuccess) => {\r\n                    this.requestUpdate(\"Note\", v, cbSuccess)\r\n                  },\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={classNames(\"a-name\", mode, {\r\n            \"text-ellipsis-l2\": mode == \"list\",\r\n          })}\r\n        >\r\n          {data.TaskName || <span style={{ color: \"grey\" }}>[No Name]</span>}\r\n        </div>\r\n        <div className=\"progress\" style={{ height: \"8px\", marginTop: \"5px\" }}>\r\n          <div\r\n            className=\"progress-bar bg-success progress-bar-striped\"\r\n            role=\"progressbar\"\r\n            style={{ width: `${data.PercentCompleted || 0}%` }}\r\n          ></div>\r\n        </div>\r\n        <div\r\n          className=\"a-bottom\"\r\n          title={`Created at ${HFormat.format(data.IM_CreatedDate, {\r\n            type: \"date\",\r\n            format: \"DD/MM/YYYY HH:mm\",\r\n          })}`}\r\n        >\r\n          Created{\" \"}\r\n          <strong>{`${HFormat.format(data.IM_CreatedDate, {\r\n            type: \"fromnow\",\r\n            format: \"DD/MM/YYYY HH:mm\",\r\n          })}`}</strong>\r\n        </div>\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrapLayout = styled.div`\r\n  position: relative;\r\n  background: white;\r\n  padding: 10px;\r\n  word-break: break-word;\r\n  box-shadow: 0 0 0 1px rgba(53, 72, 91, 0.07), 0 2px 2px rgba(0, 0, 0, 0.01),\r\n    0 4px 4px rgba(0, 0, 0, 0.02), 0 10px 8px rgba(0, 0, 0, 0.03),\r\n    0 15px 15px rgba(0, 0, 0, 0.03), 0 30px 30px rgba(0, 0, 0, 0.04),\r\n    0 70px 65px rgba(0, 0, 0, 0.05);\r\n  & > .a-loading {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background: #e9e9e97d;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  &.a-canedit {\r\n    & .a-pick-assignto {\r\n      cursor: pointer;\r\n      padding: 0px 5px;\r\n      &:hover {\r\n        background: #ededed6e;\r\n        border-radius: 2px;\r\n      }\r\n    }\r\n    & .a-pick-project {\r\n      cursor: pointer;\r\n      padding: 0px 5px;\r\n      &:hover {\r\n        background: #ededed6e;\r\n        border-radius: 2px;\r\n      }\r\n    }\r\n    & .a-pick-status {\r\n      cursor: pointer;\r\n      padding: 0px 5px;\r\n      font-weight: bold;\r\n      &:hover {\r\n        background: #ededed6e;\r\n      }\r\n    }\r\n    & .progress {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  & .a-name {\r\n    position: relative;\r\n    & textarea {\r\n      border: 0px;\r\n      width: 100%;\r\n      outline: none;\r\n      padding: 0px;\r\n      padding-right: 20px;\r\n    }\r\n    & .a-side-right {\r\n      position: absolute;\r\n      top: 0px;\r\n      right: 0px;\r\n      background: whitesmoke;\r\n      width: 20px;\r\n      // height: 100px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      box-shadow: 0px 4px 8px -2px rgba(9, 30, 66, 0.25),\r\n        0px 0px 0px 1px rgba(9, 30, 66, 0.08);\r\n    }\r\n  }\r\n  & .a-header {\r\n    display: flex;\r\n    background: green;\r\n    margin: -10px;\r\n    margin-bottom: 5px;\r\n    color: white;\r\n    padding: 2px;\r\n    padding-left: 5px;\r\n    padding-right: 5px;\r\n    font-size: 13px;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    & .a-project {\r\n      padding: 0px 5px;\r\n    }\r\n    & .a-status {\r\n      font-weight: bold;\r\n      padding: 0px 5px;\r\n    }\r\n    & .a-headerleft {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    & .a-right-info {\r\n      display: flex;\r\n      align-items: center;\r\n      & > div {\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n  }\r\n  & .a-moredetail {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & > div {\r\n      padding: 5px;\r\n      background: #ededed;\r\n      border-radius: 4px;\r\n      margin: 5px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  & .form-range {\r\n    width: 100%;\r\n    height: 1.5rem;\r\n    padding: 0;\r\n    background-color: transparent;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n    accent-color: red;\r\n    &::-webkit-slider-thumb {\r\n      background-color: #73a839;\r\n      box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(40, 167, 69, 0.25);\r\n    }\r\n    &::-webkit-slider-thumb:active {\r\n      background-color: green;\r\n    }\r\n    &::-webkit-slider-runnable-track {\r\n      width: 100%;\r\n      background-color: transparent;\r\n    }\r\n    // &::-webkit-progress-value {\r\n    //   background-color: red;\r\n    // }\r\n  }\r\n  & .a-assign {\r\n    font-size: 10px;\r\n    color: #b1b1b1;\r\n    & > span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  & .a-more-top {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    & .a-more-top-right {\r\n      display: flex;\r\n      align-items: center;\r\n      & > div {\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n  }\r\n  & .a-bottom {\r\n    font-size: 10px;\r\n    color: #b1b1b1;\r\n    margin-top: 5px;\r\n    margin-bottom: -5px;\r\n  }\r\n`\r\n\r\nconst WrapTaskLink = styled.div`\r\n  // display: inline-block;\r\n  // position: absolute;\r\n  // right: 10px;\r\n  // top: 24px;\r\n  cursor: pointer;\r\n`\r\nconst WrapPopoverTaskLink = styled.div`\r\n  & .a-top {\r\n    display: flex;\r\n    & > .a-left {\r\n      font-weight: bold;\r\n    }\r\n    & > .a-right {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n  & button {\r\n    margin-top: 5px;\r\n    padding: 2px;\r\n  }\r\n`\r\nconst WrapPopoverTaskNote = styled.div`\r\n  width: 300px;\r\n  max-width: 90vw;\r\n  & .a-top {\r\n    display: flex;\r\n    & > .a-left {\r\n      font-weight: bold;\r\n    }\r\n    & > .a-right {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n  & button {\r\n    margin-top: 5px;\r\n    padding: 2px;\r\n  }\r\n`\r\n\r\nexport { UIPopoverTaskLink, UIPopoverTaskNote }\r\nexport default MPDailyTaskItem\r\n"],"sourceRoot":""}