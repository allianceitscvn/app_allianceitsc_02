{"version":3,"sources":["modules/adminpanel/MyUI/Types/admintable_chart.js"],"names":["WrapChart","styled","div","MUIATChart","props","cfp","chartConfig","onePage","_chartConfig","Charts","Config","HUtils","get","React","useState","isExpanded","setIsExpanded","forceUpdate","useForceUpdate","length","_charts","_config","_countChart","_screenCode","fnListMyPage","fnGetScreenCode","fnList","className","title","onClick","style","top","left","ref","r","console","warn","map","v","i","type","titleChart","fnGetDataTable","WithFilter","kfnGetDataTable","kfnGetDataTableFilterd","fnGetDataTableFilterd","fnGetExtraDataTable","kfnGetExtraDataTable","fnGetOptions","kfnGetOptions","morePropsChart","graph_id","fnGetConfigPagePage","KConfigPagePage","prefixId","_chart"],"mappings":"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","file":"static/js/209.dc04e37e.chunk.js","sourcesContent":["import { HUtils, MyChart } from \"@macashipo/mlib\"\r\nimport React from \"react\"\r\nimport {\r\n  fnListMyPage,\r\n  KConfigPagePage,\r\n  kfnGetDataTable,\r\n  kfnGetDataTableFilterd,\r\n  kfnGetExtraDataTable,\r\n  kfnGetOptions,\r\n} from \"src/helpers/fnList\"\r\nimport styled from \"styled-components\"\r\nimport useForceUpdate from \"src/core/hook/useForceUpdate\"\r\nconst WrapChart = styled.div`\r\n  z-index: 1;\r\n  & .a-header {\r\n    padding: 1.25rem;\r\n    display: flex;\r\n  }\r\n  & .a-expand {\r\n    position: absolute;\r\n    left: -10px;\r\n    top: 1.25rem;\r\n    background: white;\r\n    border-radius: 10px;\r\n    width: 20px;\r\n    height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px solid rgba(204, 204, 204, 0.48);\r\n    box-shadow: 0 7px 14px 0 rgb(65 69 88 / 10%), 0 3px 6px 0 rgb(0 0 0 / 7%);\r\n    cursor: pointer;\r\n  }\r\n  & .a-actions {\r\n    margin-left: auto;\r\n  }\r\n`\r\n\r\n// const ChartConfigTest = {\r\n//   Charts: [\r\n//     {\r\n//       fX: \"Name\",\r\n//       fY: \"Seconds\",\r\n//       more: \"\",\r\n//       options:\r\n//         '{\"isStacked\":true,\"height\":660,\"legend\":true,\"colors\": [ \"#EC5463\",\"#9EC969\"]}',\r\n//       titleChart: \"Defect - Critical\",\r\n//       titleX: \"N\",\r\n//       titleY: \"S\",\r\n//       type: \"gg_column\",\r\n//     },\r\n//   ],\r\n// }\r\n\r\nexport default function MUIATChart(props) {\r\n  const { cfp, chartConfig } = props\r\n  const onePage = cfp.onePage || {}\r\n\r\n  let _chartConfig = chartConfig\r\n  //assign config chart to onePage\r\n  if (onePage[\"_ChartConfig\"] == null && _chartConfig) {\r\n    onePage[\"_ChartConfig\"] = _chartConfig || { Charts: [], Config: {} }\r\n    //test\r\n    // onePage[\"_ChartConfig\"] = {\r\n    //   Charts: [],\r\n    //   Config: {\r\n    //     DefaultShowContent: false,\r\n    //   },\r\n    // }\r\n    onePage[\"_ChartConfigDefaultShow\"] = HUtils.get(\r\n      onePage,\r\n      \"_ChartConfig.Config.DefaultShowContent\"\r\n    )\r\n  }\r\n\r\n  const [isExpanded, setIsExpanded] = React.useState(\r\n    onePage[\"_ChartConfigDefaultShow\"] != null\r\n      ? onePage[\"_ChartConfigDefaultShow\"]\r\n      : true\r\n  )\r\n  const forceUpdate = useForceUpdate()\r\n\r\n  // console.warn(\"render Chart chartConfig:\", _chartConfig)\r\n  //test\r\n  // _chartConfig = ChartConfigTest\r\n\r\n  if (_chartConfig && _chartConfig.Charts.length > 0) {\r\n    let _charts = _chartConfig.Charts || []\r\n    let _config = _chartConfig.Config || {}\r\n    let _countChart = _chartConfig.Charts.length\r\n    let _screenCode = fnListMyPage.fnGetScreenCode(cfp.fnList)\r\n\r\n    if (isExpanded === false) {\r\n      return (\r\n        <WrapChart className=\"mpat-chart card no-print\">\r\n          <div\r\n            className=\"a-expand\"\r\n            title=\"Show Chart\"\r\n            onClick={() => {\r\n              onePage[\"_ChartConfigDefaultShow\"] = !isExpanded\r\n              setIsExpanded(!isExpanded)\r\n            }}\r\n            style={{ top: \"-10px\", left: \"10px\" }}\r\n          >\r\n            <i className=\"fa fa fa-bar-chart\"></i>\r\n          </div>\r\n        </WrapChart>\r\n      )\r\n    }\r\n\r\n    if (_countChart > 1) {\r\n      if (onePage[\"_selectedTabChart\"] == null) {\r\n        onePage[\"_selectedTabChart\"] = 0\r\n      }\r\n      return (\r\n        <WrapChart className=\"mpat-chart mb-2 card\">\r\n          <div\r\n            className=\"a-expand\"\r\n            title=\"Hide Chart\"\r\n            onClick={() => {\r\n              onePage[\"_ChartConfigDefaultShow\"] = !isExpanded\r\n              setIsExpanded(!isExpanded)\r\n            }}\r\n          >\r\n            <i className=\"fa fa-chevron-up\"></i>\r\n          </div>\r\n          <div className=\"a-header\">\r\n            <div\r\n              className=\"a-title\"\r\n              ref={r => {\r\n                console.warn(\"render Title\")\r\n              }}\r\n            >\r\n              <i className=\"fa fa fa-bar-chart\"></i>\r\n            </div>\r\n            <div className=\"a-actions\">\r\n              <div className=\"btn-group\">\r\n                {_charts.map((v, i) => {\r\n                  console.warn(\"render chart:\", v)\r\n                  return (\r\n                    <button\r\n                      key={i}\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        onePage[\"_selectedTabChart\"] = i\r\n                        forceUpdate()\r\n                      }}\r\n                      className={`btn ${\r\n                        onePage[\"_selectedTabChart\"] === i\r\n                          ? \"btn-primary\"\r\n                          : \"btn-secondary\"\r\n                      }`}\r\n                    >\r\n                      {v.titleChart || `Chart ${i + 1}`}\r\n                    </button>\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div>\r\n              {_charts.map((v, i) => {\r\n                if (i !== onePage[\"_selectedTabChart\"]) {\r\n                  return <div key={i}></div>\r\n                }\r\n                return (\r\n                  <MyChart\r\n                    key={i}\r\n                    type={v.type}\r\n                    chartConfig={v}\r\n                    fnList={{\r\n                      fnGetDataTable:\r\n                        _config.WithFilter === false\r\n                          ? cfp.fnList[kfnGetDataTable]\r\n                          : cfp.fnList[kfnGetDataTableFilterd],\r\n                      fnGetDataTableFilterd: cfp.fnList[kfnGetDataTableFilterd],\r\n                      fnGetExtraDataTable: cfp.fnList[kfnGetExtraDataTable],\r\n                      fnGetOptions: cfp.fnList[kfnGetOptions],\r\n                    }}\r\n                    morePropsChart={{\r\n                      graph_id: `chart_${\r\n                        fnListMyPage.fnGetConfigPagePage(cfp.fnList, [\r\n                          KConfigPagePage.prefixId,\r\n                        ]) || \"\"\r\n                      }_${_screenCode}_${v.type}_${i}`,\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </WrapChart>\r\n      )\r\n    } else {\r\n      let _chart = _charts[0]\r\n      return (\r\n        <WrapChart className=\"mpat-chart mb-2 card\">\r\n          <div className=\"card-body\">\r\n            <div>\r\n              <MyChart\r\n                type={_chart.type}\r\n                chartConfig={_chart}\r\n                fnList={{\r\n                  fnGetDataTable:\r\n                    _config.WithFilter === false\r\n                      ? cfp.fnList[kfnGetDataTable]\r\n                      : cfp.fnList[kfnGetDataTableFilterd],\r\n                  fnGetDataTableFilterd: cfp.fnList[kfnGetDataTableFilterd],\r\n                  fnGetExtraDataTable: cfp.fnList[kfnGetExtraDataTable],\r\n                  fnGetOptions: cfp.fnList[kfnGetOptions],\r\n                }}\r\n                morePropsChart={{\r\n                  graph_id: `chart_${\r\n                    fnListMyPage.fnGetConfigPagePage(cfp.fnList, [\r\n                      KConfigPagePage.prefixId,\r\n                    ]) || \"\"\r\n                  }_${_screenCode}_${_chart.type}_one`,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </WrapChart>\r\n      )\r\n    }\r\n  } else {\r\n    return <div className=\"mpat-chart\"></div>\r\n  }\r\n}\r\n"],"sourceRoot":""}