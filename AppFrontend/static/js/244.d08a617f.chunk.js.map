{"version":3,"sources":["modules/qlproject/MyUI/prj_task_user_setting.js"],"names":["kDAILYTASK_GGCHAT_SUBTITLE","kGOOGLE_CHAT_ID","MUIUserSetting","props","requestGets","keys","cbSuccess","ApiGeneric","request","method","path","name","data","Key","successCallBack","response","console","warn","errorCallBack","err","log","requestGet","key","requestUpdate","value","title","isUpdateValue","isUpdateTitle","isUpdateBoth","_values","push","FieldName","NewValue","Id","Values","updateSubtitleType","Data","setState","subtitleTitle","Title","subtitleValue","Value","updateTitle","fieldState","state","updateValue","googleChatId","keysFetched","this","join","_obj","i","length","_item","WrapLayout","className","type","id","defaultChecked","onChange","ev","currentTarget","checked","htmlFor","defaultValue","onBlur","Component","styled","div"],"mappings":"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","file":"static/js/244.d08a617f.chunk.js","sourcesContent":["import { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { HUtils } from \"@macashipo/mlib\"\r\nimport classNames from \"classnames\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\n\r\nconst kDAILYTASK_GGCHAT_SUBTITLE = \"DAILYTASK_GGCHAT_SUBTITLE\"\r\nconst kGOOGLE_CHAT_ID = \"GOOGLE_CHAT_ID\"\r\nclass MUIUserSetting extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      subtitleTitle: \"\",\r\n      subtitleValue: \"\",\r\n      googleChatId: \"\",\r\n      keysFetched: false,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.requestGets(\r\n      [kDAILYTASK_GGCHAT_SUBTITLE, kGOOGLE_CHAT_ID].join(\",\"),\r\n      response => {\r\n        if (response.Data && response.Data.Data) {\r\n          let _obj = {}\r\n          for (let i = 0; i < response.Data.Data.length; i++) {\r\n            let _item = response.Data.Data[i]\r\n            if (_item.Key == kDAILYTASK_GGCHAT_SUBTITLE) {\r\n              _obj.subtitleTitle = _item.Title\r\n              _obj.subtitleValue = _item.Value\r\n            } else if (_item.Key == kGOOGLE_CHAT_ID) {\r\n              _obj.googleChatId = _item.Value\r\n            }\r\n          }\r\n          this.setState({\r\n            keysFetched: true,\r\n            ..._obj,\r\n          })\r\n        }\r\n      }\r\n    )\r\n    // this.requestGet(kDAILYTASK_GGCHAT_SUBTITLE, response => {\r\n    //   if (response && response.Data) {\r\n    //     this.setState({\r\n    //       subtitleFetched: true,\r\n    //       subtitleTitle: response.Data.Title,\r\n    //       subtitleValue: response.Data.Value,\r\n    //     })\r\n    //   }\r\n    // })\r\n  }\r\n  requestGets = (keys, cbSuccess) => {\r\n    ApiGeneric({\r\n      request: {\r\n        method: \"POST\",\r\n        path: \"UserLogin_Ext\",\r\n        name: `List`,\r\n      },\r\n      data: {\r\n        Key: keys,\r\n      },\r\n      successCallBack: response => {\r\n        console.warn(\"res:\", response)\r\n        if (cbSuccess) {\r\n          cbSuccess(response)\r\n        }\r\n      },\r\n      errorCallBack: err => {\r\n        console.log(err)\r\n      },\r\n    })\r\n  }\r\n  requestGet = (key, cbSuccess) => {\r\n    ApiGeneric({\r\n      request: {\r\n        method: \"POST\",\r\n        path: \"UserLogin_Ext\",\r\n        name: `GetOneItemModel/${key}`,\r\n      },\r\n      data: {},\r\n      successCallBack: response => {\r\n        console.warn(\"res:\", response)\r\n        if (cbSuccess) {\r\n          cbSuccess(response)\r\n        }\r\n      },\r\n      errorCallBack: err => {\r\n        console.log(err)\r\n      },\r\n    })\r\n  }\r\n  requestUpdate = ({\r\n    key,\r\n    value,\r\n    title,\r\n    isUpdateValue,\r\n    isUpdateTitle,\r\n    isUpdateBoth,\r\n    cbSuccess,\r\n  } = {}) => {\r\n    let _values = []\r\n    if (isUpdateTitle) {\r\n      _values.push({\r\n        FieldName: \"Title\",\r\n        NewValue: title,\r\n      })\r\n    }\r\n    if (isUpdateValue) {\r\n      _values.push({\r\n        FieldName: \"Value\",\r\n        NewValue: value,\r\n      })\r\n    }\r\n    ApiGeneric({\r\n      request: {\r\n        method: \"POST\",\r\n        path: \"UserLogin_Ext\",\r\n        name: \"UpdateFields\",\r\n      },\r\n      data: {\r\n        Id: key,\r\n        Values: _values,\r\n      },\r\n      successCallBack: response => {\r\n        if (cbSuccess) {\r\n          cbSuccess(response)\r\n        }\r\n      },\r\n      errorCallBack: err => {\r\n        console.log(err)\r\n      },\r\n    })\r\n  }\r\n  updateSubtitleType = value => {\r\n    this.requestUpdate({\r\n      key: kDAILYTASK_GGCHAT_SUBTITLE,\r\n      isUpdateValue: true,\r\n      value: value,\r\n      cbSuccess: response => {\r\n        if (response && response.Data) {\r\n          this.setState({\r\n            subtitleTitle: response.Data.Title,\r\n            subtitleValue: response.Data.Value,\r\n          })\r\n        }\r\n      },\r\n    })\r\n  }\r\n  updateTitle = (key, title, fieldState) => {\r\n    if (title != this.state[fieldState]) {\r\n      this.requestUpdate({\r\n        key: key,\r\n        isUpdateTitle: true,\r\n        title: title,\r\n        cbSuccess: response => {\r\n          if (response && response.Data) {\r\n            this.setState({\r\n              [fieldState]: response.Data.Title,\r\n            })\r\n          }\r\n        },\r\n      })\r\n    }\r\n  }\r\n  updateValue = (key, value, fieldState) => {\r\n    if (value != this.state[fieldState]) {\r\n      this.requestUpdate({\r\n        key: key,\r\n        isUpdateValue: true,\r\n        value: value,\r\n        cbSuccess: response => {\r\n          if (response && response.Data) {\r\n            this.setState({\r\n              [fieldState]: response.Data.Value,\r\n            })\r\n          }\r\n        },\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    console.warn(\"value\", this.state.subtitleValue)\r\n    return (\r\n      <WrapLayout>\r\n        {this.state.keysFetched == true && (\r\n          <div className=\"a-group\">\r\n            <div className=\"a-title\">Subtitle</div>\r\n            <div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"subTitle\"\r\n                  id=\"subCustom\"\r\n                  value=\"subCustom\"\r\n                  defaultChecked={\r\n                    this.state.subtitleValue == \"\" ||\r\n                    this.state.subtitleValue == null\r\n                  }\r\n                  onChange={ev => {\r\n                    console.warn(\"onChange\", ev.currentTarget.checked)\r\n                    this.updateSubtitleType(\"\")\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"subCustom\">\r\n                  Custom subtitle\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  defaultValue={this.state.subtitleTitle}\r\n                  onBlur={ev => {\r\n                    this.updateTitle(\r\n                      kDAILYTASK_GGCHAT_SUBTITLE,\r\n                      ev.currentTarget.value,\r\n                      \"subtitleTitle\"\r\n                    )\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"subTitle\"\r\n                  id=\"subJobtitle\"\r\n                  value=\"subJobtitle\"\r\n                  defaultChecked={this.state.subtitleValue == \"1\"}\r\n                  onChange={ev => {\r\n                    console.warn(\"onChange\", ev.currentTarget.checked)\r\n                    this.updateSubtitleType(\"1\")\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"subJobtitle\">\r\n                  Jobtitle\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.state.keysFetched == true && (\r\n          <div className=\"a-group\">\r\n            <div className=\"a-title\">Google Chat Id</div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                defaultValue={this.state.googleChatId}\r\n                onBlur={ev => {\r\n                  this.updateValue(\r\n                    kGOOGLE_CHAT_ID,\r\n                    ev.currentTarget.value,\r\n                    \"googleChatId\"\r\n                  )\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\nconst WrapLayout = styled.div`\r\n  & .a-group {\r\n    border: 1px solid #ebf1ff;\r\n    padding: 10px;\r\n    border-radius: 4px;\r\n    background: #f5fbff;\r\n    margin-bottom: 10px;\r\n    & .a-title {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`\r\nexport default MUIUserSetting\r\n"],"sourceRoot":""}