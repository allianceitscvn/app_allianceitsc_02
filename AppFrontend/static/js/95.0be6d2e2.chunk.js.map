{"version":3,"sources":["modules/adminpanel/MyPage/Types/admin_tab.js"],"names":["AdminTab","props","cfp","useConfigPage","configPage","needContents","console","warn","showLoading","renderLoading","errorMsg","renderError","tabs","getTabs","className","length","tabsWrapperClass","transform","showInkBar","items","selectedTabKey","fnListMyPage","getTabsIndexSelected","fnList","onChange","index","onChangeTab"],"mappings":"sHAAA,qHAOe,SAASA,EAASC,GAC/B,IAAMC,EAAMC,YAAcF,EAAMG,WAAY,CAAEC,cAAc,EAAMJ,UAsBlE,GArBAK,QAAQC,KAAK,YAAaN,GAqBtBC,EAAIM,YACN,OAAON,EAAIO,gBAEb,GAAIP,EAAIQ,SACN,OAAOR,EAAIS,YAAYT,EAAIQ,UAG7B,IAAME,EAAOV,EAAIW,UACjB,OACE,sBAAKC,UAAU,wBAAf,UACGF,GAAQA,EAAKG,OAAS,GACrB,cAAC,IAAD,CACEC,iBAAiB,sCACjBC,WAAW,EACXC,YAAY,EACZC,MAAOP,EACPQ,eAAgBC,IAAaC,qBAAqBpB,EAAIqB,QACtDC,SAAU,SAAAC,GAERJ,IAAaK,YAAYxB,EAAIqB,OAAQ,CAACE,OAI3Cb,GAAuB,GAAfA,EAAKG,QAAe,+D","file":"static/js/95.0be6d2e2.chunk.js","sourcesContent":["import React from \"react\"\r\nimport Tabs from \"react-responsive-tabs\"\r\nimport useConfigPage from \"../../hooks/useConfigPage\"\r\nimport { fnListMyPage } from \"src/helpers/fnList\"\r\nimport { HUtils } from \"@macashipo/mlib\"\r\nimport { HConfig, HConstant } from \"src/core/helpers\"\r\nimport \"./Styles/admin_tab.css\"\r\nexport default function AdminTab(props) {\r\n  const cfp = useConfigPage(props.configPage, { needContents: true, props })\r\n  console.warn(\"admintab:\", props)\r\n\r\n  // React.useEffect(() => {\r\n  //   if (props.isRootLevel) {\r\n  //     HUtils.runFuntion(\r\n  //       HConfig.fnList,\r\n  //       HConstant.HConfig.FnList.updateHeaderTitle,\r\n  //       [cfp.configPageExt.Title]\r\n  //     )\r\n  //   }\r\n  //   return () => {\r\n  //     if (props.isRootLevel) {\r\n  //       HUtils.runFuntion(\r\n  //         HConfig.fnList,\r\n  //         HConstant.HConfig.FnList.updateHeaderTitle,\r\n  //         [\"\"]\r\n  //       )\r\n  //     }\r\n  //   }\r\n  // }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  if (cfp.showLoading) {\r\n    return cfp.renderLoading()\r\n  }\r\n  if (cfp.errorMsg) {\r\n    return cfp.renderError(cfp.errorMsg)\r\n  }\r\n\r\n  const tabs = cfp.getTabs()\r\n  return (\r\n    <div className=\"mp-admin_tab styled-2\">\r\n      {tabs && tabs.length > 0 && (\r\n        <Tabs\r\n          tabsWrapperClass=\"body-tabs body-tabs-layout no-print\"\r\n          transform={false}\r\n          showInkBar={true}\r\n          items={tabs}\r\n          selectedTabKey={fnListMyPage.getTabsIndexSelected(cfp.fnList)}\r\n          onChange={index => {\r\n            // console.warn(\"onChange:\", index)\r\n            fnListMyPage.onChangeTab(cfp.fnList, [index])\r\n          }}\r\n        />\r\n      )}\r\n      {tabs && tabs.length == 0 && <div>No Contents in Options!</div>}\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}