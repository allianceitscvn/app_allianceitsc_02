{"version":3,"sources":["../node_modules/reactstrap/es/Spinner.js","modules/qlproject/MyUI/prj_task_item.js"],"names":["_excluded","propTypes","tag","tagPropType","type","PropTypes","string","size","color","className","cssModule","object","children","Spinner","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","role","defaultProps","ColorByStatus","TODO","DONE","DOING","PENDING","EMPTY","Status","getColorByStatus","item","_status","String","TaskStatusCode","toUpperCase","UISliderRange","useState","defaultValue","value","setValue","console","warn","style","display","flexDirection","alignItems","marginRight","position","height","flex","userSelect","left","top","right","bottom","width","min","max","onChange","ev","log","currentTarget","onMouseUp","HUtils","runFuntion","fnList","UIPopoverTaskLink","v","setV","onlyLink","WrapTaskLink","onClick","stopPropagation","title","href","target","rel","overlay","propsOverlay","WrapPopoverTaskLink","startsWith","placeholder","overlayClassName","placement","destroyTooltipOnHide","opacity","UIPopoverTaskNote","disabled","WrapPopoverTaskNote","rows","hide","length","MPDailyTaskItem","requestDelete","data","setState","loading","ApiGeneric","request","method","path","name","Id","successCallBack","response","errorCallBack","err","requestDoneTask","task","loadingDoneTask","Data","Object","keys","k","forceUpdate","requestDoTask","loadingDoTask","requestUpdate","fieldName","cbSuccess","multi","_values","FieldName","NewValue","map","i","Values","_getCanEdit","_canEdit","_getOptions","_getProjects","_optionsProjects","_options","ProjectList","_getStaffOfProject","_staffOfProject","_projectId","ProjectId","Value","UserProject","_getStatus","_optionsStatus","TaskStatusCodeList","state","showMoreDetail","this","mode","WrapLayout","background","sourceData","valueSelected","itemOption","ProjectName","AssignToId","IM_AssignToName","AssignById","IM_AssignByName","TaskName","spellCheck","onBlur","TaskLink","onUpdateValue","Note","PercentCompleted","marginTop","justifyContent","marginLeft","MyModal","showConfirm","msg","onClickOK","cModal","showAssignTo","HFormat","format","IM_CreatedDate","Component","styled","div"],"mappings":"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","file":"static/js/168.3a815713.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import { HFormat, HUtils } from \"@macashipo/mlib\"\r\nimport classNames from \"classnames\"\r\nimport React, { Component } from \"react\"\r\nimport { Spinner } from \"reactstrap\"\r\nimport { MyModal, MyUI, Popover } from \"src/core/components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport styled from \"styled-components\"\r\n\r\nconst ColorByStatus = {\r\n  TODO: \"#17a2b8\",\r\n  DONE: \"#28a745\",\r\n  DOING: \"#007bff\",\r\n  PENDING: \"#ffc107\",\r\n  EMPTY: \"#6faae5\",\r\n}\r\nconst Status = {\r\n  TODO: \"ToDo\",\r\n  DONE: \"Done\",\r\n  DOING: \"Doing\",\r\n  PENDING: \"Pending\",\r\n  EMPTY: \"\",\r\n}\r\nconst getColorByStatus = (item = {}) => {\r\n  let _status = String(item.TaskStatusCode).toUpperCase()\r\n  if (ColorByStatus[_status]) {\r\n    return ColorByStatus[_status]\r\n  }\r\n  return \"#6faae5\"\r\n}\r\n\r\nconst UISliderRange = props => {\r\n  const [value, setValue] = React.useState(props.defaultValue || 0)\r\n  console.warn(\"render slider:\", props)\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\r\n    >\r\n      <div style={{ marginRight: \"10px\" }}>Complete: {value}%</div>\r\n      <div style={{ position: \"relative\", height: \"24px\", flex: 1 }}>\r\n        <div\r\n          className=\"progress\"\r\n          style={{\r\n            userSelect: \"none\",\r\n            height: \"8px\",\r\n            position: \"absolute\",\r\n            left: 0,\r\n            top: 8,\r\n            right: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <div\r\n            className=\"progress-bar bg-success progress-bar-striped\"\r\n            role=\"progressbar\"\r\n            style={{ width: `${value}%` }}\r\n          ></div>\r\n        </div>\r\n        <input\r\n          style={{ position: \"absolute\", height: \"24px\" }}\r\n          type=\"range\"\r\n          className=\"form-range\"\r\n          defaultValue={props.defaultValue || 0}\r\n          min=\"0\"\r\n          max=\"100\"\r\n          onChange={ev => {\r\n            console.log(\"change:\", ev.currentTarget.value)\r\n            setValue(ev.currentTarget.value)\r\n          }}\r\n          onMouseUp={() => {\r\n            console.log(\"mouse up\", value)\r\n            HUtils.runFuntion(props.fnList, \"onUpdateValue\", [value])\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UIPopoverTaskLink = props => {\r\n  const defaultValue = props.defaultValue || \"\"\r\n  const [v, setV] = React.useState(defaultValue)\r\n  if (props.onlyLink) {\r\n    return (\r\n      <WrapTaskLink\r\n        onClick={ev => {\r\n          //ngan viec mo detail\r\n          ev.stopPropagation()\r\n        }}\r\n        title={`Open link: ${defaultValue}`}\r\n      >\r\n        <a href={defaultValue} target=\"_blank\" rel=\"noreferrer\">\r\n          <i style={{ color: \"#007bff\" }} className=\"fa fa-external-link\"></i>\r\n        </a>\r\n      </WrapTaskLink>\r\n    )\r\n  }\r\n  return (\r\n    <WrapTaskLink>\r\n      <Popover\r\n        overlay={propsOverlay => {\r\n          return (\r\n            <WrapPopoverTaskLink>\r\n              <div className=\"a-top\">\r\n                <div className=\"a-left\">Task Link</div>\r\n                <div className=\"a-right\">\r\n                  {defaultValue != null && defaultValue.startsWith(\"http\") && (\r\n                    <a href={defaultValue} target=\"_blank\" rel=\"noreferrer\">\r\n                      <i\r\n                        style={{ color: \"#007bff\" }}\r\n                        className=\"fa fa-external-link\"\r\n                      ></i>\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Task Link\"\r\n                  defaultValue={v}\r\n                  onChange={ev => {\r\n                    setV(ev.currentTarget.value)\r\n                  }}\r\n                />\r\n                {v != defaultValue && (\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    onClick={() => {\r\n                      HUtils.runFuntion(props.fnList, \"onUpdateValue\", [v])\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-check\" /> Save\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </WrapPopoverTaskLink>\r\n          )\r\n        }}\r\n        overlayClassName=\"m-popover\"\r\n        placement=\"bottom\"\r\n        destroyTooltipOnHide={true}\r\n      >\r\n        <div>\r\n          <i\r\n            className=\"fa fa-link\"\r\n            style={\r\n              defaultValue != null && defaultValue.startsWith(\"http\")\r\n                ? { color: \"#007bff\", opacity: 1 }\r\n                : { opacity: 0.5 }\r\n            }\r\n          ></i>\r\n        </div>\r\n      </Popover>\r\n    </WrapTaskLink>\r\n  )\r\n}\r\nconst UIPopoverTaskNote = props => {\r\n  const defaultValue = props.defaultValue || \"\"\r\n  const disabled = props.disabled\r\n  const [v, setV] = React.useState(defaultValue)\r\n  return (\r\n    <WrapTaskLink\r\n      onClick={ev => {\r\n        //ngan viec mo detail\r\n        ev.stopPropagation()\r\n      }}\r\n      title={`Task Note`}\r\n    >\r\n      <Popover\r\n        overlay={propsOverlay => {\r\n          return (\r\n            <WrapPopoverTaskNote>\r\n              <div className=\"a-top\">\r\n                <div className=\"a-left\">Task Note</div>\r\n                <div className=\"a-right\"></div>\r\n              </div>\r\n              <div>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  placeholder=\"Task Note\"\r\n                  disabled={disabled}\r\n                  rows={5}\r\n                  defaultValue={v}\r\n                  onChange={ev => {\r\n                    setV(ev.currentTarget.value)\r\n                  }}\r\n                />\r\n                {v != defaultValue && (\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    onClick={() => {\r\n                      HUtils.runFuntion(props.fnList, \"onUpdateValue\", [\r\n                        v,\r\n                        () => {\r\n                          propsOverlay.hide && propsOverlay.hide()\r\n                        },\r\n                      ])\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-check\" /> Save\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </WrapPopoverTaskNote>\r\n          )\r\n        }}\r\n        overlayClassName=\"m-popover\"\r\n        placement=\"bottom\"\r\n        destroyTooltipOnHide={true}\r\n      >\r\n        <div>\r\n          <i\r\n            className=\"fa fa-file-text-o\"\r\n            style={\r\n              defaultValue != null && defaultValue.length > 0\r\n                ? { color: \"#007bff\", opacity: 1 }\r\n                : { opacity: 0.5 }\r\n            }\r\n          ></i>\r\n        </div>\r\n      </Popover>\r\n    </WrapTaskLink>\r\n  )\r\n}\r\nclass MPDailyTaskItem extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showMoreDetail: false,\r\n      loadingDoTask: false,\r\n      loadingDoneTask: false,\r\n    }\r\n  }\r\n  componentDidMount() {}\r\n  requestDelete = () => {\r\n    const data = this.props.data || {}\r\n    const fnList = this.props.fnList || {}\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"UserTask\",\r\n            name: `Delete/${data.Id}`,\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            HUtils.runFuntion(fnList, \"reloadTasks\", [])\r\n            HUtils.runFuntion(fnList, \"hideModal\", [])\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({ loading: false })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  requestDoneTask = task => {\r\n    const data = this.props.data || {}\r\n    const fnList = this.props.fnList || {}\r\n    this.setState(\r\n      {\r\n        loadingDoneTask: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"UserTask\",\r\n            name: `SetStatusDoneTask/${task.Id}`,\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            if (response.Data) {\r\n              for (let k of Object.keys(response.Data)) {\r\n                data[k] = response.Data[k]\r\n              }\r\n            }\r\n            this.forceUpdate()\r\n            HUtils.runFuntion(fnList, \"afterUpdateData\", [data])\r\n            this.setState({ loadingDoneTask: false })\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({ loadingDoneTask: false })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  requestDoTask = task => {\r\n    const data = this.props.data || {}\r\n    const fnList = this.props.fnList || {}\r\n    this.setState(\r\n      {\r\n        loadingDoTask: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"UserTask\",\r\n            name: `SetStatusStartDoingTask/${task.Id}`,\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            if (response.Data) {\r\n              for (let k of Object.keys(response.Data)) {\r\n                data[k] = response.Data[k]\r\n              }\r\n            }\r\n            this.forceUpdate()\r\n            HUtils.runFuntion(fnList, \"afterUpdateData\", [data])\r\n            this.setState({ loadingDoTask: false })\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({ loadingDoTask: false })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  requestUpdate = (fieldName, value, cbSuccess, { multi } = {}) => {\r\n    const data = this.props.data || {}\r\n    const fnList = this.props.fnList || {}\r\n    if (data[fieldName] != value) {\r\n      this.setState(\r\n        {\r\n          loading: true,\r\n        },\r\n        () => {\r\n          let _values = [{ FieldName: fieldName, NewValue: value }]\r\n          if (multi) {\r\n            _values = multi.map((v, i) => {\r\n              return { FieldName: v.FieldName, NewValue: v.NewValue }\r\n            })\r\n          }\r\n          ApiGeneric({\r\n            request: {\r\n              method: \"POST\",\r\n              path: \"UserTask\",\r\n              name: \"UpdateFields\",\r\n            },\r\n            data: {\r\n              Id: data.Id,\r\n              Values: _values,\r\n            },\r\n            successCallBack: response => {\r\n              if (cbSuccess) {\r\n                cbSuccess(response)\r\n              }\r\n              if (response.Data) {\r\n                for (let k of Object.keys(response.Data)) {\r\n                  data[k] = response.Data[k]\r\n                }\r\n              }\r\n              this.setState({\r\n                loading: false,\r\n              })\r\n              HUtils.runFuntion(fnList, \"afterUpdateData\", [data])\r\n            },\r\n            errorCallBack: err => {\r\n              console.log(err)\r\n              this.setState({\r\n                loading: false,\r\n              })\r\n            },\r\n          })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  _getCanEdit = () => {\r\n    if (this._canEdit != null) {\r\n      return this._canEdit\r\n    }\r\n    const fnList = this.props.fnList || {}\r\n    let _canEdit = false\r\n    if (fnList && fnList[\"getCanEdit\"]) {\r\n      _canEdit = fnList[\"getCanEdit\"]()\r\n    }\r\n    this._canEdit = _canEdit\r\n    return _canEdit\r\n  }\r\n  _getOptions = () => {\r\n    const fnList = this.props.fnList || {}\r\n    let _options = HUtils.runFuntion(fnList, \"getOptions\") || {}\r\n    return _options\r\n  }\r\n  _getProjects = () => {\r\n    if (this._optionsProjects) {\r\n      return this._optionsProjects\r\n    }\r\n    this._optionsProjects = []\r\n    let _options = this._getOptions()\r\n    if (_options && _options.ProjectList) {\r\n      this._optionsProjects = _options.ProjectList\r\n    }\r\n    return this._optionsProjects\r\n  }\r\n  _getStaffOfProject = () => {\r\n    const data = this.props.data || {}\r\n    console.warn(\"_getStaffOfProject\", data, this._staffOfProject)\r\n    let _projectId = data.ProjectId\r\n    if (_projectId) {\r\n      if (this._staffOfProject) {\r\n        return this._staffOfProject[_projectId] || []\r\n      }\r\n      console.warn(\"_staffOfProject\", this._staffOfProject)\r\n      this._staffOfProject = {}\r\n      let _options = this._getOptions()\r\n      if (_options && _options.ProjectList) {\r\n        for (let i = 0; i < _options.ProjectList.length; i++) {\r\n          this._staffOfProject[_options.ProjectList[i].Value] =\r\n            _options.ProjectList[i].UserProject\r\n        }\r\n      }\r\n      return this._staffOfProject[_projectId] || []\r\n    }\r\n    return []\r\n  }\r\n  _getStatus = () => {\r\n    if (this._optionsStatus) {\r\n      return this._optionsStatus\r\n    }\r\n    this._optionsStatus = []\r\n    let _options = this._getOptions()\r\n    if (_options && _options.TaskStatusCodeList) {\r\n      this._optionsStatus = _options.TaskStatusCodeList\r\n    }\r\n    console.log(\"status:\", _options, this._optionsStatus)\r\n    return this._optionsStatus\r\n  }\r\n  render() {\r\n    const data = this.props.data || {}\r\n    const mode = this.props.mode || \"\"\r\n    const fnList = this.props.fnList || {}\r\n    if (this._getCanEdit()) {\r\n      return (\r\n        <WrapLayout className=\"a-canedit\">\r\n          <div\r\n            className=\"a-header\"\r\n            style={{ background: getColorByStatus(data) }}\r\n          >\r\n            <div className=\"a-headerleft\">\r\n              <Popover\r\n                overlay={propsOverlay => {\r\n                  return (\r\n                    <MyUI\r\n                      type=\"select_box_search_v2\"\r\n                      sourceData={this._getProjects()}\r\n                      valueSelected={\"\"}\r\n                      onChange={itemOption => {\r\n                        console.warn(\"onChange:\", itemOption, itemOption.Value)\r\n                        this.requestUpdate(\"ProjectId\", itemOption.Value)\r\n                        //hide popover\r\n                        if (propsOverlay.hide) {\r\n                          propsOverlay.hide()\r\n                        }\r\n                      }}\r\n                    />\r\n                  )\r\n                }}\r\n                overlayClassName=\"m-popover\"\r\n                placement=\"bottom\"\r\n                destroyTooltipOnHide={true}\r\n              >\r\n                <div className=\"a-pick-project\">\r\n                  {data.ProjectName || \"[No Project]\"}\r\n                </div>\r\n              </Popover>\r\n              {data.ProjectId != null && data.ProjectId.length > 0 && (\r\n                <Popover\r\n                  overlay={propsOverlay => {\r\n                    return (\r\n                      <MyUI\r\n                        type=\"select_box_search_v2\"\r\n                        sourceData={this._getStaffOfProject()}\r\n                        valueSelected={data.AssignToId}\r\n                        onChange={itemOption => {\r\n                          console.warn(\r\n                            \"onChange:\",\r\n                            itemOption,\r\n                            itemOption.Value\r\n                          )\r\n                          this.requestUpdate(\"AssignToId\", itemOption.Value)\r\n                          // this.requestUpdate(\"AssignToName\", itemOption.Text)\r\n                          //hide popover\r\n                          if (propsOverlay.hide) {\r\n                            propsOverlay.hide()\r\n                          }\r\n                        }}\r\n                      />\r\n                    )\r\n                  }}\r\n                  overlayClassName=\"m-popover\"\r\n                  placement=\"bottom\"\r\n                  destroyTooltipOnHide={true}\r\n                >\r\n                  <div className=\"a-pick-assignto\">\r\n                    Assign to{\" \"}\r\n                    {data.AssignToId\r\n                      ? `${data.IM_AssignToName || data.AssignToId}`\r\n                      : \"me\"}\r\n                  </div>\r\n                </Popover>\r\n              )}\r\n            </div>\r\n            <div className=\"a-right-info\">\r\n              <Popover\r\n                overlay={propsOverlay => {\r\n                  return (\r\n                    <MyUI\r\n                      type=\"select_box_search_v2\"\r\n                      sourceData={this._getStatus()}\r\n                      valueSelected={\"\"}\r\n                      onChange={itemOption => {\r\n                        console.warn(\"onChange:\", itemOption, itemOption.Value)\r\n                        this.requestUpdate(\"TaskStatusCode\", itemOption.Value)\r\n                        //hide popover\r\n                        if (propsOverlay.hide) {\r\n                          propsOverlay.hide()\r\n                        }\r\n                      }}\r\n                    />\r\n                  )\r\n                }}\r\n                overlayClassName=\"m-popover\"\r\n                placement=\"bottom\"\r\n                destroyTooltipOnHide={true}\r\n              >\r\n                <div className=\"a-pick-status\">\r\n                  {data.TaskStatusCode || \"[Status]\"}\r\n                </div>\r\n              </Popover>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {data.AssignById != data.AssignToId && (\r\n              <div className=\"a-assign\">\r\n                Assign from <span>{data.IM_AssignByName}</span> to{\" \"}\r\n                <span>{data.IM_AssignToName}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"a-name\">\r\n            <textarea\r\n              defaultValue={data.TaskName}\r\n              placeholder=\"Task Name\"\r\n              spellCheck=\"false\"\r\n              rows={mode == \"detail\" ? 4 : 2}\r\n              onBlur={ev => {\r\n                this.requestUpdate(\"TaskName\", ev.currentTarget.value)\r\n              }}\r\n            />\r\n            <div className=\"a-side-right\">\r\n              <UIPopoverTaskLink\r\n                defaultValue={data.TaskLink}\r\n                fnList={{\r\n                  onUpdateValue: v => {\r\n                    this.requestUpdate(\"TaskLink\", v)\r\n                  },\r\n                }}\r\n              />\r\n              <UIPopoverTaskNote\r\n                defaultValue={data.Note}\r\n                fnList={{\r\n                  onUpdateValue: (v, cbSuccess) => {\r\n                    this.requestUpdate(\"Note\", v, cbSuccess)\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <UISliderRange\r\n            defaultValue={data.PercentCompleted}\r\n            key={`slider_${data.PercentCompleted}`}\r\n            fnList={{\r\n              onUpdateValue: v => {\r\n                this.requestUpdate(\"PercentCompleted\", v)\r\n              },\r\n            }}\r\n          />\r\n          {/* <Popover\r\n            overlay={propsOverlay => {\r\n              return (\r\n                <UISliderRange\r\n                  defaultValue={data.PercentCompleted}\r\n                  fnList={{\r\n                    onUpdateValue: v => {\r\n                      this.requestUpdate(\"PercentCompleted\", v)\r\n                    },\r\n                  }}\r\n                />\r\n              )\r\n            }}\r\n            overlayClassName=\"m-popover\"\r\n            placement=\"bottom\"\r\n            destroyTooltipOnHide={true}\r\n          >\r\n            <div\r\n              className=\"progress\"\r\n              style={{ height: \"8px\", marginTop: \"5px\" }}\r\n            >\r\n              <div\r\n                className=\"progress-bar bg-success progress-bar-striped\"\r\n                role=\"progressbar\"\r\n                style={{ width: `${data.PercentCompleted || 0}%` }}\r\n              ></div>\r\n            </div>\r\n          </Popover> */}\r\n          {/* {mode == \"detail\" && (\r\n            <div>\r\n              <div\r\n                className=\"a-moredetail\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    showMoreDetail: !this.state.showMoreDetail,\r\n                  })\r\n                }}\r\n              >\r\n                {this.state.showMoreDetail == false ? (\r\n                  <div>\r\n                    Show more detail <i className=\"fa fa-angle-down\" />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    Hide more detail <i className=\"fa fa-angle-up\" />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {this.state.showMoreDetail == true && (\r\n                <div className=\"a-moredetail-expand\">\r\n                  <div>\r\n                    <div>Assign To</div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )} */}\r\n          {mode == \"detail\" && (\r\n            <div\r\n              style={{\r\n                marginTop: \"10px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              {data.TaskStatusCode != Status.DONE && (\r\n                <button\r\n                  className=\"btn btn-success\"\r\n                  style={{ marginLeft: \"2px\" }}\r\n                  disabled={this.state.loadingDoneTask}\r\n                  onClick={() => {\r\n                    MyModal.showConfirm({\r\n                      title: \"Done task\",\r\n                      msg: \"Are you sure you want to set done this task?\",\r\n                      onClickOK: cModal => {\r\n                        console.log(\"onOK\")\r\n                        this.requestDoneTask(data)\r\n                        if (cModal && cModal.hide) {\r\n                          cModal.hide()\r\n                        }\r\n                      },\r\n                    })\r\n                  }}\r\n                >\r\n                  Done Task\r\n                </button>\r\n              )}\r\n              {data.TaskStatusCode != Status.DONE && (\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ marginLeft: \"2px\" }}\r\n                  disabled={this.state.loadingDoTask}\r\n                  onClick={() => {\r\n                    this.requestDoTask(data)\r\n                  }}\r\n                >\r\n                  Do Task\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                style={{ marginLeft: \"2px\" }}\r\n                onClick={() => {\r\n                  MyModal.showConfirm({\r\n                    title: \"Delete task\",\r\n                    msg: \"Are you sure you want to delete this task?\",\r\n                    onClickOK: cModal => {\r\n                      console.log(\"onOK\")\r\n                      this.requestDelete(cModal)\r\n                      if (cModal && cModal.hide) {\r\n                        cModal.hide()\r\n                      }\r\n                    },\r\n                  })\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {this.state.loading === true && (\r\n            <div className=\"a-loading\">\r\n              <Spinner />\r\n            </div>\r\n          )}\r\n        </WrapLayout>\r\n      )\r\n    }\r\n    // console.warn(\"render task item:\", this.props)\r\n    return (\r\n      <WrapLayout\r\n        onClick={() => {\r\n          console.log(\"mode:\", mode, this.props)\r\n          HUtils.runFuntion(fnList, \"onClickItem\", [data])\r\n        }}\r\n      >\r\n        <div\r\n          className=\"a-header\"\r\n          style={{ background: getColorByStatus(data) }}\r\n        >\r\n          <div className=\"a-project\">{data.ProjectName || \"[No Project]\"}</div>\r\n          <div className=\"a-right-info\">\r\n            <div className=\"a-status\">{data.TaskStatusCode || \"[Status]\"}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"a-more-top\">\r\n          {data.AssignById != data.AssignToId ? (\r\n            <div\r\n              className=\"a-assign\"\r\n              title={`Assign from ${data.IM_AssignByName} to ${data.IM_AssignToName}`}\r\n            >\r\n              Assign to <span>{data.IM_AssignToName}</span>\r\n            </div>\r\n          ) : this.props.showAssignTo === true ? (\r\n            <div className=\"a-assign\">\r\n              Assign to <span>{data.IM_AssignToName}</span>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <div className=\"a-more-top-right\">\r\n            {data.TaskLink && (\r\n              <UIPopoverTaskLink\r\n                defaultValue={data.TaskLink}\r\n                onlyLink={true}\r\n                fnList={{\r\n                  onUpdateValue: v => {\r\n                    this.requestUpdate(\"TaskLink\", v)\r\n                  },\r\n                }}\r\n              />\r\n            )}\r\n            {data.Note && (\r\n              <UIPopoverTaskNote\r\n                defaultValue={data.Note}\r\n                disabled={true}\r\n                fnList={{\r\n                  onUpdateValue: (v, cbSuccess) => {\r\n                    this.requestUpdate(\"Note\", v, cbSuccess)\r\n                  },\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={classNames(\"a-name\", mode, {\r\n            \"text-ellipsis-l2\": mode == \"list\",\r\n          })}\r\n        >\r\n          {data.TaskName || <span style={{ color: \"grey\" }}>[No Name]</span>}\r\n        </div>\r\n        <div className=\"progress\" style={{ height: \"8px\", marginTop: \"5px\" }}>\r\n          <div\r\n            className=\"progress-bar bg-success progress-bar-striped\"\r\n            role=\"progressbar\"\r\n            style={{ width: `${data.PercentCompleted || 0}%` }}\r\n          ></div>\r\n        </div>\r\n        <div\r\n          className=\"a-bottom\"\r\n          title={`Created at ${HFormat.format(data.IM_CreatedDate, {\r\n            type: \"date\",\r\n            format: \"DD/MM/YYYY HH:mm\",\r\n          })}`}\r\n        >\r\n          Created{\" \"}\r\n          <strong>{`${HFormat.format(data.IM_CreatedDate, {\r\n            type: \"fromnow\",\r\n            format: \"DD/MM/YYYY HH:mm\",\r\n          })}`}</strong>\r\n        </div>\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrapLayout = styled.div`\r\n  position: relative;\r\n  background: white;\r\n  padding: 10px;\r\n  word-break: break-word;\r\n  box-shadow: 0 0 0 1px rgba(53, 72, 91, 0.07), 0 2px 2px rgba(0, 0, 0, 0.01),\r\n    0 4px 4px rgba(0, 0, 0, 0.02), 0 10px 8px rgba(0, 0, 0, 0.03),\r\n    0 15px 15px rgba(0, 0, 0, 0.03), 0 30px 30px rgba(0, 0, 0, 0.04),\r\n    0 70px 65px rgba(0, 0, 0, 0.05);\r\n  & > .a-loading {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background: #e9e9e97d;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  &.a-canedit {\r\n    & .a-pick-assignto {\r\n      cursor: pointer;\r\n      padding: 0px 5px;\r\n      &:hover {\r\n        background: #ededed6e;\r\n        border-radius: 2px;\r\n      }\r\n    }\r\n    & .a-pick-project {\r\n      cursor: pointer;\r\n      padding: 0px 5px;\r\n      &:hover {\r\n        background: #ededed6e;\r\n        border-radius: 2px;\r\n      }\r\n    }\r\n    & .a-pick-status {\r\n      cursor: pointer;\r\n      padding: 0px 5px;\r\n      font-weight: bold;\r\n      &:hover {\r\n        background: #ededed6e;\r\n      }\r\n    }\r\n    & .progress {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  & .a-name {\r\n    position: relative;\r\n    & textarea {\r\n      border: 0px;\r\n      width: 100%;\r\n      outline: none;\r\n      padding: 0px;\r\n      padding-right: 20px;\r\n    }\r\n    & .a-side-right {\r\n      position: absolute;\r\n      top: 0px;\r\n      right: 0px;\r\n      background: whitesmoke;\r\n      width: 20px;\r\n      // height: 100px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      box-shadow: 0px 4px 8px -2px rgba(9, 30, 66, 0.25),\r\n        0px 0px 0px 1px rgba(9, 30, 66, 0.08);\r\n    }\r\n  }\r\n  & .a-header {\r\n    display: flex;\r\n    background: green;\r\n    margin: -10px;\r\n    margin-bottom: 5px;\r\n    color: white;\r\n    padding: 2px;\r\n    padding-left: 5px;\r\n    padding-right: 5px;\r\n    font-size: 13px;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    & .a-project {\r\n      padding: 0px 5px;\r\n    }\r\n    & .a-status {\r\n      font-weight: bold;\r\n      padding: 0px 5px;\r\n    }\r\n    & .a-headerleft {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    & .a-right-info {\r\n      display: flex;\r\n      align-items: center;\r\n      & > div {\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n  }\r\n  & .a-moredetail {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & > div {\r\n      padding: 5px;\r\n      background: #ededed;\r\n      border-radius: 4px;\r\n      margin: 5px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  & .form-range {\r\n    width: 100%;\r\n    height: 1.5rem;\r\n    padding: 0;\r\n    background-color: transparent;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n    accent-color: red;\r\n    &::-webkit-slider-thumb {\r\n      background-color: #73a839;\r\n      box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(40, 167, 69, 0.25);\r\n    }\r\n    &::-webkit-slider-thumb:active {\r\n      background-color: green;\r\n    }\r\n    &::-webkit-slider-runnable-track {\r\n      width: 100%;\r\n      background-color: transparent;\r\n    }\r\n    // &::-webkit-progress-value {\r\n    //   background-color: red;\r\n    // }\r\n  }\r\n  & .a-assign {\r\n    font-size: 10px;\r\n    color: #b1b1b1;\r\n    & > span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  & .a-more-top {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    & .a-more-top-right {\r\n      display: flex;\r\n      align-items: center;\r\n      & > div {\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n  }\r\n  & .a-bottom {\r\n    font-size: 10px;\r\n    color: #b1b1b1;\r\n    margin-top: 5px;\r\n    margin-bottom: -5px;\r\n  }\r\n`\r\n\r\nconst WrapTaskLink = styled.div`\r\n  // display: inline-block;\r\n  // position: absolute;\r\n  // right: 10px;\r\n  // top: 24px;\r\n  cursor: pointer;\r\n`\r\nconst WrapPopoverTaskLink = styled.div`\r\n  & .a-top {\r\n    display: flex;\r\n    & > .a-left {\r\n      font-weight: bold;\r\n    }\r\n    & > .a-right {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n  & button {\r\n    margin-top: 5px;\r\n    padding: 2px;\r\n  }\r\n`\r\nconst WrapPopoverTaskNote = styled.div`\r\n  width: 300px;\r\n  max-width: 90vw;\r\n  & .a-top {\r\n    display: flex;\r\n    & > .a-left {\r\n      font-weight: bold;\r\n    }\r\n    & > .a-right {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n  & button {\r\n    margin-top: 5px;\r\n    padding: 2px;\r\n  }\r\n`\r\n\r\nexport { UIPopoverTaskLink, UIPopoverTaskNote }\r\nexport default MPDailyTaskItem\r\n"],"sourceRoot":""}