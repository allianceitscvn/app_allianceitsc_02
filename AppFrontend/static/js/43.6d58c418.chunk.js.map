{"version":3,"sources":["modules/adminpanel/MyTableFilterControl/Types/datefromto_text.js","modules/adminpanel/MyTableFilterControl/Types/_wrapControl.js","modules/adminpanel/hooks/fnListOfFilterControl.js","modules/adminpanel/hooks/useConfigTableFilterControl.js","helpers/Date.js"],"names":["Wrap","styled","div","MTFCDateFromTo","props","ctfc","useConfigTableFilterControl","currentValue","more","console","log","_customProps","isFrom","isTo","singleDatePicker","_showRanges","showRanges","_defaultShowRange","HCF","getCF","KConfigApp","mtf_datefromto_showRange","alwaysShowCalendars","ranges","AHDate","getRanges","moreDateRangePicker","length","startDate","endDate","className","type","value","onChange","v","warn","updateData","attrs","initialSettings","MTFCWrapControl","_title","oneFilterControl","title","HIs","isJsonString","_obj","HJson","getObj","children","fnListOfFilterControl","configFilterControl","_fnList","fnList","kfnGetTitleControl","refConfigFilterControl","React","useRef","current","refFnList","forceUpdate","useForceUpdate","custom","_fnGetFilterOutFromValue","MyTableFilterControlHelpers","ConfigByType","fn","setFnGetFilterOutFromValue","_loadFirst","setFromComponent","loadLocal","clearValue","updateCurrentValue","fnListMyPage","fnGetOnePage","clear","getSourceData","optionKey","startsWith","dateStringWithFormat","time","format","_d","Date","moment","toISOString","fromNow","_ranges","i18next","t","startOf","endOf","subtract","Array","isArray","i","hasOwnProperty"],"mappings":"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","file":"static/js/43.6d58c418.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { MyBase, HCF } from \"@macashipo/mlib\"\r\nimport WrapControl from \"./_wrapControl\"\r\nimport useConfigTableFilterControl from \"../../hooks/useConfigTableFilterControl\"\r\nimport styled from \"styled-components\"\r\nimport AHDate from \"src/helpers/Date\"\r\nimport { KConfigApp } from \"src/helpers/K\"\r\nconst Wrap = styled.div`\r\n  & .form-control {\r\n    padding: 0px;\r\n    height: auto;\r\n    border: 0px;\r\n  }\r\n`\r\nexport default function MTFCDateFromTo(props) {\r\n  const ctfc = useConfigTableFilterControl({ props })\r\n  const { currentValue, more } = ctfc\r\n  console.log(\"render MTFCDateFromTo:\", props, currentValue, more)\r\n  let _customProps = {}\r\n  if (more.isFrom === true) {\r\n    _customProps.singleDatePicker = true\r\n  } else if (more.isTo === true) {\r\n    _customProps.singleDatePicker = true\r\n  }\r\n  let _showRanges = more.showRanges\r\n  let _defaultShowRange = HCF.getCF(KConfigApp.mtf_datefromto_showRange)\r\n  if (_showRanges !== false && (_showRanges != null || _defaultShowRange)) {\r\n    _customProps.alwaysShowCalendars = true\r\n    _customProps.ranges = AHDate.getRanges(_showRanges || true)\r\n  }\r\n  if (more.moreDateRangePicker) {\r\n    _customProps = {\r\n      ..._customProps,\r\n      ...more.moreDateRangePicker,\r\n    }\r\n  }\r\n  if (currentValue && currentValue.length > 1) {\r\n    _customProps.startDate = currentValue[0]\r\n    _customProps.endDate = currentValue[1]\r\n  }\r\n  return (\r\n    <WrapControl {...props}>\r\n      <Wrap className=\"mtfc-datefromto\">\r\n        <MyBase\r\n          type=\"daterangepicker\"\r\n          className=\"form-control\"\r\n          value={currentValue}\r\n          onChange={v => {\r\n            console.warn(\"onChange:\", v)\r\n            if (v != null) {\r\n              ctfc.updateData(v)\r\n            }\r\n          }}\r\n          attrs={{\r\n            initialSettings: _customProps,\r\n          }}\r\n        />\r\n      </Wrap>\r\n    </WrapControl>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { HIs, HJson } from \"@macashipo/mlib\"\r\nconst Wrap = styled.div`\r\n  margin-bottom: 0.5rem;\r\n  min-width: 300px;\r\n  & input {\r\n    padding: 0.25rem;\r\n    line-height: 1rem;\r\n    height: 1.5rem;\r\n  }\r\n  & .alert {\r\n    padding: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`\r\nexport default function MTFCWrapControl(props) {\r\n  const { oneFilterControl } = props\r\n  // console.warn(\"render MTFCWrapControl:\", props)\r\n  let _title = oneFilterControl.title\r\n  if (HIs.isJsonString(_title)) {\r\n    let _obj = HJson.getObj(_title, {})\r\n    if (_obj && _obj.title) {\r\n      _title = _obj.title\r\n    }\r\n  }\r\n  return (\r\n    <Wrap className=\"mtfcw-ap col-4\">\r\n      <div>{_title}</div>\r\n      <div>{props.children}</div>\r\n    </Wrap>\r\n  )\r\n}\r\n","import { HIs, HJson } from \"@macashipo/mlib\"\r\nimport { kfnGetTitleControl } from \"src/helpers/fnList\"\r\n\r\nconst fnListOfFilterControl = {\r\n  init({ props, configFilterControl }) {\r\n    // const configFormControl = props.configFormControl || {}\r\n    // const { fieldName, more } = configFormControl\r\n    let _fnList = {\r\n      ...props.fnList,\r\n    }\r\n    // const more = oneTableCell.more\r\n    // _fnList[kfnGetApiPath] = () => {\r\n    //   return HUtils.runFuntion(oneTableCell.fnList, kfnGetApiPath, [])\r\n    // }\r\n    _fnList[kfnGetTitleControl] = () => {\r\n      let _title = configFilterControl.title\r\n      if (HIs.isJsonString(_title)) {\r\n        let _obj = HJson.getObj(_title, {})\r\n        if (_obj && _obj.title) {\r\n          _title = _obj.title\r\n        }\r\n      }\r\n      return _title\r\n    }\r\n    return _fnList\r\n  },\r\n}\r\n\r\nconst helpersOfFilterControl = {}\r\nexport { helpersOfFilterControl, fnListOfFilterControl }\r\n","/*eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { HJson, MyTableFilterControlHelpers } from \"@macashipo/mlib\"\r\nimport React from \"react\"\r\nimport { fnListMyPage } from \"src/helpers/fnList\"\r\nimport { fnListOfFilterControl } from \"./fnListOfFilterControl\"\r\nimport useForceUpdate from \"./useForceUpdate\"\r\n\r\n// var countForceUpdate = 0\r\n// const countForceUpdateMax = 200\r\nfunction useConfigTableFilterControl({ props } = {}) {\r\n  // countForceUpdate++\r\n  const refConfigFilterControl = React.useRef(props.oneFilterControl)\r\n  const configFilterControl = refConfigFilterControl.current\r\n  const { type, currentValue, more } = configFilterControl //title, fieldName, optionKey, onePage\r\n  // const [valueFU, setValueFU] = useState(0) // integer state\r\n\r\n  const refFnList = React.useRef(\r\n    fnListOfFilterControl.init({ props, configFilterControl })\r\n  )\r\n  const fnList = refFnList.current\r\n\r\n  const forceUpdate = useForceUpdate()\r\n  // const forceUpdate = () => {\r\n  //   console.warn(\"forceUpdate\", countForceUpdate)\r\n  //   setValueFU(valueFU + 1)\r\n  // }\r\n\r\n  if (props.custom) {\r\n    if (configFilterControl[\"_applyCustom\"] == null) {\r\n      if (props.custom.more) {\r\n        configFilterControl.more = {\r\n          ...configFilterControl.more,\r\n          ...props.custom.more,\r\n        }\r\n      }\r\n      configFilterControl[\"_applyCustom\"] = true\r\n    }\r\n  }\r\n\r\n  if (configFilterControl) {\r\n    if (configFilterControl._fnGetFilterOutFromValue == null) {\r\n      if (\r\n        MyTableFilterControlHelpers.ConfigByType &&\r\n        MyTableFilterControlHelpers.ConfigByType[type]\r\n      ) {\r\n        const fn = value => {\r\n          return MyTableFilterControlHelpers.ConfigByType[type][\"getFilterOut\"](\r\n            value,\r\n            configFilterControl\r\n          )\r\n        }\r\n        configFilterControl.setFnGetFilterOutFromValue(fn)\r\n      } else if (\r\n        MyTableFilterControlHelpers.ConfigByType &&\r\n        MyTableFilterControlHelpers.ConfigByType[\"_default\"]\r\n      ) {\r\n        const fn = value => {\r\n          return MyTableFilterControlHelpers.ConfigByType[\"_default\"][\r\n            \"getFilterOut\"\r\n          ](value, configFilterControl)\r\n        }\r\n        configFilterControl.setFnGetFilterOutFromValue(fn)\r\n      }\r\n    }\r\n    if (configFilterControl._loadFirst !== false) {\r\n      if (configFilterControl.setFromComponent) {\r\n        configFilterControl.setFromComponent({\r\n          forceUpdate: () => {\r\n            console.warn(\"forceupdateee\")\r\n            forceUpdate()\r\n          },\r\n        })\r\n      }\r\n      configFilterControl.loadLocal()\r\n      configFilterControl._loadFirst = false\r\n      // console.warn(\"load first\", configFilterControl)\r\n    }\r\n  }\r\n\r\n  return {\r\n    forceUpdate,\r\n    configFilterControl,\r\n    currentValue,\r\n    more,\r\n    fnList,\r\n    clearValue: () => {\r\n      if (configFilterControl && configFilterControl.updateCurrentValue) {\r\n        console.warn(\"clear Value\", props, configFilterControl)\r\n        let _onePage = fnListMyPage.fnGetOnePage(fnList)\r\n        configFilterControl.clear()\r\n        configFilterControl.updateCurrentValue(null)\r\n      }\r\n      forceUpdate()\r\n    },\r\n    updateData: v => {\r\n      if (configFilterControl && configFilterControl.updateCurrentValue) {\r\n        configFilterControl.updateCurrentValue(v)\r\n      }\r\n      forceUpdate()\r\n    },\r\n    getSourceData: () => {\r\n      //bo sung source list tu json string Source\r\n      // console.warn(\"configFilterControl\", configFilterControl)\r\n      if (\r\n        configFilterControl &&\r\n        configFilterControl.optionKey &&\r\n        configFilterControl.optionKey.startsWith(\"[\")\r\n      ) {\r\n        return HJson.getObj(configFilterControl.optionKey, [])\r\n      }\r\n      if (configFilterControl && configFilterControl.getSourceData) {\r\n        return configFilterControl.getSourceData()\r\n      }\r\n      // if (onePage && onePage._dataOptions && onePage._dataOptions[optionKey]) {\r\n      //   return onePage._dataOptions[optionKey]\r\n      // }\r\n      return []\r\n    },\r\n  }\r\n}\r\n\r\nexport default useConfigTableFilterControl\r\n","import i18next from \"i18next\"\r\nimport moment from \"moment\"\r\nconst AHDate = {\r\n  dateStringWithFormat(time, format) {\r\n    if (time == null || time == 0 || time == \"\") {\r\n      return \"\"\r\n    }\r\n    let _d = new Date(time)\r\n    if (format != null && format.length > 0) {\r\n      return moment(time).format(format)\r\n    }\r\n    return _d.toISOString()\r\n  },\r\n  fromNow(time) {\r\n    if (time == null || time == 0 || time == \"\") {\r\n      return \"\"\r\n    }\r\n    return moment(time).fromNow()\r\n  },\r\n  getRanges(showRanges) {\r\n    let _ranges = {\r\n      [i18next.t(\"date_today\")]: [\r\n        moment().startOf(\"day\"),\r\n        moment().endOf(\"day\"),\r\n      ],\r\n      [i18next.t(\"date_yesterday\")]: [\r\n        moment().subtract(1, \"days\").startOf(\"day\"),\r\n        moment().subtract(1, \"days\").endOf(\"day\"),\r\n      ],\r\n      // 'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n      // 'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n      [i18next.t(\"date_thisweek\")]: [\r\n        moment().startOf(\"isoWeek\"),\r\n        moment().endOf(\"isoWeek\"),\r\n      ],\r\n      [i18next.t(\"date_thismonth\")]: [\r\n        moment().startOf(\"month\"),\r\n        moment().endOf(\"month\"),\r\n      ],\r\n      [i18next.t(\"date_thisyear\")]: [\r\n        moment().startOf(\"year\"),\r\n        moment().endOf(\"year\"),\r\n      ],\r\n      [i18next.t(\"date_lastmonth\")]: [\r\n        moment().subtract(1, \"month\").startOf(\"month\"),\r\n        moment().subtract(1, \"month\").endOf(\"month\"),\r\n      ],\r\n    }\r\n    if (Array.isArray(showRanges) == true) {\r\n      let _obj = {}\r\n      for (let i = 0; i < showRanges.length; i++) {\r\n        if (_ranges.hasOwnProperty(showRanges[i])) {\r\n          _obj[showRanges[i]] = _ranges[showRanges[i]]\r\n        }\r\n      }\r\n      // console.warn(\"Custom range:\",_obj);\r\n      return _obj\r\n    }\r\n    if (showRanges === true) {\r\n      return _ranges\r\n    }\r\n  },\r\n}\r\n\r\nexport default AHDate\r\n"],"sourceRoot":""}