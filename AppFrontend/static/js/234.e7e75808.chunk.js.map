{"version":3,"sources":["modules/qlproject/MyPage/prj_manager.js"],"names":["ModalSelectModal","props","sourceData","valueSelected","onChange","virtualized","style","maxHeight","type","inModal","MP_PRJManager","requestList","ApiGeneric","request","method","path","name","data","successCallBack","response","Data","_projectOptions","map","v","i","Value","UniqueId","Text","Name","_projectUniqueId","_projects","filter","_currentProject","length","_projectId","Id","window","location","href","setState","currentProject","projects","projectsOptions","requestProjectInfo","errorCallBack","err","console","log","ProjectId","Key","warn","_info","enviroments","platforms","_row","HJson","getObj","projectInfo","requestProjectExtraOfKey","key","cbSuccess","cbError","isMulti","_data","requestUpdate","value","title","isUpdateValue","isUpdateTitle","isUpdateBoth","_values","push","FieldName","NewValue","Values","requestUpdateInfo","_currentInfo","state","getString","open","_params","match","params","_paramsurl","HLink","getAllParamOnUrl","_tabkey","_fnList","getCurrentProjectId","getCurrentProjectUniqueId","getCurrentProjectInfo","getCurrentProjectExtra","onUpdateProjectExtra","opts","onUpdateProjectInfo","this","WrapLayout","className","onClick","MyModal","showFromMyUI","fnList","reloadList","size","typeItem","morePropsItem","onClickItem","tabs","CanSeeOverview","getContent","configPage","UIType","height","overflow","RequestData","Config","apiPath","hideHeader","showAssignTo","WrapIconAdd","marginLeft","ev","preventDefault","stopPropagation","_selectedTab","_tab","showFromComponent","propsComponent","itemOption","HUtils","runFuntion","updateCell","tabsWrapperClass","transform","showInkBar","items","selectedTabKey","k","updateParamOnUrl","clearParamOnUrl","Component","styled","div"],"mappings":"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","file":"static/js/234.e7e75808.chunk.js","sourcesContent":["import { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport Tabs from \"react-responsive-tabs\"\r\nimport { HJson, HLink, HUtils, MyPage, MyUI } from \"@macashipo/mlib\"\r\nimport { MyModal } from \"src/core/components\"\r\n\r\nfunction ModalSelectModal(props) {\r\n  const { sourceData, valueSelected, onChange, virtualized } = props\r\n  return (\r\n    <div style={{ maxHeight: \"calc(100vh - 5rem)\" }}>\r\n      <MyUI\r\n        type={\r\n          virtualized === true\r\n            ? \"select_box_search_virtualized\"\r\n            : \"select_box_search\"\r\n        }\r\n        sourceData={sourceData}\r\n        valueSelected={valueSelected}\r\n        onChange={onChange}\r\n        inModal={true}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nclass MP_PRJManager extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      projects: [],\r\n      projectsOptions: [],\r\n      currentProject: null,\r\n      projectInfo: {},\r\n      open: true,\r\n    }\r\n    this._params = props?.match?.params\r\n    this._projectId = this._params[\"pj\"]\r\n    this._projectUniqueId = this._params[\"pj\"]\r\n    this._paramsurl = HLink.getAllParamOnUrl() || {}\r\n    this._tabkey = this._paramsurl[\"tab\"]\r\n    this._fnList = {\r\n      getCurrentProjectId: () => {\r\n        return this._projectId\r\n      },\r\n      getCurrentProjectUniqueId: () => {\r\n        return this._projectUniqueId\r\n      },\r\n      getCurrentProjectInfo: () => {\r\n        return this.state.projectInfo\r\n      },\r\n      getCurrentProjectExtra: (key, cbSuccess, cbError, isMulti) => {\r\n        return this.requestProjectExtraOfKey(key, cbSuccess, cbError, isMulti)\r\n      },\r\n      onUpdateProjectExtra: opts => {\r\n        this.requestUpdate(opts)\r\n      },\r\n      onUpdateProjectInfo: opts => {\r\n        this.requestUpdateInfo(opts)\r\n      },\r\n    }\r\n    console.warn(\"props\", props)\r\n  }\r\n  componentDidMount() {\r\n    this.requestList()\r\n  }\r\n\r\n  requestList = () => {\r\n    ApiGeneric({\r\n      request: {\r\n        method: \"POST\",\r\n        path: \"ProjectMgmt\",\r\n        name: \"List\",\r\n      },\r\n      data: {},\r\n      successCallBack: response => {\r\n        if (response.Data && response.Data.Data) {\r\n          let _projectOptions = []\r\n          _projectOptions = response.Data.Data.map((v, i) => {\r\n            return {\r\n              Value: v.UniqueId,\r\n              Text: v.Name,\r\n            }\r\n          })\r\n          if (this._projectUniqueId) {\r\n            var _projects = response.Data.Data.filter((v, i) => {\r\n              return v.UniqueId == this._projectUniqueId\r\n            })\r\n            let _currentProject = null\r\n            if (_projects.length == 0 && response.Data.Data.length > 0) {\r\n              this._projectUniqueId = response.Data.Data[0].UniqueId\r\n              this._projectId = response.Data.Data[0].Id\r\n              window.location.href = `/pj/${this._projectUniqueId}`\r\n            } else if (_projects.length > 0) {\r\n              _currentProject = _projects[0]\r\n              this._projectId = _currentProject.Id\r\n            }\r\n            this.setState(\r\n              {\r\n                currentProject: _currentProject,\r\n                projects: response.Data.Data,\r\n                projectsOptions: _projectOptions,\r\n              },\r\n              () => {\r\n                this.requestProjectInfo()\r\n              }\r\n            )\r\n          } else {\r\n            this.setState(\r\n              {\r\n                projects: response.Data.Data,\r\n                projectsOptions: _projectOptions,\r\n              },\r\n              () => {\r\n                this.requestProjectInfo()\r\n              }\r\n            )\r\n          }\r\n        }\r\n      },\r\n      errorCallBack: err => {\r\n        console.log(err)\r\n      },\r\n    })\r\n  }\r\n\r\n  requestProjectInfo = () => {\r\n    ApiGeneric({\r\n      request: {\r\n        method: \"POST\",\r\n        path: \"Project_Ext\",\r\n        name: `GetItemsWithKey`,\r\n      },\r\n      data: {\r\n        ProjectId: this._projectId,\r\n        Key: \"Info\",\r\n      },\r\n      successCallBack: response => {\r\n        console.warn(\"res:\", response)\r\n        let _info = {\r\n          enviroments: [],\r\n          platforms: [],\r\n        }\r\n        if (response && response.Data) {\r\n          for (let i = 0; i < response.Data.length; i++) {\r\n            let _row = response.Data[i]\r\n            if (_row.Key == \"Info\") {\r\n              _info = HJson.getObj(_row.Value) || {}\r\n            }\r\n          }\r\n        }\r\n        this.setState({\r\n          projectInfo: _info,\r\n        })\r\n      },\r\n      errorCallBack: err => {\r\n        console.log(err)\r\n      },\r\n    })\r\n  }\r\n\r\n  requestProjectExtraOfKey = (key, cbSuccess, cbError, isMulti = false) => {\r\n    ApiGeneric({\r\n      request: {\r\n        method: \"POST\",\r\n        path: \"Project_Ext\",\r\n        name: `GetItemsWithKey`,\r\n      },\r\n      data: {\r\n        ProjectId: this._projectId,\r\n        Key: key,\r\n      },\r\n      successCallBack: response => {\r\n        console.warn(\"requestProjectExtraOfKey res:\", response)\r\n        let _data = null\r\n        if (response && response.Data) {\r\n          if (isMulti) {\r\n            _data = response.Data\r\n          } else {\r\n            for (let i = 0; i < response.Data.length; i++) {\r\n              let _row = response.Data[i]\r\n              if (_row.Key == key) {\r\n                _data = _row\r\n                break\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (cbSuccess) {\r\n          cbSuccess(_data)\r\n        }\r\n      },\r\n      errorCallBack: err => {\r\n        console.log(err)\r\n        if (cbError) {\r\n          cbError(err)\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  requestUpdate = ({\r\n    key,\r\n    value,\r\n    title,\r\n    isUpdateValue,\r\n    isUpdateTitle,\r\n    isUpdateBoth,\r\n    cbSuccess,\r\n  } = {}) => {\r\n    if (key) {\r\n      let _values = []\r\n      if (isUpdateTitle) {\r\n        _values.push({\r\n          FieldName: \"Title\",\r\n          NewValue: title,\r\n        })\r\n      }\r\n      if (isUpdateValue) {\r\n        _values.push({\r\n          FieldName: \"Value\",\r\n          NewValue: value,\r\n        })\r\n      }\r\n      ApiGeneric({\r\n        request: {\r\n          method: \"POST\",\r\n          path: \"Project_Ext\",\r\n          name: \"UpdateFields\",\r\n        },\r\n        data: {\r\n          Id: key,\r\n          ProjectId: this._projectId,\r\n          Values: _values,\r\n        },\r\n        successCallBack: response => {\r\n          if (cbSuccess) {\r\n            cbSuccess(response)\r\n          }\r\n        },\r\n        errorCallBack: err => {\r\n          console.log(err)\r\n        },\r\n      })\r\n    } else {\r\n      console.warn(\"Missing key\")\r\n    }\r\n  }\r\n\r\n  requestUpdateInfo = ({ key, value, cbSuccess } = {}) => {\r\n    let _currentInfo = this.state.projectInfo || {}\r\n    _currentInfo[key] = value\r\n    this.requestUpdate({\r\n      key: \"Info\",\r\n      value: HJson.getString(_currentInfo),\r\n      isUpdateValue: true,\r\n      cbSuccess,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(\"MP_PRJManager\")\r\n    if (this._projectId == null || this._projectId == \"\") {\r\n      return (\r\n        <WrapLayout className=\"a-pj-list\">\r\n          <div className=\"a-header\">\r\n            <div className=\"a-hleft\">Projects</div>\r\n            <div className=\"a-hright\">\r\n              <div>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                    MyModal.showFromMyUI(\r\n                      {\r\n                        type: \"prj_new_project\",\r\n                        fnList: {\r\n                          reloadList: () => {\r\n                            this.requestList()\r\n                          },\r\n                        },\r\n                      },\r\n                      { title: \"New Project\", size: \"xs\" }\r\n                    )\r\n                  }}\r\n                >\r\n                  + Project\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {this.state.projects != null && this.state.projects.length > 0 ? (\r\n              <div>\r\n                <MyUI\r\n                  type=\"grid\"\r\n                  data={this.state.projects}\r\n                  typeItem=\"prj_pj_item\"\r\n                  morePropsItem={{}}\r\n                  fnList={{\r\n                    onClickItem: v => {\r\n                      console.log(\"click item:\", v)\r\n                      window.location.href = `/pj/${v.UniqueId}`\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div>No Project</div>\r\n            )}\r\n          </div>\r\n        </WrapLayout>\r\n      )\r\n    }\r\n    const tabs = []\r\n    const currentProject = this.state.currentProject\r\n    if (currentProject == null) {\r\n      return <div></div>\r\n    }\r\n    if (currentProject.CanSeeOverview !== false) {\r\n      tabs.push({\r\n        title: \"Overview\",\r\n        key: \"info\",\r\n        getContent: () => {\r\n          return (\r\n            <MyPage configPage={{ UIType: \"prj_info\" }} fnList={this._fnList} />\r\n          )\r\n        },\r\n      })\r\n    }\r\n    tabs.push({\r\n      title: \"Api\",\r\n      key: \"api\",\r\n      getContent: () => {\r\n        return (\r\n          <MyPage configPage={{ UIType: \"prj_api\" }} fnList={this._fnList} />\r\n        )\r\n      },\r\n    })\r\n    tabs.push({\r\n      title: \"Tasks\",\r\n      key: \"task\",\r\n      getContent: () => {\r\n        return (\r\n          <div style={{ height: \"100%\", overflow: \"auto\" }}>\r\n            <MyPage\r\n              configPage={{\r\n                UIType: \"prj_dailytask\",\r\n                RequestData: {\r\n                  ProjectId: this._projectUniqueId,\r\n                },\r\n                Config: {\r\n                  apiPath: \"UserTask\",\r\n                  hideHeader: true,\r\n                  showAssignTo: true,\r\n                },\r\n              }}\r\n              fnList={this._fnList}\r\n            />\r\n          </div>\r\n        )\r\n      },\r\n    })\r\n    tabs.push({\r\n      title: \"Users\",\r\n      key: \"users\",\r\n      getContent: () => {\r\n        return (\r\n          <MyPage\r\n            configPage={{\r\n              UIType: \"prj_users\",\r\n            }}\r\n            fnList={this._fnList}\r\n          />\r\n        )\r\n      },\r\n    })\r\n    tabs.push({\r\n      title: (\r\n        <div>\r\n          Releases\r\n          <WrapIconAdd\r\n            style={{ marginLeft: \"5px\" }}\r\n            onClick={ev => {\r\n              ev.preventDefault()\r\n              ev.stopPropagation()\r\n              MyModal.showFromMyUI(\r\n                {\r\n                  type: \"prj_new_release\",\r\n                  fnList: this._fnList,\r\n                },\r\n                {\r\n                  title: \"New release\",\r\n                  // size: \"full\",\r\n                }\r\n              )\r\n            }}\r\n            className=\"fa fa-plus\"\r\n          />\r\n        </div>\r\n      ),\r\n      key: \"releases\",\r\n      getContent: () => {\r\n        return (\r\n          <MyPage\r\n            configPage={{\r\n              UIType: \"prj_releases\",\r\n            }}\r\n            fnList={this._fnList}\r\n          />\r\n        )\r\n      },\r\n    })\r\n    // const tabs = [\r\n    // {\r\n    //   title: \"Tasks\",\r\n    //   key: \"tasks\",\r\n    //   getContent: () => {\r\n    //     return (\r\n    //       <MyPage configPage={{ UIType: \"prj_task\" }} fnList={this._fnList} />\r\n    //     )\r\n    //   },\r\n    // },\r\n    // {\r\n    //   title: \"Schedule\",\r\n    //   key: \"schedule\",\r\n    //   getContent: () => {\r\n    //     return (\r\n    //       <MyPage\r\n    //         configPage={{ UIType: \"prj_schedule\" }}\r\n    //         fnList={this._fnList}\r\n    //       />\r\n    //     )\r\n    //   },\r\n    // },\r\n    // {\r\n    //   title: \"Users\",\r\n    //   key: \"users\",\r\n    //   getContent: () => {\r\n    //     return (\r\n    //       <MyPage\r\n    //         configPage={{ UIType: \"prj_users\" }}\r\n    //         fnList={this._fnList}\r\n    //       />\r\n    //     )\r\n    //   },\r\n    // },\r\n    // ]\r\n    let _selectedTab = tabs[0].key\r\n    if (this._tabkey) {\r\n      for (let i = 0; i < tabs.length; i++) {\r\n        let _tab = tabs[i]\r\n        if (_tab.key == this._tabkey) {\r\n          _selectedTab = _tab.key\r\n          break\r\n        }\r\n      }\r\n    }\r\n    console.warn(\"selected:\", _selectedTab)\r\n    return (\r\n      <WrapLayout className=\"mp-prj_manager\">\r\n        <div className=\"prj-header\">\r\n          <div\r\n            className=\"a-hleft\"\r\n            onClick={() => {\r\n              MyModal.showFromComponent(\r\n                propsComponent => {\r\n                  return (\r\n                    <ModalSelectModal\r\n                      sourceData={this.state.projectsOptions}\r\n                      // valueSelected={ctc.valueCell}\r\n                      // virtualized={ctc.more[KMore.virtualized]}\r\n                      // showSelectedOnFirstRow={\r\n                      //   ctc.more[KMore.showSelectedOnFirstRow]\r\n                      // }\r\n                      onChange={itemOption => {\r\n                        console.warn(\"onChange:\", itemOption, itemOption.Value)\r\n                        window.location.href = `/pj/${itemOption.Value}`\r\n                        //hidemodal\r\n                        HUtils.runFuntion(\r\n                          propsComponent.fnList,\r\n                          \"hideModal\",\r\n                          []\r\n                        )\r\n                      }}\r\n                    />\r\n                  )\r\n                },\r\n                {\r\n                  title: \"Select\",\r\n                  // backdrop: \"static\",\r\n                  fnList: {\r\n                    updateCell: (v, opts) => {\r\n                      console.warn(\"Updatecell:\", v, opts)\r\n                    },\r\n                  },\r\n                }\r\n              )\r\n            }}\r\n          >\r\n            Project {this._projectUniqueId}\r\n          </div>\r\n          <div className=\"a-hright\">\r\n            {/* <div>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  window.location.href = \"/dailytasks\"\r\n                }}\r\n              >\r\n                My Daily Tasks\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  MyModal.showFromMyUI(\r\n                    {\r\n                      type: \"prj_dailytask\",\r\n                      fnList: {\r\n                        reloadTasks: () => {\r\n                          this.requestTasks()\r\n                        },\r\n                      },\r\n                    },\r\n                    {\r\n                      title: \"Report Task\",\r\n                      size: \"xl\",\r\n                      backdrop: \"static\",\r\n                    }\r\n                  )\r\n                }}\r\n              >\r\n                Report Daily Task\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  MyModal.showFromMyUI({\r\n                    type: \"prj_new_project\",\r\n                  })\r\n                }}\r\n              >\r\n                <i className=\"fa fa-plus\" /> Project\r\n              </button>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"prj-tabs\">\r\n          {tabs && tabs.length > 0 && (\r\n            <Tabs\r\n              tabsWrapperClass=\"body-tabs body-tabs-layout no-print\"\r\n              transform={false}\r\n              showInkBar={true}\r\n              items={tabs}\r\n              selectedTabKey={_selectedTab}\r\n              onChange={k => {\r\n                console.warn(\"onChange:\", k)\r\n                HLink.updateParamOnUrl(\"tab\", k)\r\n                HLink.clearParamOnUrl(\"api\")\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"prj-content\">\r\n          {tabs && tabs.length == 0 && <div>No Contents in Options!</div>}\r\n        </div>\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrapLayout = styled.div`\r\n  &.a-pj-list {\r\n    & .a-header {\r\n      border-bottom: 1px solid #dbdbdb;\r\n      margin-bottom: 10px;\r\n      padding-bottom: 10px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      & .a-hleft {\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n      }\r\n      & .a-hright {\r\n        display: flex;\r\n        align-items: center;\r\n        & > div {\r\n          padding-left: 5px;\r\n        }\r\n      }\r\n    }\r\n    & .a-pj-item {\r\n    }\r\n  }\r\n  &.mp-prj_manager {\r\n    margin-top: -30px;\r\n    margin-left: -30px;\r\n    margin-right: -30px;\r\n    height: calc(100% + 30px);\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  & .prj-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1.25rem;\r\n\r\n    & .a-hleft {\r\n    }\r\n    & .a-hright {\r\n      display: flex;\r\n      align-items: center;\r\n      & > div {\r\n        padding-left: 5px;\r\n      }\r\n    }\r\n  }\r\n  & .prj-tabs {\r\n    height: 100%;\r\n    background: white;\r\n    & > .RRT__container {\r\n      height: 100%;\r\n      & > .RRT__panel {\r\n        // height: 700px;\r\n        margin-top: 0px;\r\n        background: #f7f7f7;\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 54px;\r\n        bottom: 0;\r\n      }\r\n      & .prjapi-right {\r\n        & .RRT__container {\r\n          height: calc(100% - 22px);\r\n          & > .RRT__panel {\r\n            height: calc(100% - 32px);\r\n            margin: 0px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst WrapIconAdd = styled.i`\r\n  margin-left: 5px;\r\n  background: #cfefcd;\r\n  width: 20px;\r\n  height: 20px;\r\n  padding: 3px;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  color: green;\r\n  border: 1px solid green;\r\n`\r\nexport default MP_PRJManager\r\n"],"sourceRoot":""}