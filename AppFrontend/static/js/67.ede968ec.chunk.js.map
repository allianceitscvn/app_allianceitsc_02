{"version":3,"sources":["modules/adminpanel/MyButton/Types/link.tsx","helpers/Flows/Button.js","modules/adminpanel/MyButton/Types/ext.tsx"],"names":["MyButtonLink","oneButton","this","props","getMorePropsButton","onClick","_link","_configButton","Url","startsWith","HLink","openUrl","OpenMode","getTitleDisplay","MyButtonExt","KMoreOfButton","apiCheckShowModal","acceptType","apiUrlAfter","title","tooltip","FlowCheckShowModal","fnList","customQuery","cb","_configCheckShow","_moreObj","changeIsLoading","_request","method","url","path","name","ApiGeneric","request","data","getApiQuery","fnListMyPage","fnGetSharedRequestData","successCallBack","response","console","warn","_config","HUtils","get","IsShow","result","FormData","errorCallBack","error","parseResponseWhenSuccess","res","NeedReload","fnReloadPage","NeedReloadList","fnReloadList","_moreProps","checkConfirmMsg","ConfirmMsg","fnListUI","fnshowConfirm","msg","onClickOK","state","setFromComponent","React","Component"],"mappings":"+MAKMA,E,uKACJ,c,oBAEA,WACE,IAAQC,EAAcC,KAAKC,MAAnBF,UAER,OACE,cAAC,IAAD,uCACMC,KAAKE,sBACLH,EAAUG,sBAFhB,IAGEC,QAAS,WACP,IAAIC,EAAQL,EAAUM,cAAcC,IAChCF,IAEGA,EAAMG,WAAW,SAAYH,EAAMG,WAAW,OACjDH,EAAK,WAAOA,IAEdI,IAAMC,QACJL,EACqC,cAArCL,EAAUM,cAAcK,SACpB,SACA,WAdZ,SAmBGX,EAAUY,yB,GA1BQC,KAgCZd,a,sIClCFe,EAAgB,CAC3BC,kBAAmB,oBACnBC,WAAY,aACZC,YAAa,cACbC,MAAO,QACPC,QAAS,WAGEC,EAAqB,WAKtB,IAAD,yDAAP,GAJFpB,EAIS,EAJTA,UACAqB,EAGS,EAHTA,OACAC,EAES,EAFTA,YACAC,EACS,EADTA,GAEA,GAAIvB,EAAW,CACb,IAAIwB,EAAmBxB,EAAUyB,SAASX,EAAcC,mBACxD,GAAIS,EAAkB,CACpBxB,EAAU0B,iBAAgB,GAC1B,IAAIC,EAAW,CACbC,OAAQ,OACRC,IAAKL,EAAiBK,IACtBC,KAAMN,EAAiBM,KACvBC,KAAMP,EAAiBO,MAEzBC,YAAW,CACTC,QAASN,EACTO,KAAMlC,EAAUmC,YAAV,2BACDC,IAAaC,uBAAuBhB,IACpCC,IAELgB,gBAAiB,SAAAC,GACfC,QAAQC,KAAK,WAAYF,GACzB,IAAIG,EAAUC,SAAOC,IAAIL,EAAU,eAC/BG,GAAWA,EAAQG,OACjBtB,GACFA,EAAG,CACDuB,QAAQ,EACRZ,KAAMQ,EAAQK,UAAY,KAI1BxB,GACFA,EAAG,CACDuB,QAAQ,IAId9C,EAAU0B,iBAAgB,IAE5BsB,cAAe,SAACC,EAAOV,GACrBvC,EAAU0B,iBAAgB,GACtBH,GACFA,EAAG,CACDuB,QAAQ,YAMZvB,GACFA,EAAG,CACDuB,QAAQ,SAKVvB,GACFA,EAAG,CACDuB,QAAQ,M,mIC9DVjC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IAMRE,QAAU,aAPS,EAQnB8C,yBAA2B,SAACC,GAC1B,MAA8B,EAAKjD,MAA3BF,EAAR,EAAQA,UAAWqB,EAAnB,EAAmBA,OACfrB,EAAUM,cAAc8C,WAC1BhB,IAAaiB,aAAahC,GACjBrB,EAAUM,cAAcgD,gBACjClB,IAAamB,aAAalC,IAbX,EAgBnBlB,mBAAqB,WACnB,IAAQH,EAAc,EAAKE,MAAnBF,UACJwD,EAAkB,GAMtB,OALIxD,GAAaA,EAAUyB,UACrBzB,EAAUyB,SAASX,IAAcI,SACnCsC,EAAWtC,MAAQlB,EAAUyB,SAASX,IAAcI,QAGjDsC,GAxBU,EA0BnBC,gBAAkB,SAAAlC,GAChB,IAAQvB,EAAc,EAAKE,MAAnBF,UAGJA,GAAaA,EAAUM,cAAcoD,WACvCC,IAASC,cAAc,CACrB1C,MAAO,UACP2C,IAAK7D,EAAUM,cAAcoD,WAC7BI,UAAW,WACLvC,GACFA,OAKFA,GACFA,KAxCJ,EAAKwC,MAAQ,GACS,EAAK7D,MAAnBF,UACEgE,iBAAV,gBAJiB,E,qDAMnB,c,oBAwCA,WAAU,IAAD,OACChE,EAAcC,KAAKC,MAAnBF,UACR,OACE,cAAC,IAAD,2BACMA,EAAUG,sBADhB,IAEEC,QAAS,WACP,EAAKA,WAHT,SAMGJ,EAAUY,yB,GAxDOqD,IAAMC,WA8DjBrD","file":"static/js/67.ede968ec.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Button } from \"reactstrap\"\r\nimport { HLink } from \"src/core/helpers\"\r\nimport MyButtonExt from \"./ext\"\r\n\r\nclass MyButtonLink extends MyButtonExt {\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const { oneButton } = this.props\r\n    // console.warn(\"render Button link\", this.props)\r\n    return (\r\n      <Button\r\n        {...this.getMorePropsButton()}\r\n        {...oneButton.getMorePropsButton()}\r\n        onClick={() => {\r\n          let _link = oneButton._configButton.Url\r\n          if (_link) {\r\n            //xu ly tinh huong cho v1, ko co / dang truoc, se gay ra link duplicate sub dir\r\n            if (!_link.startsWith(\"http\") && !_link.startsWith(\"/\")) {\r\n              _link = `/${_link}`\r\n            }\r\n            HLink.openUrl(\r\n              _link,\r\n              oneButton._configButton.OpenMode === \"NewWindow\"\r\n                ? \"_blank\"\r\n                : \"_self\"\r\n            )\r\n          }\r\n        }}\r\n      >\r\n        {oneButton.getTitleDisplay()}\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyButtonLink\r\n","import { ApiGeneric } from \"src/services/apiServices\"\r\nimport { fnListMyPage } from \"src/helpers/fnList\"\r\nimport { HUtils } from \"@macashipo/mlib\"\r\nexport const KMoreOfButton = {\r\n  apiCheckShowModal: \"apiCheckShowModal\",\r\n  acceptType: \"acceptType\", //upload\r\n  apiUrlAfter: \"apiUrlAfter\", //upload\r\n  title: \"title\", //show title cua button\r\n  tooltip: \"tooltip\", //show tooltip cua button, chua su dung\r\n}\r\n\r\nexport const FlowCheckShowModal = ({\r\n  oneButton,\r\n  fnList,\r\n  customQuery,\r\n  cb,\r\n} = {}) => {\r\n  if (oneButton) {\r\n    let _configCheckShow = oneButton._moreObj[KMoreOfButton.apiCheckShowModal]\r\n    if (_configCheckShow) {\r\n      oneButton.changeIsLoading(true)\r\n      let _request = {\r\n        method: \"POST\",\r\n        url: _configCheckShow.url,\r\n        path: _configCheckShow.path,\r\n        name: _configCheckShow.name,\r\n      }\r\n      ApiGeneric({\r\n        request: _request,\r\n        data: oneButton.getApiQuery({\r\n          ...fnListMyPage.fnGetSharedRequestData(fnList),\r\n          ...customQuery,\r\n        }),\r\n        successCallBack: response => {\r\n          console.warn(\"response\", response)\r\n          let _config = HUtils.get(response, \"Data.Config\")\r\n          if (_config && _config.IsShow) {\r\n            if (cb) {\r\n              cb({\r\n                result: true,\r\n                data: _config.FormData || {},\r\n              })\r\n            }\r\n          } else {\r\n            if (cb) {\r\n              cb({\r\n                result: false,\r\n              })\r\n            }\r\n          }\r\n          oneButton.changeIsLoading(false)\r\n        },\r\n        errorCallBack: (error, response) => {\r\n          oneButton.changeIsLoading(false)\r\n          if (cb) {\r\n            cb({\r\n              result: false,\r\n            })\r\n          }\r\n        },\r\n      })\r\n    } else {\r\n      if (cb) {\r\n        cb({\r\n          result: true,\r\n        })\r\n      }\r\n    }\r\n  } else {\r\n    if (cb) {\r\n      cb({\r\n        result: true,\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { OneButton } from \"@macashipo/mlib\"\r\nimport React from \"react\"\r\nimport { Button } from \"reactstrap\"\r\nimport { KMoreOfButton } from \"src/helpers/Flows/Button\"\r\nimport { fnListMyPage, fnListUI } from \"src/helpers/fnList\"\r\ninterface IProps {\r\n  oneButton: OneButton\r\n  fnList?: any\r\n}\r\nclass MyButtonExt extends React.Component<IProps> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n    const { oneButton } = this.props\r\n    oneButton.setFromComponent(this)\r\n  }\r\n  componentDidMount() {}\r\n  onClick = () => {}\r\n  parseResponseWhenSuccess = (res: any) => {\r\n    const { oneButton, fnList } = this.props\r\n    if (oneButton._configButton.NeedReload) {\r\n      fnListMyPage.fnReloadPage(fnList)\r\n    } else if (oneButton._configButton.NeedReloadList) {\r\n      fnListMyPage.fnReloadList(fnList)\r\n    }\r\n  }\r\n  getMorePropsButton = () => {\r\n    const { oneButton } = this.props\r\n    let _moreProps: any = {}\r\n    if (oneButton && oneButton._moreObj) {\r\n      if (oneButton._moreObj[KMoreOfButton.title]) {\r\n        _moreProps.title = oneButton._moreObj[KMoreOfButton.title]\r\n      }\r\n    }\r\n    return _moreProps\r\n  }\r\n  checkConfirmMsg = cb => {\r\n    const { oneButton } = this.props\r\n    //test\r\n    // oneButton._configButton.ConfirmMsg = \"Hello\"\r\n    if (oneButton && oneButton._configButton.ConfirmMsg) {\r\n      fnListUI.fnshowConfirm({\r\n        title: \"Confirm\",\r\n        msg: oneButton._configButton.ConfirmMsg,\r\n        onClickOK: () => {\r\n          if (cb) {\r\n            cb()\r\n          }\r\n        },\r\n      })\r\n    } else {\r\n      if (cb) {\r\n        cb()\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { oneButton } = this.props\r\n    return (\r\n      <Button\r\n        {...oneButton.getMorePropsButton()}\r\n        onClick={() => {\r\n          this.onClick()\r\n        }}\r\n      >\r\n        {oneButton.getTitleDisplay()}\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyButtonExt\r\n"],"sourceRoot":""}