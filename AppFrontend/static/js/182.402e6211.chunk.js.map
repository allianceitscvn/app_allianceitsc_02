{"version":3,"sources":["core/modules/redirectToken/MyPage/Types/redirect_token.tsx"],"names":["titlePage","PRedirectToken","props","useState","msg","setMsg","resData","setResData","useEffect","HConfig","changeTitle","accessToken","_accessToken","HLink","getParameterByName","console","warn","HApi","apiPost","path","name","data","SocialId","SocialToken","then","response","_data","Data","HAuth","authLoginSocialWithRes","goToHome","catch","error","Token","checkShow2FAFromTokenResponse","type","resToken","dispatchLoginSuccess","res","className"],"mappings":"+KAIMA,EAAY,WAqEHC,UApEf,SAAwBC,GACtB,MAAsBC,mBAAS,eAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA8BF,mBAAqB,MAAnD,mBAAOG,EAAP,KAAgBC,EAAhB,KAuCA,OAXAC,qBAAU,WACRC,IAAQC,YAAYV,EAAWA,GAC/B,IA7ByBW,EA6BrBC,EAAeC,IAAMC,mBAlCH,eAuCtB,OAJIF,IACFG,QAAQC,KAAK,eAAgBJ,GA/BND,EAgCJC,EA/BrBK,IAAKC,QAAQ,CACXC,KAAM,UACNC,KAAM,cACNC,KAAM,CACJC,SAAU,OACVC,YAAaZ,KAGda,MAAK,SAAAC,GACJpB,EAAO,2BACP,IAAIqB,EAAQD,EAASE,KACPC,IAAMC,uBAAuBJ,EAASE,OAGlDlB,IAAQqB,WAEVvB,EAAWmB,MAEZK,OAAM,SAAAC,GACDA,GAASA,EAAM5B,IACjBC,EAAO2B,EAAM5B,KAEbC,EAAO,wBAWN,WACLI,IAAQC,YAAY,KAAM,OAE3B,IAEDJ,GACAA,EAAQ2B,OACRL,IAAMM,8BAA8B5B,EAAQ2B,OAG1C,cAAC,IAAD,CACEE,KAAK,sBACLC,SAAU9B,EAAQ2B,MAClBI,qBAAsB,SAAAC,GACpBvB,QAAQC,KAAK,wBAAyBsB,GACxBV,IAAMC,uBAAN,2BAAkCvB,GAAlC,IAA2C2B,MAAOK,MAG9D7B,IAAQqB,cAOhB,qBAAKS,UAAU,kGAAf,SACGnC","file":"static/js/182.402e6211.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { HConfig, HLink, HApi, HAuth } from \"src/core/helpers\"\r\nimport { MyUI } from \"src/core/components\"\r\nconst kParamAccessToken = \"accessToken\"\r\nconst titlePage = \"Redirect\"\r\nfunction PRedirectToken(props) {\r\n  const [msg, setMsg] = useState(\"Redirect...\")\r\n  const [resData, setResData] = useState<any | null>(null)\r\n  const requestSocialLogin = accessToken => {\r\n    HApi.apiPost({\r\n      path: \"Account\",\r\n      name: \"SocialLogin\",\r\n      data: {\r\n        SocialId: \"MEZY\",\r\n        SocialToken: accessToken,\r\n      },\r\n    })\r\n      .then(response => {\r\n        setMsg(\"Success, redirecting...\")\r\n        let _data = response.Data\r\n        let _result = HAuth.authLoginSocialWithRes(response.Data)\r\n        if (_result) {\r\n          // HConfig.fnList.\r\n          HConfig.goToHome()\r\n        }\r\n        setResData(_data)\r\n      })\r\n      .catch(error => {\r\n        if (error && error.msg) {\r\n          setMsg(error.msg)\r\n        } else {\r\n          setMsg(\"Redirect failed!\")\r\n        }\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    HConfig.changeTitle(titlePage, titlePage)\r\n    let _accessToken = HLink.getParameterByName(kParamAccessToken)\r\n    if (_accessToken) {\r\n      console.warn(\"_accessToken\", _accessToken)\r\n      requestSocialLogin(_accessToken)\r\n    }\r\n    return () => {\r\n      HConfig.changeTitle(null, \"\")\r\n    }\r\n  }, [])\r\n  if (\r\n    resData &&\r\n    resData.Token &&\r\n    HAuth.checkShow2FAFromTokenResponse(resData.Token)\r\n  ) {\r\n    return (\r\n      <MyUI\r\n        type=\"setting2fa_check2fa\"\r\n        resToken={resData.Token}\r\n        dispatchLoginSuccess={res => {\r\n          console.warn(\"dispatchLoginSuccess:\", res)\r\n          let _result = HAuth.authLoginSocialWithRes({ ...resData, Token: res })\r\n          if (_result) {\r\n            // HConfig.fnList.\r\n            HConfig.goToHome()\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center position-absolute top-0 bottom-0 start-0 end-0\">\r\n      {msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PRedirectToken\r\n"],"sourceRoot":""}