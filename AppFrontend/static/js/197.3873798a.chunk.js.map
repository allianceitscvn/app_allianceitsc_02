{"version":3,"sources":["modules/adminpanel/MyLib/Types/draft_wysiwyg.js"],"names":["ModeToolbar","mini","toolbar","options","inline","inDropdown","textAlign","EditorConvertToHTML","state","editorState","EditorState","createEmpty","sourceHTML","onEditorStateChange","props","onChange","setState","this","onBlur","moreProps","modeToolbar","_props","WrapLayout","wrapperClassName","editorClassName","console","warn","_html","draftToHtml","convertToRaw","getCurrentContent","html","nextProps","prevState","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","createWithContent","Component","styled","div"],"mappings":"4QA0BMA,EAAc,CAClBC,KAnBkB,CAClBC,QAAS,CACPC,QAAS,CACP,SACA,WACA,cACA,YACA,QACA,QAEFC,OAAQ,CACNC,YAAY,EACZF,QAAS,CAAC,OAAQ,SAAU,YAAa,kBAE3CG,UAAW,CAAED,YAAY,MAOvBE,E,4MACJC,MAAQ,CACNC,YAAaC,cAAYC,cACzBC,WAAY,I,EAiBdC,oBAAsB,SAAAJ,GACC,EAAKK,MAAlBC,SACR,EAAKC,SACH,CACEP,gBAEF,gB,4CAGJ,WACE,MAAqDQ,KAAKH,MAAxCI,GAAlB,EAAQH,SAAR,EAAkBG,QAAQC,EAA1B,EAA0BA,UAAWC,EAArC,EAAqCA,YAC7BX,EAAgBQ,KAAKT,MAArBC,YAEJY,EAAS,GAIb,OAHID,GAAepB,EAAYoB,KAC7BC,EAAM,eAAQrB,EAAYoB,KAG1B,cAACE,EAAD,UACE,cAAC,SAAD,yBACEb,YAAaA,EACbc,iBAAiB,eACjBC,gBAAgB,cAChBX,oBAAqBI,KAAKJ,oBAC1BK,OAAQ,WAEN,GADAO,QAAQC,KAAK,UACTR,EAAQ,CACV,IAAIS,EAAQC,IACVC,uBAAapB,EAAYqB,sBAE3BL,QAAQC,KAAK,UAAWC,GACxBT,EAAO,CACLa,KAAMJ,OAIRN,GACAF,S,uCApDZ,SAAgCa,EAAWC,GACzC,GAAID,EAAUD,OAASE,EAAUrB,WAAY,CAC3Ca,QAAQC,KAAK,cAAeM,EAAWC,GACvC,IAAMC,EAAiBC,IAAYH,EAAUD,MACrCK,EAA6BF,EAA7BE,cAAeC,EAAcH,EAAdG,UACjBC,EAAeC,eAAaC,qBAChCJ,EACAC,GAEF,MAAO,CACLzB,WAAYoB,EAAUD,KACtBtB,YAAaC,cAAY+B,kBAAkBH,S,GAhBjBI,aAgE5BpB,EAAaqB,IAAOC,IAAV,8IAUDrC","file":"static/js/197.3873798a.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\"\r\nimport { Editor } from \"react-draft-wysiwyg\"\r\nimport draftToHtml from \"draftjs-to-html\"\r\nimport htmlToDraft from \"html-to-draftjs\"\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\r\nimport styled from \"styled-components\"\r\n\r\nconst ToolbarMini = {\r\n  toolbar: {\r\n    options: [\r\n      \"inline\",\r\n      \"fontSize\",\r\n      \"colorPicker\",\r\n      \"textAlign\",\r\n      \"emoji\",\r\n      \"link\",\r\n    ],\r\n    inline: {\r\n      inDropdown: false,\r\n      options: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\r\n    },\r\n    textAlign: { inDropdown: true },\r\n  },\r\n}\r\n\r\nconst ModeToolbar = {\r\n  mini: ToolbarMini,\r\n}\r\nclass EditorConvertToHTML extends Component {\r\n  state = {\r\n    editorState: EditorState.createEmpty(),\r\n    sourceHTML: \"\",\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.html !== prevState.sourceHTML) {\r\n      console.warn(\"html change\", nextProps, prevState)\r\n      const blocksFromHtml = htmlToDraft(nextProps.html)\r\n      const { contentBlocks, entityMap } = blocksFromHtml\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlocks,\r\n        entityMap\r\n      )\r\n      return {\r\n        sourceHTML: nextProps.html,\r\n        editorState: EditorState.createWithContent(contentState),\r\n      }\r\n    }\r\n  }\r\n  onEditorStateChange = editorState => {\r\n    const { onChange } = this.props\r\n    this.setState(\r\n      {\r\n        editorState,\r\n      },\r\n      () => {}\r\n    )\r\n  }\r\n  render() {\r\n    const { onChange, onBlur, moreProps, modeToolbar } = this.props\r\n    const { editorState } = this.state\r\n    // console.warn(\"moreProps:\", moreProps)\r\n    let _props = {}\r\n    if (modeToolbar && ModeToolbar[modeToolbar]) {\r\n      _props = { ...ModeToolbar[modeToolbar] }\r\n    }\r\n    return (\r\n      <WrapLayout>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          onBlur={() => {\r\n            console.warn(\"onBlur\")\r\n            if (onBlur) {\r\n              let _html = draftToHtml(\r\n                convertToRaw(editorState.getCurrentContent())\r\n              )\r\n              console.warn(\"onBlur:\", _html)\r\n              onBlur({\r\n                html: _html,\r\n              })\r\n            }\r\n          }}\r\n          {..._props}\r\n          {...moreProps}\r\n        />\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrapLayout = styled.div`\r\n  & .rdw-editor-toolbar {\r\n    & > div {\r\n      & > div {\r\n        box-sizing: content-box;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default EditorConvertToHTML\r\n"],"sourceRoot":""}