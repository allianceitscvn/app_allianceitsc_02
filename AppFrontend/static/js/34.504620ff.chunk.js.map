{"version":3,"sources":["modules/qlproject/MyUI/prj_dailytask.js","modules/qlproject/MyUI/prj_task_filters.js","components/Pagination/index.js","../node_modules/reactstrap/es/Spinner.js"],"names":["MUINewDailyTask","props","requestOptions","setState","loading","ApiGeneric","request","method","path","name","data","successCallBack","response","Data","options","requestTasks","requestTasksToday","errorCallBack","err","console","log","loadingTasks","state","filters","pagination","tasks","total","Total","loadingTasksToday","IsStartedOnToday","_dailyTaskIds","dailytaskId","k","Id","push","tasksToday","showReportStart","length","showReportEnd","requestAddNewTask","_hasChangedData","_newTasks","newTasks","checkValidBeforeSendReport","task","isReportEnd","_valid","ProjectId","TaskName","PercentCompleted","requestSubmitDailyTask","fnList","_tasks","_canSubmit","_t","getTaskById","UserTaskId","UserTaskName","Percent","MyModal","showConfirm","title","msg","onClickOK","cModal","fnListModal","showLoadingModal","_fnList","Tasks","hideLoadingModal","hideModal","HUtils","runFuntion","HUI","showToastWarning","requestSubmitDailyTaskEnd","addToDailyTask","indexOf","_tasksById","removeDailiTask","index","splice","taskId","i","Page","PageSize","this","_modal","onClose","WrapLayout","className","mini","reloadTasks","getOptions","map","v","type","mode","onClick","page","pageSize","onChangePage","p","style","padding","size","_task","getCanEdit","afterUpdateData","newData","Component","styled","div","TypeFilter","MPPRJTasksFilters","_getTypeFilter","_filters","Object","keys","TaskStatusCode","TaskStatusNotDone","_clickFilter","status","value","_showFilterProject","_options","ProjectList","classNames","overlay","propsOverlay","sourceData","valueSelected","onChange","itemOption","warn","Value","ProjectId_Text","Text","hide","overlayClassName","placement","destroyTooltipOnHide","CPagination","countPage","parseInt","disabled","href","ev","preventDefault","Array","fill","active","_excluded","propTypes","tag","tagPropType","PropTypes","string","color","cssModule","object","children","Spinner","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","React","createElement","_extends","role","defaultProps"],"mappings":"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","file":"static/js/34.504620ff.chunk.js","sourcesContent":["import { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport { HUtils, MyUI } from \"@macashipo/mlib\"\r\nimport { MyModal } from \"src/core/components\"\r\nimport { HUI } from \"src/core/helpers\"\r\nimport { Spinner } from \"reactstrap\"\r\nimport { fnListModal } from \"src/helpers/fnList\"\r\nimport classNames from \"classnames\"\r\nimport CPagination from \"src/components/Pagination\"\r\nimport MPPRJTasksFilters from \"./prj_task_filters\"\r\nconst TypeFilter = {\r\n  all: \"all\",\r\n  todo: \"todo\",\r\n  doing: \"doing\",\r\n  done: \"done\",\r\n}\r\nclass MUINewDailyTask extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      tasks: null,\r\n      tasksToday: null,\r\n      dailytaskId: [],\r\n      newTasks: [],\r\n      options: null,\r\n      loading: true,\r\n      loadingTasks: true,\r\n      loadingTasksToday: true,\r\n      showReportStart: false,\r\n      showReportEnd: false,\r\n      filters: {},\r\n      pagination: {\r\n        Page: 1,\r\n        PageSize: 20,\r\n      },\r\n      total: 0,\r\n    }\r\n    this._hasChangedData = false\r\n    this._tasksById = {}\r\n  }\r\n  componentDidMount() {\r\n    this.requestOptions()\r\n    this._modal = HUtils.runFuntion(this.props.fnList, \"getModal\", [])\r\n    if (this._modal) {\r\n      console.log(\"modal\", this._modal)\r\n      this._modal.onClose = () => {\r\n        console.log(\"on Close\")\r\n        if (this._hasChangedData) {\r\n          HUtils.runFuntion(this.props.fnList, \"reloadTasks\", [])\r\n        }\r\n      }\r\n    }\r\n  }\r\n  requestOptions = () => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"/api/v1/UserTask_Mine\",\r\n            name: \"Options\",\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            if (response.Data) {\r\n              this.setState(\r\n                {\r\n                  options: response.Data,\r\n                  loading: false,\r\n                },\r\n                () => {\r\n                  this.requestTasks()\r\n                  this.requestTasksToday()\r\n                }\r\n              )\r\n            }\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({\r\n              loading: false,\r\n            })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  requestTasks = () => {\r\n    this.setState(\r\n      {\r\n        loadingTasks: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"/api/v1/UserTask_Mine\",\r\n            name: \"List\",\r\n          },\r\n          data: {\r\n            ...this.state.filters,\r\n            ...this.state.pagination,\r\n          },\r\n          successCallBack: response => {\r\n            this.setState({\r\n              tasks: response.Data?.Data || [],\r\n              total: response.Data?.Total,\r\n              loadingTasks: false,\r\n            })\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({\r\n              loadingTasks: false,\r\n            })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  requestTasksToday = () => {\r\n    this.setState(\r\n      {\r\n        loadingTasksToday: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"/api/v1/UserTask_Mine\",\r\n            name: \"GetTasks\",\r\n          },\r\n          data: {\r\n            IsStartedOnToday: true,\r\n          },\r\n          successCallBack: response => {\r\n            let _dailyTaskIds = this.state.dailytaskId || []\r\n            if (response.Data) {\r\n              for (let k of response.Data) {\r\n                if (k && k.Id) {\r\n                  _dailyTaskIds.push(k.Id)\r\n                }\r\n              }\r\n            }\r\n            this.setState({\r\n              tasksToday: response.Data,\r\n              loadingTasksToday: false,\r\n              dailytaskId: _dailyTaskIds,\r\n              showReportStart: _dailyTaskIds.length == 0,\r\n              showReportEnd: _dailyTaskIds.length > 0,\r\n            })\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({\r\n              loadingTasksToday: false,\r\n            })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  requestAddNewTask = () => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"/api/v1/UserTask\",\r\n            name: \"Add\",\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            this._hasChangedData = true\r\n            if (response.Data) {\r\n              let _newTasks = this.state.newTasks || []\r\n              let _dailyTaskIds = this.state.dailytaskId || []\r\n              _newTasks.push(response.Data)\r\n              _dailyTaskIds.push(response.Data.Id)\r\n              this.setState({\r\n                newTasks: _newTasks,\r\n                dailytaskId: _dailyTaskIds,\r\n                loading: false,\r\n              })\r\n            } else {\r\n              this.setState({\r\n                loading: false,\r\n              })\r\n            }\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({\r\n              loading: false,\r\n            })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  checkValidBeforeSendReport = (task, isReportEnd) => {\r\n    let _valid = true\r\n    if (task) {\r\n      if (task.ProjectId == null || task.ProjectId.length == \"\") {\r\n        _valid = false\r\n      }\r\n      if (task.TaskName == null || task.TaskName.length == \"\") {\r\n        _valid = false\r\n      }\r\n      if (isReportEnd === true) {\r\n        if (\r\n          task.PercentCompleted == null ||\r\n          task.PercentCompleted == \"\" ||\r\n          task.PercentCompleted == 0\r\n        ) {\r\n          _valid = false\r\n        }\r\n      }\r\n    }\r\n    return _valid\r\n  }\r\n  requestSubmitDailyTask = () => {\r\n    const fnList = this.props.fnList || {}\r\n    let _tasks = []\r\n    let _dailyTaskIds = this.state.dailytaskId || []\r\n    let _canSubmit = true\r\n    for (let k of _dailyTaskIds) {\r\n      let _t = this.getTaskById(k)\r\n      if (_t && _t.Id) {\r\n        _tasks.push({\r\n          UserTaskId: k,\r\n          UserTaskName: _t.TaskName,\r\n          ProjectId: _t.ProjectId,\r\n          Percent: _t.PercentCompleted,\r\n        })\r\n        _canSubmit = this.checkValidBeforeSendReport(_t)\r\n      }\r\n    }\r\n    if (_canSubmit == false) {\r\n      HUI.showToastWarning(\"Each task need Project, Name before send report\")\r\n      return\r\n    }\r\n    if (_tasks.length > 0) {\r\n      MyModal.showConfirm({\r\n        title: \"Send task report\",\r\n        msg: \"Are you sure you want to send task report at the beginning of the day?\",\r\n        onClickOK: cModal => {\r\n          fnListModal.showLoadingModal(cModal._fnList, [])\r\n          ApiGeneric({\r\n            request: {\r\n              method: \"POST\",\r\n              path: \"/api/v1/UserTaskDailyReport\",\r\n              name: \"SubmitStart\",\r\n            },\r\n            data: {\r\n              Tasks: _tasks,\r\n            },\r\n            successCallBack: response => {\r\n              fnListModal.hideLoadingModal(cModal._fnList, [])\r\n              fnListModal.hideModal(cModal._fnList, [])\r\n              HUtils.runFuntion(fnList, \"hideModal\", [])\r\n            },\r\n            errorCallBack: err => {\r\n              console.log(err)\r\n              fnListModal.hideLoadingModal(cModal._fnList, [])\r\n            },\r\n          })\r\n        },\r\n      })\r\n    } else {\r\n      HUI.showToastWarning(\"Please select your tasks before send report.\")\r\n    }\r\n  }\r\n  requestSubmitDailyTaskEnd = () => {\r\n    const fnList = this.props.fnList || {}\r\n    let _tasks = []\r\n    let _dailyTaskIds = this.state.dailytaskId || []\r\n    let _canSubmit = true\r\n    for (let k of _dailyTaskIds) {\r\n      let _t = this.getTaskById(k)\r\n      _tasks.push({\r\n        UserTaskId: k,\r\n        UserTaskName: _t.TaskName,\r\n        ProjectId: _t.ProjectId,\r\n        Percent: _t.PercentCompleted,\r\n      })\r\n      _canSubmit = this.checkValidBeforeSendReport(_t, true)\r\n    }\r\n    if (_canSubmit == false) {\r\n      HUI.showToastWarning(\r\n        \"Each task need Project, Name, Percent before send report\"\r\n      )\r\n      return\r\n    }\r\n    if (_tasks.length > 0) {\r\n      MyModal.showConfirm({\r\n        title: \"Send task report\",\r\n        msg: \"Are you sure you want to send task report at the end of the day?\",\r\n        onClickOK: cModal => {\r\n          fnListModal.showLoadingModal(cModal._fnList, [])\r\n          ApiGeneric({\r\n            request: {\r\n              method: \"POST\",\r\n              path: \"/api/v1/UserTaskDailyReport\",\r\n              name: \"SubmitEnd\",\r\n            },\r\n            data: {\r\n              Tasks: _tasks,\r\n            },\r\n            successCallBack: response => {\r\n              fnListModal.hideLoadingModal(cModal._fnList, [])\r\n              fnListModal.hideModal(cModal._fnList, [])\r\n              HUtils.runFuntion(fnList, \"hideModal\", [])\r\n            },\r\n            errorCallBack: err => {\r\n              console.log(err)\r\n              fnListModal.hideLoadingModal(cModal._fnList, [])\r\n            },\r\n          })\r\n        },\r\n      })\r\n    } else {\r\n      HUI.showToastWarning(\"Please select your tasks before send report.\")\r\n    }\r\n  }\r\n  addToDailyTask = task => {\r\n    let _dailyTaskIds = this.state.dailytaskId || []\r\n    if (_dailyTaskIds.indexOf(task.Id) == -1) {\r\n      _dailyTaskIds.push(task.Id)\r\n      this._tasksById[task.Id] = task\r\n    }\r\n    this.setState({\r\n      dailytaskId: _dailyTaskIds,\r\n    })\r\n  }\r\n  removeDailiTask = task => {\r\n    let _dailyTaskIds = this.state.dailytaskId || []\r\n    const index = _dailyTaskIds.indexOf(task.Id)\r\n    if (index > -1) {\r\n      // only splice array when item is found\r\n      _dailyTaskIds.splice(index, 1) // 2nd parameter means remove one item only\r\n    }\r\n    this.setState({\r\n      dailytaskId: _dailyTaskIds,\r\n    })\r\n  }\r\n  getTaskById = taskId => {\r\n    const tasks = this.state.tasks || []\r\n    const newTasks = this.state.newTasks || []\r\n    const tasksToday = this.state.tasksToday || []\r\n    if (tasks) {\r\n      for (let i = 0; i < tasks.length; i++) {\r\n        if (tasks[i].Id == taskId) {\r\n          return tasks[i]\r\n        }\r\n      }\r\n    }\r\n    if (newTasks) {\r\n      for (let i = 0; i < newTasks.length; i++) {\r\n        if (newTasks[i].Id == taskId) {\r\n          return newTasks[i]\r\n        }\r\n      }\r\n    }\r\n    if (tasksToday) {\r\n      for (let i = 0; i < tasksToday.length; i++) {\r\n        if (tasksToday[i].Id == taskId) {\r\n          return tasksToday[i]\r\n        }\r\n      }\r\n    }\r\n    if (this._tasksById && this._tasksById[taskId]) {\r\n      return this._tasksById[taskId]\r\n    }\r\n  }\r\n  render() {\r\n    const tasks = this.state.tasks\r\n    const dailytaskId = this.state.dailytaskId || []\r\n    return (\r\n      <WrapLayout>\r\n        <div className=\"a-left\">\r\n          <div className=\"a-header\">\r\n            <div className=\"a-left-info\">\r\n              <div className=\"a-left-title\">All tasks</div>\r\n              <div className=\"a-left-filters\">\r\n                <MPPRJTasksFilters\r\n                  mini={true}\r\n                  fnList={{\r\n                    reloadTasks: ({ filters } = {}) => {\r\n                      //eslint-disable-next-line\r\n                      this.state.filters = filters || {}\r\n                      //eslint-disable-next-line\r\n                      this.state.pagination.Page = 1\r\n                      this.requestTasks()\r\n                    },\r\n                    getOptions: () => {\r\n                      return this.state.options\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"a-right-btns\">\r\n              {/* <button className=\"btn btn-primary\">\r\n                <i className=\"fa fa-filter\" />\r\n              </button> */}\r\n              {/* <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  this.requestTasks()\r\n                }}\r\n              >\r\n                <i className=\"fa fa-refresh\" />\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n          {tasks == null ? (\r\n            <div>\r\n              {this.state.loadingTasks == true && (\r\n                <div className=\"a-loading-tasks\">\r\n                  <Spinner />\r\n                  <div>Get tasks...</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"a-list\">\r\n              {tasks.length > 0 ? (\r\n                <div>\r\n                  {tasks.map((v, i) => {\r\n                    if (dailytaskId.indexOf(v.Id) > -1) {\r\n                      return <div key={v.Id || i}></div>\r\n                    }\r\n                    return (\r\n                      <div key={v.Id || i} className=\"a-task-item\">\r\n                        <MyUI type=\"prj_task_item\" data={v} mode=\"list\" />\r\n                        {dailytaskId.indexOf(v.Id) == -1 && (\r\n                          <div\r\n                            className=\"a-to-right\"\r\n                            onClick={() => {\r\n                              this.addToDailyTask(v)\r\n                            }}\r\n                          >\r\n                            <i className=\"fa fa-chevron-right\" />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                  <div className=\"a-pagination\">\r\n                    <CPagination\r\n                      page={this.state.pagination.Page}\r\n                      total={this.state.total}\r\n                      pageSize={this.state.pagination.PageSize}\r\n                      onChangePage={p => {\r\n                        this.setState(\r\n                          {\r\n                            pagination: {\r\n                              Page: p,\r\n                              PageSize: this.state.pagination.PageSize,\r\n                            },\r\n                          },\r\n                          () => {\r\n                            this.requestTasks()\r\n                          }\r\n                        )\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div style={{ padding: \"5px\" }}>No Task! Create new one.</div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"a-right\">\r\n          <div className=\"a-header\">\r\n            <div className=\"a-title\">Your daily tasks</div>\r\n            <div className=\"a-right-actions\">\r\n              {this.state.showReportStart !== null && (\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                    this.requestSubmitDailyTask()\r\n                  }}\r\n                >\r\n                  Send Task Report (Đầu ngày)\r\n                </button>\r\n              )}\r\n              {this.state.showReportEnd !== null && (\r\n                <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={() => {\r\n                    this.requestSubmitDailyTaskEnd()\r\n                  }}\r\n                >\r\n                  Send Task Report (Cuối ngày)\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"a-main\">\r\n            {this.state.loadingTasksToday == true ? (\r\n              <div className=\"a-loading-tasks\">\r\n                <Spinner size=\"12\" />\r\n                <div>Get tasks today...</div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"a-exist-tasks\">\r\n                  {dailytaskId.map((v, i) => {\r\n                    let _task = this.getTaskById(v)\r\n                    if (_task) {\r\n                      return (\r\n                        <div key={_task.Id} className=\"a-wrap-task\">\r\n                          <MyUI\r\n                            type=\"prj_task_item\"\r\n                            data={_task}\r\n                            fnList={{\r\n                              getCanEdit: () => {\r\n                                return true\r\n                              },\r\n                              getOptions: () => {\r\n                                return this.state.options\r\n                              },\r\n                              afterUpdateData: newData => {\r\n                                this._hasChangedData = true\r\n                              },\r\n                            }}\r\n                          />\r\n                          <div\r\n                            className=\"a-remove\"\r\n                            onClick={() => {\r\n                              this.removeDailiTask(_task)\r\n                            }}\r\n                          >\r\n                            <i className=\"fa fa-trash\" />\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    }\r\n                    return <div></div>\r\n                  })}\r\n                  {dailytaskId == null ||\r\n                    (dailytaskId.length == 0 && (\r\n                      <div className=\"a-empty\">\r\n                        Select or add new your task!\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div>\r\n                  <div></div>\r\n                  <div className=\"a-wrap-addnewtask\">\r\n                    <div\r\n                      onClick={() => {\r\n                        this.requestAddNewTask()\r\n                      }}\r\n                      className=\"a-add-new-task\"\r\n                    >\r\n                      <div>\r\n                        <i className=\"fa fa-plus\" />\r\n                      </div>\r\n                      <div>Add new task</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"a-footer\"></div>\r\n        </div>\r\n        {this.state.loading === true && (\r\n          <div className=\"a-loading\">\r\n            <Spinner />\r\n            Loading...\r\n          </div>\r\n        )}\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrapLayout = styled.div`\r\n  display: flex;\r\n  & > .a-loading {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 10px;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background: #ffffffa6;\r\n  }\r\n  & > .a-left {\r\n    width: 300px;\r\n    border: 1px solid #ededed;\r\n    height: calc(100vh - 160px);\r\n    border-top-left-radius: 10px;\r\n    & .a-loading-tasks {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 10px;\r\n    }\r\n    & > .a-header {\r\n      height: 60px;\r\n      background: #ededed;\r\n      border-bottom: 1px solid #dfdfdf;\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 5px;\r\n      font-size: 20px;\r\n      border-top-left-radius: 10px;\r\n      & > .a-left-info {\r\n        & > .a-left-filters {\r\n        }\r\n      }\r\n      & > .a-right-btns {\r\n        margin-left: auto;\r\n      }\r\n    }\r\n    & .a-list {\r\n      overflow: auto;\r\n      height: calc(100% - 60px);\r\n      & .a-pagination {\r\n        margin-top: 1rem;\r\n        & .page-item.active .page-link {\r\n          background-color: #0082ff;\r\n        }\r\n        & .page-item .page-link {\r\n          border-radius: 0px;\r\n        }\r\n        & .page-item {\r\n          & a {\r\n            border-radius: 0px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    & .a-task-item {\r\n      padding: 4px;\r\n      padding-bottom: 0px;\r\n      display: flex;\r\n      & > div:first-child {\r\n        flex: 1;\r\n      }\r\n      & > .a-to-right {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 20px;\r\n        padding: 5px;\r\n        cursor: pointer;\r\n        height: 40px;\r\n        align-self: center;\r\n        &:hover {\r\n          background: #efefef;\r\n          border-top-right-radius: 10px;\r\n          border-bottom-right-radius: 10px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  & > .a-right {\r\n    flex: 1;\r\n    border: 1px solid #ededed;\r\n    padding: 10px;\r\n    height: calc(100vh - 160px);\r\n    overflow: auto;\r\n    & .a-loading-tasks {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 10px;\r\n    }\r\n    & .a-header {\r\n      display: flex;\r\n      margin-bottom: 10px;\r\n      & .a-title {\r\n        font-size: 20px;\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n      & .a-right-actions {\r\n        margin-left: auto;\r\n        & > button {\r\n          margin-left: 5px;\r\n        }\r\n      }\r\n    }\r\n\r\n    & .a-exist-tasks {\r\n      padding: 10px;\r\n      border: 1px dashed #c5c5c5;\r\n      margin-bottom: 10px;\r\n      overflow: hidden;\r\n      & .a-empty {\r\n        color: #c5c5c5;\r\n        text-align: center;\r\n        padding: 1rem 0px;\r\n      }\r\n      & .a-wrap-task {\r\n        display: flex;\r\n        margin-bottom: 5px;\r\n        & > div:first-child {\r\n          flex: 1;\r\n        }\r\n        & > .a-remove {\r\n          width: 40px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          cursor: pointer;\r\n          height: 40px;\r\n          align-self: center;\r\n          &:hover {\r\n            background: #ffc9c9;\r\n            color: red;\r\n            border-top-right-radius: 10px;\r\n            border-bottom-right-radius: 10px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    & .a-wrap-addnewtask {\r\n      display: flex;\r\n      justify-content: center;\r\n      & .a-add-new-task {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        cursor: pointer;\r\n        padding: 10px;\r\n        & i {\r\n          font-size: 20px;\r\n        }\r\n        &:hover {\r\n          background: #efefef;\r\n          border-radius: 10px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default MUINewDailyTask\r\n","import { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport Tabs from \"react-responsive-tabs\"\r\nimport { HUtils, MyPage } from \"@macashipo/mlib\"\r\nimport { MyModal, MyUI, Popover } from \"src/core/components\"\r\nimport classNames from \"classnames\"\r\nconst TypeFilter = {\r\n  all: \"all\",\r\n  todo: \"todo\",\r\n  doing: \"doing\",\r\n  done: \"done\",\r\n  notdone: \"notdone\",\r\n}\r\nclass MPPRJTasksFilters extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      filters: {},\r\n    }\r\n  }\r\n  componentDidMount() {}\r\n  requestTasks = () => {\r\n    const fnList = this.props.fnList || {}\r\n    HUtils.runFuntion(fnList, \"reloadTasks\", [{ filters: this.state.filters }])\r\n  }\r\n  _getTypeFilter = () => {\r\n    let _filters = this.state.filters || {}\r\n    if (Object.keys(_filters).length == 0) {\r\n      return TypeFilter.all\r\n    } else if (_filters.TaskStatusCode) {\r\n      if (_filters.TaskStatusCode == \"ToDo\") {\r\n        return TypeFilter.todo\r\n      } else if (_filters.TaskStatusCode == \"Done\") {\r\n        return TypeFilter.done\r\n      } else if (_filters.TaskStatusCode == \"Doing\") {\r\n        return TypeFilter.doing\r\n      }\r\n    } else if (_filters.TaskStatusNotDone) {\r\n      return TypeFilter.notdone\r\n    }\r\n    return \"\"\r\n  }\r\n  _clickFilter = type => {\r\n    let _filters = this.state.filters || {}\r\n    if (type == TypeFilter.all) {\r\n      _filters = {}\r\n    } else if (type == TypeFilter.todo) {\r\n      _filters.TaskStatusCode = \"ToDo\"\r\n      delete _filters.TaskStatusNotDone\r\n    } else if (type == TypeFilter.done) {\r\n      _filters.TaskStatusCode = \"Done\"\r\n      delete _filters.TaskStatusNotDone\r\n    } else if (type == TypeFilter.doing) {\r\n      _filters.TaskStatusCode = \"Doing\"\r\n      delete _filters.TaskStatusNotDone\r\n    } else if (type == TypeFilter.notdone) {\r\n      delete _filters.TaskStatusCode\r\n      _filters.TaskStatusNotDone = true\r\n    }\r\n    this.setState(\r\n      {\r\n        filters: _filters,\r\n      },\r\n      () => {\r\n        this.requestTasks()\r\n      }\r\n    )\r\n  }\r\n  render() {\r\n    var status = [\r\n      { value: TypeFilter.all, name: \"All\" },\r\n      { value: TypeFilter.todo, name: \"ToDo\" },\r\n      { value: TypeFilter.doing, name: \"Doing\" },\r\n      { value: TypeFilter.done, name: \"Done\" },\r\n      { value: TypeFilter.notdone, name: \"Not Done\" },\r\n    ]\r\n    if (this.props.mini === true) {\r\n      status = [\r\n        { value: TypeFilter.all, name: \"All\" },\r\n        { value: TypeFilter.notdone, name: \"Not Done\" },\r\n      ]\r\n    }\r\n    let _showFilterProject = false\r\n    let _options = HUtils.runFuntion(this.props.fnList, \"getOptions\", [])\r\n    if (_options && _options.ProjectList && _options.ProjectList.length > 0) {\r\n      _showFilterProject = true\r\n    }\r\n    console.log(\"_showFilterProject project:\", _options)\r\n    return (\r\n      <WrapLayout>\r\n        {status.map((v, i) => {\r\n          return (\r\n            <div\r\n              key={i}\r\n              className={classNames({\r\n                \"a-active\": this._getTypeFilter() == v.value,\r\n              })}\r\n              onClick={() => {\r\n                this._clickFilter(v.value)\r\n              }}\r\n            >\r\n              {v.name}\r\n            </div>\r\n          )\r\n        })}\r\n        {_showFilterProject === true && (\r\n          <Popover\r\n            overlay={propsOverlay => {\r\n              return (\r\n                <MyUI\r\n                  type=\"select_box_search_v2\"\r\n                  sourceData={_options?.ProjectList}\r\n                  valueSelected={this.state.filters?.ProjectId}\r\n                  onChange={itemOption => {\r\n                    console.warn(\"onChange:\", itemOption, itemOption.Value)\r\n                    let _filters = this.state.filters || {}\r\n                    _filters.ProjectId = itemOption.Value\r\n                    _filters.ProjectId_Text = itemOption.Text\r\n                    this.setState(\r\n                      {\r\n                        filters: _filters,\r\n                      },\r\n                      () => {\r\n                        propsOverlay.hide && propsOverlay.hide()\r\n                        this.requestTasks()\r\n                      }\r\n                    )\r\n                  }}\r\n                />\r\n              )\r\n            }}\r\n            overlayClassName=\"m-popover\"\r\n            placement=\"bottom\"\r\n            destroyTooltipOnHide={true}\r\n          >\r\n            <div\r\n              className={classNames(\"a-pick-project\", {\r\n                \"a-active\": this.state.filters.ProjectId != null,\r\n              })}\r\n            >\r\n              {this.state.filters && this.state.filters.ProjectId\r\n                ? `${this.state.filters.ProjectId_Text}`\r\n                : \"Chọn Project\"}\r\n            </div>\r\n          </Popover>\r\n        )}\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\nconst WrapLayout = styled.div`\r\n  display: flex;\r\n  & > div {\r\n    background: white;\r\n    padding: 0 8px;\r\n    font-size: 12px;\r\n    border: 1px solid #9f9f9f;\r\n    border-radius: 10px;\r\n    height: 20px;\r\n    margin-right: 2px;\r\n    cursor: pointer;\r\n    color: #9f9f9f;\r\n    &.a-active {\r\n      background: #2fa4e7;\r\n      color: white;\r\n      border: 1px solid #0673b1;\r\n    }\r\n  }\r\n`\r\nexport default MPPRJTasksFilters\r\n","/* eslint-disable */\r\nimport { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { HUtils, MyPage } from \"@macashipo/mlib\"\r\nimport classNames from \"classnames\"\r\nclass CPagination extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  componentDidMount() {}\r\n  onChangePage = page => {\r\n    const { onChangePage } = this.props\r\n    if (onChangePage) {\r\n      onChangePage(page)\r\n    }\r\n  }\r\n  render() {\r\n    const { page, total, pageSize } = this.props\r\n    if (total == 0 || pageSize <= 0) {\r\n      return <div></div>\r\n    }\r\n    var countPage = parseInt(total / pageSize)\r\n    if (total % pageSize > 0) {\r\n      countPage += 1\r\n    }\r\n    if (countPage < 2) {\r\n      return <div></div>\r\n    }\r\n    return (\r\n      <WrapLayout>\r\n        <nav>\r\n          <ul className=\"pagination justify-content-center\">\r\n            <li className={classNames(\"page-item\", { disabled: page < 2 })}>\r\n              <a\r\n                className=\"page-link\"\r\n                href=\"#\"\r\n                onClick={ev => {\r\n                  ev.preventDefault()\r\n                  this.onChangePage(page - 1)\r\n                }}\r\n              >\r\n                <i className=\"fa fa-chevron-left\" />\r\n              </a>\r\n            </li>\r\n            {new Array(countPage).fill(1).map((v, i) => {\r\n              return (\r\n                <li\r\n                  className={classNames(\"page-item\", {\r\n                    active: page == i + 1,\r\n                  })}\r\n                  key={i}\r\n                >\r\n                  <a\r\n                    className=\"page-link\"\r\n                    href=\"#\"\r\n                    onClick={ev => {\r\n                      ev.preventDefault()\r\n                      this.onChangePage(i + 1)\r\n                    }}\r\n                  >\r\n                    {i + 1}\r\n                  </a>\r\n                </li>\r\n              )\r\n            })}\r\n            <li\r\n              className={classNames(\"page-item\", {\r\n                disabled: page >= countPage,\r\n              })}\r\n            >\r\n              <a\r\n                className=\"page-link\"\r\n                href=\"#\"\r\n                onClick={ev => {\r\n                  ev.preventDefault()\r\n                  this.onChangePage(page + 1)\r\n                }}\r\n              >\r\n                <i className=\"fa fa-chevron-right\" />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\nconst WrapLayout = styled.div``\r\nexport default CPagination\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;"],"sourceRoot":""}