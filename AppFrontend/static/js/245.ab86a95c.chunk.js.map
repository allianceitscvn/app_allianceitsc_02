{"version":3,"sources":["modules/signalR/MyUI/Types/notifySignalR.js"],"names":["Notify","useState","connection","setConnection","useEffect","_hub","HCF","getCF","KConfigApp","signalRHub","_authInfo","AuthInfo","user_uniqueid","startsWith","baseUrl","_params","signalRKey","indexOf","console","warn","connect","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","then","on","message","type","HEE","emit","catch","error"],"mappings":"gLAuEeA,UAlEA,WACb,MAAoCC,mBAAS,MAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkDA,OA/CAC,qBAAU,WACR,IAAIC,EAAOC,MAAIC,MAAMC,IAAWC,YAC5BC,EAAYJ,MAAIC,MAAMC,IAAWG,UACrC,GAAIN,GAAQK,GAAaA,EAAUE,cAAe,CAC3CP,EAAKQ,WAAW,UACnBR,EAAOC,MAAIC,MAAMC,IAAWM,SAAWT,GAEzC,IAAIU,EAAO,cAAUL,EAAUE,cAApB,gBAAyCN,MAAIC,MACtDC,IAAWQ,cAEa,GAAtBX,EAAKY,QAAQ,KACfZ,GAAI,WAAQU,GAEZV,GAAI,WAAQU,GAEdG,QAAQC,KAAK,WAAYd,GACzB,IAAMe,GAAU,IAAIC,KACjBC,QAAQjB,GACRkB,yBACAC,QAEHrB,EAAciB,MAEf,IAEHhB,qBAAU,WACJF,GACFA,EACGuB,QACAC,MAAK,WACJxB,EAAWyB,GAAG,kBAAkB,SAAAC,GAC9BV,QAAQC,KAAK,eAAgBS,GAEzBA,GAAWA,EAAQC,MACrBC,MAAIC,KAAJ,cAAgBH,EAAQC,MAAQD,SAIrCI,OAAM,SAAAC,GAAK,OAAIf,QAAQe,MAAM,4BAA6BA,QAE9D,CAAC/B,IAQF","file":"static/js/245.ab86a95c.chunk.js","sourcesContent":["import { HubConnection, HubConnectionBuilder } from \"@microsoft/signalr\"\r\nimport { Button, Input } from \"reactstrap\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { HEE, HCF } from \"@macashipo/mlib\"\r\nimport { KConfigApp } from \"src/helpers/K\"\r\nconst Notify = () => {\r\n  const [connection, setConnection] = useState(null)\r\n  // const [inputText, setInputText] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    let _hub = HCF.getCF(KConfigApp.signalRHub)\r\n    let _authInfo = HCF.getCF(KConfigApp.AuthInfo)\r\n    if (_hub && _authInfo && _authInfo.user_uniqueid) {\r\n      if (!_hub.startsWith(\"http\")) {\r\n        _hub = HCF.getCF(KConfigApp.baseUrl) + _hub\r\n      }\r\n      let _params = `uid=${_authInfo.user_uniqueid}&key=${HCF.getCF(\r\n        KConfigApp.signalRKey\r\n      )}`\r\n      if (_hub.indexOf(\"?\") == -1) {\r\n        _hub += `?${_params}`\r\n      } else {\r\n        _hub += `&${_params}`\r\n      }\r\n      console.warn(\"Connect:\", _hub)\r\n      const connect = new HubConnectionBuilder()\r\n        .withUrl(_hub)\r\n        .withAutomaticReconnect()\r\n        .build()\r\n\r\n      setConnection(connect)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (connection) {\r\n      connection\r\n        .start()\r\n        .then(() => {\r\n          connection.on(\"ReceiveMessage\", message => {\r\n            console.warn(\"receive msg:\", message)\r\n            //tuy vao type gi se emit event do\r\n            if (message && message.type) {\r\n              HEE.emit(`ers_${message.type}`, message)\r\n            }\r\n          })\r\n        })\r\n        .catch(error => console.error(\"Error Connection SingalR:\", error))\r\n    }\r\n  }, [connection])\r\n\r\n  // const sendMessage = async () => {\r\n  //   if (connection) await connection.send(\"SendMessage\", inputText)\r\n  //   setInputText(\"\")\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      {/* <Input\r\n        value={inputText}\r\n        onChange={input => {\r\n          setInputText(input.target.value)\r\n        }}\r\n      />\r\n      <Button onClick={sendMessage} type=\"primary\">\r\n        Send\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notify\r\n"],"sourceRoot":""}