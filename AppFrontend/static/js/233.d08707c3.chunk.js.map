{"version":3,"sources":["modules/qlproject/MyPage/prj_info.js"],"names":["kGGChat","kProjectInfo","kProjectNote","MP_PRJ_Info","props","requestGets","keys","cbSuccess","ApiGeneric","request","method","path","name","data","ProjectId","_projectId","Key","successCallBack","response","console","warn","errorCallBack","err","log","requestUpdate","key","value","title","isUpdateValue","isUpdateTitle","isUpdateBoth","_values","push","FieldName","NewValue","Id","Values","updateValue","fieldState","state","Data","setState","Value","getProjectInfo","HUtils","runFuntion","fnList","renderControlInfo","type","label","fieldName","defaultValues","configFormControl","getDefaultValues","onUpdateValue","newValue","keysFetched","this","join","_obj","i","length","_item","HJson","getObj","_projectInfo","_defaultValues","WrapLayout","className","defaultValue","onBlur","ev","currentTarget","placeholder","Component","styled","div"],"mappings":"yOAMMA,EAAU,SACVC,EAAe,OACfC,EAAe,OACfC,E,kDACJ,WAAYC,GAAQ,IAAD,gCACjB,cAAMA,IA+BRC,YAAc,SAACC,EAAMC,GACnBC,YAAW,CACTC,QAAS,CACPC,OAAQ,OACRC,KAAM,cACNC,KAAK,mBAEPC,KAAM,CACJC,UAAW,EAAKC,WAChBC,IAAKV,GAEPW,gBAAiB,SAAAC,GACfC,QAAQC,KAAK,OAAQF,GACjBX,GACFA,EAAUW,IAGdG,cAAe,SAAAC,GACbH,QAAQI,IAAID,OAlDC,EAsDnBE,cAAgB,WAQJ,IAAD,yDAAP,GAPFC,EAOS,EAPTA,IACAC,EAMS,EANTA,MACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,cACAC,EAGS,EAHTA,cAEAtB,GACS,EAFTuB,aAES,EADTvB,WAEIwB,EAAU,GACVF,GACFE,EAAQC,KAAK,CACXC,UAAW,QACXC,SAAUP,IAGVC,GACFG,EAAQC,KAAK,CACXC,UAAW,QACXC,SAAUR,IAGdlB,YAAW,CACTC,QAAS,CACPC,OAAQ,OACRC,KAAM,cACNC,KAAM,gBAERC,KAAM,CACJsB,GAAIV,EACJX,UAAW,EAAKC,WAChBqB,OAAQL,GAEVd,gBAAiB,SAAAC,GACXX,GACFA,EAAUW,IAGdG,cAAe,SAAAC,GACbH,QAAQI,IAAID,OA7FC,EAiGnBe,YAAc,SAACZ,EAAKC,EAAOY,GACrBZ,GAAS,EAAKa,MAAMD,IACtB,EAAKd,cAAc,CACjBC,IAAKA,EACLG,eAAe,EACfF,MAAOA,EACPnB,UAAW,SAAAW,GACLA,GAAYA,EAASsB,MACvB,EAAKC,SAAL,eACGH,EAAapB,EAASsB,KAAKE,YA1GrB,EAiHnBC,eAAiB,WACf,OAAOC,SAAOC,WAAW,EAAKzC,MAAM0C,OAAQ,wBAAyB,KAlHpD,EAoHnBC,kBAAoB,SAACC,EAAMC,EAAOC,EAAWC,GAC3C,OACE,cAAC,gBAAD,CACEH,KAAMA,EACNI,kBAAmB,CACjBH,MAAOA,EACPC,UAAWA,GAEbJ,OAAQ,CACNO,iBAAkB,WAChB,OAAOF,GAETG,cAAe,YAA8B,IAA3BJ,EAA0B,EAA1BA,UAAWK,EAAe,EAAfA,SAC3BpC,QAAQI,IAAI,YAAa2B,EAAWK,GACpCX,SAAOC,WAAW,EAAKzC,MAAM0C,OAAQ,sBAAuB,CAC1D,CACErB,IAAKyB,EACLxB,MAAO6B,EACPhD,UAAW,WACTY,QAAQI,IAAI,uBArI1B,EAAKgB,OAAL,GACEiB,aAAa,GADf,cAEGxD,EAAU,IAFb,cAGGC,EAAe,IAHlB,cAIGC,EAAe,IAJlB,GAMA,EAAKa,WAAa6B,SAAOC,WAAWzC,EAAM0C,OAAQ,sBAAuB,IARxD,E,qDAUnB,WAAqB,IAAD,OAClBW,KAAKpD,YACH,CAACL,EAASC,EAAcC,GAAcwD,KAAK,MAC3C,SAAAxC,GACE,GAAIA,EAASsB,MAAQtB,EAASsB,KAAM,CAElC,IADA,IAAImB,EAAO,GACFC,EAAI,EAAGA,EAAI1C,EAASsB,KAAKqB,OAAQD,IAAK,CAC7C,IAAIE,EAAQ5C,EAASsB,KAAKoB,GACtBE,EAAM9C,KAAOhB,GAAW8D,EAAM9C,KAAOd,EACvCyD,EAAKG,EAAM9C,KAAO8C,EAAMpB,MACfoB,EAAM9C,KAAOf,IACtB0D,EAAKG,EAAM9C,KAAO+C,QAAMC,OAAOF,EAAMpB,QAGzC,EAAKD,SAAL,aACEe,aAAa,GACVG,U,oBAsHb,WAAU,IAAD,OACHM,EAAeR,KAAKd,iBACxBxB,QAAQI,IAAI,gBAAiB0C,GAC7B,IAAMC,EAAc,eACfD,GAEL,OACE,eAACE,EAAD,WAIE,sBAAKC,UAAU,UAAf,UACE,qBAAKA,UAAU,UAAf,yCACA,8BACE,uBACEpB,KAAK,OACLoB,UAAU,eACVC,aAAcZ,KAAKlB,MAAMvC,GACzBsE,OAAQ,SAAAC,GACN,EAAKlC,YAAYrC,EAASuE,EAAGC,cAAc9C,MAAO1B,WAK1D,sBAAKoE,UAAU,UAAf,UACE,qBAAKA,UAAU,UAAf,kBACA,gCACGX,KAAKV,kBACJ,UACA,cACA,cACAmB,GAEDT,KAAKV,kBACJ,UACA,YACA,YACAmB,MAGJ,gCACE,wCACA,0BACEE,UAAU,eACVK,YAAY,OACZJ,aAAcZ,KAAKlB,MAAMrC,GACzBoE,OAAQ,SAAAC,GACN,EAAKlC,YACHnC,EACAqE,EAAGC,cAAc9C,MACjBxB,mB,GAnMQwE,aA8MpBP,EAAaQ,IAAOC,IAAV,iUAiBDzE","file":"static/js/233.d08707c3.chunk.js","sourcesContent":["import { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport Tabs from \"react-responsive-tabs\"\r\nimport { HJson, HUtils, MyFormControl, MyPage } from \"@macashipo/mlib\"\r\n\r\nconst kGGChat = \"GGChat\"\r\nconst kProjectInfo = \"Info\"\r\nconst kProjectNote = \"Note\"\r\nclass MP_PRJ_Info extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      keysFetched: false,\r\n      [kGGChat]: \"\",\r\n      [kProjectInfo]: {},\r\n      [kProjectNote]: \"\",\r\n    }\r\n    this._projectId = HUtils.runFuntion(props.fnList, \"getCurrentProjectId\", [])\r\n  }\r\n  componentDidMount() {\r\n    this.requestGets(\r\n      [kGGChat, kProjectInfo, kProjectNote].join(\",\"),\r\n      response => {\r\n        if (response.Data && response.Data) {\r\n          let _obj = {}\r\n          for (let i = 0; i < response.Data.length; i++) {\r\n            let _item = response.Data[i]\r\n            if (_item.Key == kGGChat || _item.Key == kProjectNote) {\r\n              _obj[_item.Key] = _item.Value\r\n            } else if (_item.Key == kProjectInfo) {\r\n              _obj[_item.Key] = HJson.getObj(_item.Value)\r\n            }\r\n          }\r\n          this.setState({\r\n            keysFetched: true,\r\n            ..._obj,\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n  requestGets = (keys, cbSuccess) => {\r\n    ApiGeneric({\r\n      request: {\r\n        method: \"POST\",\r\n        path: \"Project_Ext\",\r\n        name: `GetItemsWithKey`,\r\n      },\r\n      data: {\r\n        ProjectId: this._projectId,\r\n        Key: keys,\r\n      },\r\n      successCallBack: response => {\r\n        console.warn(\"res:\", response)\r\n        if (cbSuccess) {\r\n          cbSuccess(response)\r\n        }\r\n      },\r\n      errorCallBack: err => {\r\n        console.log(err)\r\n      },\r\n    })\r\n  }\r\n  requestUpdate = ({\r\n    key,\r\n    value,\r\n    title,\r\n    isUpdateValue,\r\n    isUpdateTitle,\r\n    isUpdateBoth,\r\n    cbSuccess,\r\n  } = {}) => {\r\n    let _values = []\r\n    if (isUpdateTitle) {\r\n      _values.push({\r\n        FieldName: \"Title\",\r\n        NewValue: title,\r\n      })\r\n    }\r\n    if (isUpdateValue) {\r\n      _values.push({\r\n        FieldName: \"Value\",\r\n        NewValue: value,\r\n      })\r\n    }\r\n    ApiGeneric({\r\n      request: {\r\n        method: \"POST\",\r\n        path: \"Project_Ext\",\r\n        name: \"UpdateFields\",\r\n      },\r\n      data: {\r\n        Id: key,\r\n        ProjectId: this._projectId,\r\n        Values: _values,\r\n      },\r\n      successCallBack: response => {\r\n        if (cbSuccess) {\r\n          cbSuccess(response)\r\n        }\r\n      },\r\n      errorCallBack: err => {\r\n        console.log(err)\r\n      },\r\n    })\r\n  }\r\n  updateValue = (key, value, fieldState) => {\r\n    if (value != this.state[fieldState]) {\r\n      this.requestUpdate({\r\n        key: key,\r\n        isUpdateValue: true,\r\n        value: value,\r\n        cbSuccess: response => {\r\n          if (response && response.Data) {\r\n            this.setState({\r\n              [fieldState]: response.Data.Value,\r\n            })\r\n          }\r\n        },\r\n      })\r\n    }\r\n  }\r\n  getProjectInfo = () => {\r\n    return HUtils.runFuntion(this.props.fnList, \"getCurrentProjectInfo\", [])\r\n  }\r\n  renderControlInfo = (type, label, fieldName, defaultValues) => {\r\n    return (\r\n      <MyFormControl\r\n        type={type}\r\n        configFormControl={{\r\n          label: label,\r\n          fieldName: fieldName,\r\n        }}\r\n        fnList={{\r\n          getDefaultValues: () => {\r\n            return defaultValues\r\n          },\r\n          onUpdateValue: ({ fieldName, newValue }) => {\r\n            console.log(\"onUpdate:\", fieldName, newValue)\r\n            HUtils.runFuntion(this.props.fnList, \"onUpdateProjectInfo\", [\r\n              {\r\n                key: fieldName,\r\n                value: newValue,\r\n                cbSuccess: () => {\r\n                  console.log(\"cb success\")\r\n                },\r\n              },\r\n            ])\r\n          },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  render() {\r\n    let _projectInfo = this.getProjectInfo()\r\n    console.log(\"_projectInfo:\", _projectInfo)\r\n    const _defaultValues = {\r\n      ..._projectInfo,\r\n    }\r\n    return (\r\n      <WrapLayout>\r\n        {/* <div>\r\n          <div>Project Info</div>\r\n        </div> */}\r\n        <div className=\"a-group\">\r\n          <div className=\"a-title\">Webhook - Google Chat Group</div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              defaultValue={this.state[kGGChat]}\r\n              onBlur={ev => {\r\n                this.updateValue(kGGChat, ev.currentTarget.value, kGGChat)\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"a-group\">\r\n          <div className=\"a-title\">Info</div>\r\n          <div>\r\n            {this.renderControlInfo(\r\n              \"arrtext\",\r\n              \"Enviroments\",\r\n              \"enviroments\",\r\n              _defaultValues\r\n            )}\r\n            {this.renderControlInfo(\r\n              \"arrtext\",\r\n              \"Platforms\",\r\n              \"platforms\",\r\n              _defaultValues\r\n            )}\r\n          </div>\r\n          <div>\r\n            <div>Notes</div>\r\n            <textarea\r\n              className=\"form-control\"\r\n              placeholder=\"Note\"\r\n              defaultValue={this.state[kProjectNote]}\r\n              onBlur={ev => {\r\n                this.updateValue(\r\n                  kProjectNote,\r\n                  ev.currentTarget.value,\r\n                  kProjectNote\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrapLayout = styled.div`\r\n  padding: 1rem;\r\n  background: white;\r\n  & .a-group {\r\n    border: 1px solid #ebf1ff;\r\n    padding: 10px;\r\n    border-radius: 4px;\r\n    background: #f5fbff;\r\n    margin-bottom: 10px;\r\n    & .a-title {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`\r\n\r\nexport default MP_PRJ_Info\r\n"],"sourceRoot":""}