{"version":3,"sources":["modules/adminpanel/MyUI/Types/select_box_search_virtualized.js","helpers/AText.js"],"names":["WrapSelect","styled","div","MUI_Select_Box_Search_Virtualized","props","sourceData","valueSelected","onChange","React","useState","sourceDataFilterd","setSourceDataFilterd","textSearch","setTextSearch","textSearchDone","setTextSearchDone","refInputSearch","useRef","handlerSearch","useCallback","debounce","s","console","warn","length","_arrFilter","filter","v","i","_textFilter","Text_Filter","Text","AText","compareTextForSearch","searchKoDau","log","_listData","useEffect","inModal","current","focus","showSelectedOnFirstRow","sort","a","b","Value","className","type","ref","placeholder","i18next","t","value","ev","_s","currentTarget","style","padding","textAlign","width","height","rowHeight","rowRenderer","index","key","classnames","selected","onClick","rowCount","containerStyle","maxWidth","border","borderRadius","text","opts","indexOf","_textSearch","toLowerCase","_text","HText"],"mappings":"sRAQMA,EAAaC,IAAOC,IAAV,qnCA2DD,SAASC,EAAkCC,GACxD,IAAQC,EAAwCD,EAAxCC,WAAYC,EAA4BF,EAA5BE,cAAeC,EAAaH,EAAbG,SACnC,EAAkDC,IAAMC,SAASJ,GAAjE,mBAAOK,EAAP,KAA0BC,EAA1B,KACA,EAAoCH,IAAMC,SAAS,IAAnD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4CL,IAAMC,SAAS,IAA3D,mBAAOK,EAAP,KAAuBC,EAAvB,KACMC,EAAiBR,IAAMS,SACvBC,EAAgBV,IAAMW,YAC1BC,oBAAS,SAAAC,GAEP,GADAC,QAAQC,KAAK,UAAWF,GACpBhB,GAAcA,EAAWmB,OAAS,EAAG,CACvC,IAAIC,EAAapB,EAAWqB,QAAO,SAACC,EAAGC,GACrC,IAAIC,EAAcF,EAAEG,aAAeH,EAAEI,KACrC,QACEC,IAAMC,qBAAqBJ,EAAaR,EAAG,CAAEa,aAAa,OAM9DZ,QAAQa,IAAIV,GACZd,EAAqBc,GACrBV,EAAkBM,MAEnB,KACH,IAEEe,EAAY/B,EACZO,GAAcA,EAAWY,OAAS,IACpCY,EAAY1B,GAwCd,OAlBAF,IAAM6B,WAAU,YAEQ,IAAlBjC,EAAMkC,SAEJtB,EAAeuB,SAAWvB,EAAeuB,QAAQC,OACnDxB,EAAeuB,QAAQC,UAG1B,IAEiC,GAAhCpC,EAAMqC,wBAAkCL,GAC1CA,EAAUM,MAAK,SAAUC,EAAGC,GAC1B,OAAID,EAAEE,OAASvC,GACL,EAEH,KAIT,eAACN,EAAD,CAAY8C,UAAU,6BAAtB,UACE,sBAAKA,UAAU,WAAf,UACE,mBAAGA,UAAU,iBACb,uBACEC,KAAK,OACLC,IAAKhC,EACLiC,YAAaC,IAAQC,EAAE,aAEvBC,MAAOxC,EACPL,SAAU,SAAA8C,GACR,IAAIC,EAAKD,EAAGE,cAAcH,MAC1BvC,EAAcyC,GACdpC,EAAcoC,SAInB1C,GAAcA,EAAWY,OAAS,GAA0B,IAArBY,EAAUZ,QAChD,qBAAKgC,MAAO,CAAEC,QAAS,OAAQC,UAAW,UAA1C,SACG5C,IAAmBF,EAClB,8BAAMsC,IAAQC,EAAE,qBAEhB,8BAAMD,IAAQC,EAAE,oBAItB,cAAC,IAAD,CACEQ,MAAO,EACPC,OAlGW,IAmGXC,UAlGU,GAmGVC,YAnEY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAYP,GAAY,EAAjBQ,IAAiB,EAAZR,OAC/B,OACE,qBACEA,MAAOA,EAEPV,UAAWmB,IAAW,SAAU,CAC9BC,SAAUxD,EAAkBqD,GAAOlB,OAASvC,IAE9C6D,QAAS,WACH5D,GACFA,EAASG,EAAkBqD,KARjC,SAYGrD,EAAkBqD,GAAOhC,MAVrBgC,IAgELK,SAAU1D,EAAkBc,OAC5B6C,eAAgB,CACdV,MAAO,OACPW,SAAU,OACVC,OAAQ,oBACRC,aAAc,OAEhBhB,MAAO,CACLG,MAAO,UAGI,IAAd/C,GAAoBwB,GAAkC,IAArBA,EAAUZ,QAC1C,qBAAKsB,UAAU,cAAf,6B,iCClLR,WACMd,EAAQ,CAEZC,qBAFY,WAE4C,IAAnCwC,EAAkC,uDAA3B,GAAI7D,EAAuB,uDAAV,GAAI8D,EAAM,uCACrD,GAAI9D,EAAW+D,QAAQ,MAAQ,GAAK/D,EAAW+D,QAAQ,MAAQ,EAAG,CAChE,IAAIC,EAAchE,EAAWiE,cACzBC,EAAQL,EAAKI,cACjB,OAAIC,EAAMH,QAAQC,IAAgB,EAMpC,OAAOG,QAAM9C,qBAAqBwC,EAAM7D,EAAY8D,KAIzC1C","file":"static/js/154.f5088227.chunk.js","sourcesContent":["import { HText } from \"@macashipo/mlib\"\r\nimport i18next from \"i18next\"\r\nimport classnames from \"classnames\"\r\nimport React, { Component } from \"react\"\r\nimport { debounce } from \"src/core/helpers/utils\"\r\nimport styled from \"styled-components\"\r\nimport { List } from \"react-virtualized\"\r\nimport AText from \"src/helpers/AText\"\r\nconst WrapSelect = styled.div`\r\n  max-height: inherit;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  & .a-list {\r\n    border: 1px solid #e9ecef;\r\n    border-radius: 4px;\r\n    overflow: auto;\r\n  }\r\n  & .option {\r\n    color: #575757;\r\n    min-height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.5rem 1rem;\r\n    cursor: pointer;\r\n    border-bottom: 1px solid #e9ecef;\r\n  }\r\n  & .option:hover {\r\n    color: #546c84;\r\n    background-color: #fbfbfb;\r\n  }\r\n  & .option.selected {\r\n    background: #10467a;\r\n    color: white;\r\n  }\r\n  & .a-search {\r\n    & i {\r\n      position: absolute;\r\n      left: 10px;\r\n      top: 11px;\r\n    }\r\n    & input {\r\n      width: 100%;\r\n      border: 1px solid #e9ecef;\r\n      height: 35px;\r\n      padding: 0rem;\r\n      padding-left: 28px;\r\n      border-radius: 4px;\r\n      margin-bottom: 0.5rem;\r\n      &:focus {\r\n        outline: 0;\r\n        background: var(--color-bg-focus);\r\n      }\r\n    }\r\n  }\r\n  & .a-nooptions {\r\n    min-height: 100px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: var(--warning);\r\n  }\r\n`\r\n\r\nconst listHeight = 600\r\nconst rowHeight = 30\r\nexport default function MUI_Select_Box_Search_Virtualized(props) {\r\n  const { sourceData, valueSelected, onChange } = props\r\n  const [sourceDataFilterd, setSourceDataFilterd] = React.useState(sourceData)\r\n  const [textSearch, setTextSearch] = React.useState(\"\")\r\n  const [textSearchDone, setTextSearchDone] = React.useState(\"\")\r\n  const refInputSearch = React.useRef()\r\n  const handlerSearch = React.useCallback(\r\n    debounce(s => {\r\n      console.warn(\"search:\", s)\r\n      if (sourceData && sourceData.length > 0) {\r\n        let _arrFilter = sourceData.filter((v, i) => {\r\n          let _textFilter = v.Text_Filter || v.Text\r\n          if (\r\n            AText.compareTextForSearch(_textFilter, s, { searchKoDau: true })\r\n          ) {\r\n            return true\r\n          }\r\n          return false\r\n        })\r\n        console.log(_arrFilter)\r\n        setSourceDataFilterd(_arrFilter)\r\n        setTextSearchDone(s)\r\n      }\r\n    }, 300),\r\n    []\r\n  )\r\n  let _listData = sourceData\r\n  if (textSearch && textSearch.length > 0) {\r\n    _listData = sourceDataFilterd\r\n  }\r\n\r\n  const renderRow = ({ index, key, style }) => {\r\n    return (\r\n      <div\r\n        style={style}\r\n        key={index}\r\n        className={classnames(\"option\", {\r\n          selected: sourceDataFilterd[index].Value == valueSelected,\r\n        })}\r\n        onClick={() => {\r\n          if (onChange) {\r\n            onChange(sourceDataFilterd[index])\r\n          }\r\n        }}\r\n      >\r\n        {sourceDataFilterd[index].Text}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    //auto focus inModal\r\n    if (props.inModal === true) {\r\n      // console.warn(\"in modal\", refInputSearch.current)\r\n      if (refInputSearch.current && refInputSearch.current.focus) {\r\n        refInputSearch.current.focus()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  if (props.showSelectedOnFirstRow == true && _listData) {\r\n    _listData.sort(function (a, b) {\r\n      if (a.Value == valueSelected) {\r\n        return -1\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n  return (\r\n    <WrapSelect className=\"mui-select_box_virtualized\">\r\n      <div className=\"a-search\">\r\n        <i className=\"fa fa-search\" />\r\n        <input\r\n          type=\"text\"\r\n          ref={refInputSearch}\r\n          placeholder={i18next.t(\"Search...\")}\r\n          // autoFocus\r\n          value={textSearch}\r\n          onChange={ev => {\r\n            let _s = ev.currentTarget.value\r\n            setTextSearch(_s)\r\n            handlerSearch(_s)\r\n          }}\r\n        />\r\n      </div>\r\n      {textSearch && textSearch.length > 0 && _listData.length === 0 && (\r\n        <div style={{ padding: \"1rem\", textAlign: \"center\" }}>\r\n          {textSearchDone === textSearch ? (\r\n            <div>{i18next.t(\"No result found\")}</div>\r\n          ) : (\r\n            <div>{i18next.t(\"Searching...\")}</div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <List\r\n        width={1}\r\n        height={listHeight}\r\n        rowHeight={rowHeight}\r\n        rowRenderer={renderRow}\r\n        rowCount={sourceDataFilterd.length}\r\n        containerStyle={{\r\n          width: \"100%\",\r\n          maxWidth: \"100%\",\r\n          border: \"1px solid #e9ecef\",\r\n          borderRadius: \"4px\",\r\n        }}\r\n        style={{\r\n          width: \"100%\",\r\n        }}\r\n      />\r\n      {textSearch == \"\" && _listData && _listData.length === 0 && (\r\n        <div className=\"a-nooptions\">No options</div>\r\n      )}\r\n    </WrapSelect>\r\n  )\r\n}\r\n","import { HText } from \"@macashipo/mlib\"\r\nconst AText = {\r\n  //bo sung compareTextForSearch, truong hop search ki tu []\r\n  compareTextForSearch(text = \"\", textSearch = \"\", opts) {\r\n    if (textSearch.indexOf(\"[\") > -1 || textSearch.indexOf(\"]\") > -1) {\r\n      let _textSearch = textSearch.toLowerCase()\r\n      let _text = text.toLowerCase()\r\n      if (_text.indexOf(_textSearch) > -1) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n    return HText.compareTextForSearch(text, textSearch, opts)\r\n  },\r\n}\r\n\r\nexport default AText\r\n"],"sourceRoot":""}