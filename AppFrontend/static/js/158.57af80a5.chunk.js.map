{"version":3,"sources":["modules/adminpanel/MyBase/Types/checkbox.js","modules/adminpanel/MyBase/Types/checkbox_yesno.js"],"names":["BaseControl","props","more","HUtils","runFuntion","fnList","HelperMore","getIsCheckListYesNo","CheckboxYesNo","type","getInputType","inputType","getPropsValues","defaultValueWhenNull","keyValue","keyDefaultValue","onChange","ev","currentTarget","checked","className","style","attrs","getMoreFromProps","_options","getOptionPositive","default","Value","Text","getOptionNegative","SelectCheck","getSourceData"],"mappings":"qLA8BeA,UAzBK,SAAAC,GAClB,IAAMC,EAAOC,SAAOC,WAAWH,EAAMI,OAAQ,UAAW,IAExD,OAAyB,IADAC,IAAWC,oBAAoBL,GAE/CM,kBAAcP,GAIrB,+CACEQ,KAAMH,IAAWI,aAAaR,EAAMD,EAAMU,WAAa,aACnDL,IAAWM,eAAeX,EAAO,CACnCY,sBAAsB,EACtBC,SAAU,UACVC,gBAAiB,oBALrB,IAOEC,SAAU,SAAAC,GACRhB,EAAMe,UAAYf,EAAMe,SAASC,EAAGC,cAAcC,UAEpDC,UAAWnB,EAAMmB,UACjBC,MAAOpB,EAAMoB,OACTpB,EAAMqB,U,oECIDtB,UA1BK,SAAAC,GAClB,IAAMC,EAAOI,IAAWiB,iBAAiBtB,GAarCuB,EAAW,CAZOlB,IAAWmB,kBAAkBvB,EAAM,CACvDwB,QAAS,CACPC,OAAO,EACPC,KAAM,SAGYtB,IAAWuB,kBAAkB3B,EAAM,CACvDwB,QAAS,CACPC,OAAO,EACPC,KAAM,SAIV,OAAOE,YAAY,2BACd7B,GADa,IAEhBI,OAAO,2BACFJ,EAAMI,QADL,IAEJ0B,cAAe,WACb,OAAOP","file":"static/js/158.57af80a5.chunk.js","sourcesContent":["import { HUtils } from \"@macashipo/mlib\"\r\nimport CheckboxYesNo from \"./checkbox_yesno\"\r\nimport SelectCheck from \"./select_check\"\r\nimport HelperMore from \"./_helperMore\"\r\n\r\nconst BaseControl = props => {\r\n  const more = HUtils.runFuntion(props.fnList, \"getMore\", [])\r\n  const isCheckListYesNo = HelperMore.getIsCheckListYesNo(more)\r\n  if (isCheckListYesNo === true) {\r\n    return CheckboxYesNo(props)\r\n  }\r\n\r\n  return (\r\n    <input\r\n      type={HelperMore.getInputType(more, props.inputType || \"checkbox\")}\r\n      {...HelperMore.getPropsValues(props, {\r\n        defaultValueWhenNull: false,\r\n        keyValue: \"checked\",\r\n        keyDefaultValue: \"defaultChecked\",\r\n      })}\r\n      onChange={ev => {\r\n        props.onChange && props.onChange(ev.currentTarget.checked)\r\n      }}\r\n      className={props.className}\r\n      style={props.style}\r\n      {...props.attrs}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BaseControl\r\n","import SelectCheck from \"./select_check\"\r\nimport HelperMore from \"./_helperMore\"\r\n\r\nconst BaseControl = props => {\r\n  const more = HelperMore.getMoreFromProps(props)\r\n  let _optionPositive = HelperMore.getOptionPositive(more, {\r\n    default: {\r\n      Value: true,\r\n      Text: \"YES\",\r\n    },\r\n  })\r\n  let _optionNegative = HelperMore.getOptionNegative(more, {\r\n    default: {\r\n      Value: false,\r\n      Text: \"NO\",\r\n    },\r\n  })\r\n  let _options = [_optionPositive, _optionNegative]\r\n  return SelectCheck({\r\n    ...props,\r\n    fnList: {\r\n      ...props.fnList,\r\n      getSourceData: () => {\r\n        return _options\r\n      },\r\n    },\r\n  })\r\n}\r\n\r\nexport default BaseControl\r\n"],"sourceRoot":""}