{"version":3,"sources":["modules/adminpanel/MyUI/Types/animate.js"],"names":["AnimatedVisibility","visible","children","animationOutDuration","disappearOffset","rest","useState","setNoDisplay","useEffect","setTimeout","isVisible","style","makeAnimated","Component","animationIn","animationOut","animationInDuration","open","className","props","makeAnimationSlideLeft","makeAnimationSlideUpDown","defaultProps"],"mappings":"kYAIA,SAASA,EAAT,GAMI,IALFC,EAKC,EALDA,QACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,qBACAC,EAEC,EAFDA,gBACGC,EACF,iBACD,EAAkCC,oBAAUL,GAA5C,mBAAkBM,GAAlB,WACAC,qBAAU,WACHP,EAGEM,GAAa,GADlBE,YAAW,kBAAMF,GAAa,KADhBJ,EAAuBC,KAGtC,CAACH,IAIJ,OACE,cAAC,WAAD,yBAAUS,UAAWT,EAASU,MAFlB,IAEoCN,GAAhD,aACGH,KAqBP,SAASU,EACPC,EACAC,EACAC,EACAC,EACAb,EACAC,GAEA,OAAO,YAA0C,IAA9Ba,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAAcC,EAAS,iBAC9C,OACE,cAACnB,EAAD,CACEC,QAASgB,EACTH,YAAaA,EACbC,aAAcA,EACdC,oBAAqBA,EACrBb,qBAAsBA,EACtBC,gBAAiBA,EACjBc,UAAWA,EAPb,SASE,cAACL,EAAD,eAAeM,OAMhB,SAASC,EAAuBP,GACrC,OAAOD,EAAaC,EAAW,cAAe,eAAgB,IAAK,IAAK,KAGnE,SAASQ,EAAyBR,GACvC,OAAOD,EAAaC,EAAW,cAAe,aAAc,IAAK,IAAK,KA9CxEb,EAAmBsB,aAAe,CAChCnB,qBAAsB,IACtBC,gBAAiB,IACjBH,SAAS,GA8CID","file":"static/js/219.72813e85.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Animated } from \"react-animated-css\"\r\nimport \"src/assets/scss/animate.css\"\r\nfunction AnimatedVisibility({\r\n  visible,\r\n  children,\r\n  animationOutDuration,\r\n  disappearOffset,\r\n  ...rest\r\n}) {\r\n  const [noDisplay, setNoDisplay] = useState(!visible)\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      const delay = animationOutDuration - disappearOffset\r\n      setTimeout(() => setNoDisplay(true), delay)\r\n    } else setNoDisplay(false)\r\n  }, [visible])\r\n\r\n  // const style = noDisplay ? { display: \"none\" } : { display: \"block\" }\r\n  const style = {}\r\n  return (\r\n    <Animated isVisible={visible} style={style} {...rest}>\r\n      {children}\r\n    </Animated>\r\n  )\r\n}\r\n\r\nAnimatedVisibility.defaultProps = {\r\n  animationOutDuration: 1000,\r\n  disappearOffset: 350,\r\n  visible: true,\r\n}\r\n\r\nAnimatedVisibility.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n  animationOutDuration: PropTypes.number,\r\n  disappearOffset: PropTypes.number,\r\n  visible: PropTypes.bool,\r\n}\r\n\r\nfunction makeAnimated(\r\n  Component,\r\n  animationIn,\r\n  animationOut,\r\n  animationInDuration,\r\n  animationOutDuration,\r\n  disappearOffset\r\n) {\r\n  return function ({ open, className, ...props }) {\r\n    return (\r\n      <AnimatedVisibility\r\n        visible={open}\r\n        animationIn={animationIn}\r\n        animationOut={animationOut}\r\n        animationInDuration={animationInDuration}\r\n        animationOutDuration={animationOutDuration}\r\n        disappearOffset={disappearOffset}\r\n        className={className}\r\n      >\r\n        <Component {...props} />\r\n      </AnimatedVisibility>\r\n    )\r\n  }\r\n}\r\n\r\nexport function makeAnimationSlideLeft(Component) {\r\n  return makeAnimated(Component, \"slideInLeft\", \"slideOutLeft\", 400, 500, 200)\r\n}\r\n\r\nexport function makeAnimationSlideUpDown(Component) {\r\n  return makeAnimated(Component, \"slideInDown\", \"slideOutUp\", 400, 500, 200)\r\n}\r\n\r\nexport default AnimatedVisibility\r\n"],"sourceRoot":""}