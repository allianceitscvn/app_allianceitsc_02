{"version":3,"sources":["modules/adminpanel/MyPage/Types/admin_table_list_card.js"],"names":["AdminList","props","cfp","useConfigPage","configPage","needOptions","needList","showLoading","renderLoading","errorMsg","renderError","_myUITypeHeader","_myUITypeFilter","fnListMyPage","fnGetIsInTableExpand","fnList","onePage","errorOption","console","warn","Object","keys","type","className","_oneScreenConfig","_header","show","_msgShowInUI","color"],"mappings":"+NAKe,SAASA,EAAUC,GAChC,IAAMC,EAAMC,YAAcF,EAAMG,WAAY,CAC1CH,QACAI,aAAa,EACbC,UAAU,IAEZ,GAAIJ,EAAIK,YACN,OAAOL,EAAIM,gBAEb,GAAIN,EAAIO,SACN,OAAOP,EAAIQ,YAAYR,EAAIO,UAE7B,IAAIE,EAAkB,oBAClBC,EAAkB,oBAMtB,IALsD,IAAlDC,IAAaC,qBAAqBZ,EAAIa,UACxCJ,EAAkB,yBAClBC,EAAkB,4BAGhBV,EAAIc,QAAJ,mBAAmC,CACrC,IAAMC,EAAcf,EAAIc,QAAJ,mBAEpB,OADAE,QAAQC,KAAK,SAAUF,EAAaG,OAAOC,KAAKJ,IACzC,cAAC,OAAD,CAAMK,KAAK,iBAGpB,OACE,sBAAKC,UAAU,sBAAf,WACiD,IAA9CrB,EAAIc,QAAQQ,iBAAiBC,QAAQC,MACpC,cAAC,OAAD,2BAAUzB,GAAV,IAAiBqB,KAAMX,EAAiBT,IAAKA,KAE/C,cAAC,OAAD,2BAAUD,GAAV,IAAiBqB,KAAMV,EAAiBV,IAAKA,KAC5CA,EAAIc,QAAQW,cACX,cAAC,IAAD,CAAOC,MAAM,UAAb,SAAwB1B,EAAIc,QAAQW,eAEtC,cAAC,OAAD,2BAAU1B,GAAV,IAAiBqB,KAAK,mBAAmBpB,IAAKA,KAC9C,cAAC,OAAD,2BAAUD,GAAV,IAAiBqB,KAAK,6BAA6BpB,IAAKA","file":"static/js/203.882ad618.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { HUtils, MyUI } from \"@macashipo/mlib\"\r\nimport { Alert } from \"reactstrap\"\r\nimport useConfigPage from \"../../hooks/useConfigPage\"\r\nimport { fnListMyPage } from \"src/helpers/fnList\"\r\nexport default function AdminList(props) {\r\n  const cfp = useConfigPage(props.configPage, {\r\n    props,\r\n    needOptions: true,\r\n    needList: true,\r\n  })\r\n  if (cfp.showLoading) {\r\n    return cfp.renderLoading()\r\n  }\r\n  if (cfp.errorMsg) {\r\n    return cfp.renderError(cfp.errorMsg)\r\n  }\r\n  let _myUITypeHeader = \"admintable_header\"\r\n  let _myUITypeFilter = \"admintable_filter\"\r\n  if (fnListMyPage.fnGetIsInTableExpand(cfp.fnList) === true) {\r\n    _myUITypeHeader = \"admintable_header_mini\"\r\n    _myUITypeFilter = \"admintable_filter_detail\"\r\n  }\r\n\r\n  if (cfp.onePage[\"UI_LoadOptionError\"]) {\r\n    const errorOption = cfp.onePage[\"UI_LoadOptionError\"]\r\n    console.warn(\"error:\", errorOption, Object.keys(errorOption))\r\n    return <MyUI type=\"msgbox_error\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"mp-admin_table_list\">\r\n      {cfp.onePage._oneScreenConfig._header.show !== false && (\r\n        <MyUI {...props} type={_myUITypeHeader} cfp={cfp} />\r\n      )}\r\n      <MyUI {...props} type={_myUITypeFilter} cfp={cfp} />\r\n      {cfp.onePage._msgShowInUI && (\r\n        <Alert color=\"warning\">{cfp.onePage._msgShowInUI}</Alert>\r\n      )}\r\n      <MyUI {...props} type=\"admintable_chart\" cfp={cfp} />\r\n      <MyUI {...props} type=\"admintable_table_list_card\" cfp={cfp} />\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}