{"version":3,"sources":["modules/qlproject/MyPage/prj_dailytask.js","modules/qlproject/MyUI/prj_task_filters.js","components/Pagination/index.js","modules/qlproject/MyUI/prj_set_btn.js","../node_modules/reactstrap/es/Spinner.js"],"names":["MPDailyTask","props","requestOptions","setState","loading","ApiGeneric","request","method","path","name","data","successCallBack","response","Data","options","requestTasks","errorCallBack","err","console","log","_getApiPath","state","assignByMe","_getRequestData","filters","pagination","tasks","total","Total","configFromConfigPage","_getConfigFromConfigPage","apiPath","configPage","RequestData","Config","Page","PageSize","window","document","title","HCF","getCF","this","WrapLayout","className","style","hideHeader","display","onClick","MyModal","showFromMyUI","type","fnList","reloadTasks","size","backdrop","getCanEdit","getOptions","marginLeft","class","id","defaultChecked","onChange","ev","currentTarget","checked","for","length","typeItem","morePropsItem","mode","showAssignTo","onClickItem","v","afterUpdateData","newData","Object","keys","k","forceUpdate","src","width","alt","page","pageSize","onChangePage","p","Component","styled","div","TypeFilter","MPPRJTasksFilters","HUtils","runFuntion","_getTypeFilter","_filters","TaskStatusCode","TaskStatusNotDone","_clickFilter","status","value","mini","_showFilterProject","_options","ProjectList","map","i","classNames","overlay","propsOverlay","sourceData","valueSelected","ProjectId","itemOption","warn","Value","ProjectId_Text","Text","hide","overlayClassName","placement","destroyTooltipOnHide","CPagination","countPage","parseInt","disabled","href","preventDefault","Array","fill","active","MUIPJAPI","requestList","_data","SharedSET","reloadBtn","showWarning","_excluded","propTypes","tag","tagPropType","PropTypes","string","color","cssModule","object","children","Spinner","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","React","createElement","_extends","role","defaultProps"],"mappings":"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","file":"static/js/30.e3eb9e62.chunk.js","sourcesContent":["import { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport { HCF, HUtils, MyUI } from \"@macashipo/mlib\"\r\nimport { MyModal } from \"src/core/components\"\r\nimport { Spinner } from \"reactstrap\"\r\nimport MPPRJTasksFilters from \"../MyUI/prj_task_filters\"\r\nimport CPagination from \"src/components/Pagination\"\r\nimport BtnSet from \"../MyUI/prj_set_btn\"\r\nclass MPDailyTask extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      filters: {},\r\n      assignByMe: false,\r\n      pagination: {\r\n        Page: 1,\r\n        PageSize: 20,\r\n      },\r\n      total: 0,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    window.document.title = `DailyTasks - ${HCF.getCF(\"title\")}`\r\n    this.requestOptions()\r\n  }\r\n  requestOptions = () => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"/api/v1/UserTask_Mine\",\r\n            name: \"Options\",\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            if (response.Data) {\r\n              this.setState(\r\n                {\r\n                  options: response.Data,\r\n                  loading: false,\r\n                },\r\n                () => {\r\n                  this.requestTasks()\r\n                }\r\n              )\r\n            }\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({\r\n              loading: false,\r\n            })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  requestTasks = () => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: `/api/v1/${this._getApiPath()}`,\r\n            name: this.state.assignByMe === true ? \"GetTasksAssign\" : \"List\",\r\n          },\r\n          data: {\r\n            ...this._getRequestData(),\r\n            ...this.state.filters,\r\n            ...this.state.pagination,\r\n          },\r\n          successCallBack: response => {\r\n            // if (this.state.assignByMe) {\r\n            //   if (response.Data) {\r\n            //     this.setState({\r\n            //       tasks: response.Data,\r\n            //       total: response.Data.length,\r\n            //       loading: false,\r\n            //     })\r\n            //   }\r\n            // }\r\n            // if (response.Data.Data) {\r\n            this.setState({\r\n              tasks: response.Data.Data || [],\r\n              total: response.Data.Total,\r\n              loading: false,\r\n            })\r\n            // }\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({\r\n              loading: false,\r\n            })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n  _getApiPath = () => {\r\n    let _apiPath = \"UserTask_Mine\"\r\n    const configFromConfigPage = this._getConfigFromConfigPage()\r\n    if (configFromConfigPage.apiPath) {\r\n      return configFromConfigPage.apiPath\r\n    }\r\n    return _apiPath\r\n  }\r\n  _getRequestData = () => {\r\n    const configPage = this.props.configPage || {}\r\n    let _requestData = configPage.RequestData || {}\r\n    return _requestData\r\n  }\r\n  _getConfigFromConfigPage = () => {\r\n    const configPage = this.props.configPage || {}\r\n    const config = configPage.Config || {}\r\n    return config\r\n  }\r\n  render() {\r\n    const { tasks } = this.state\r\n    const configFromConfigPage = this._getConfigFromConfigPage()\r\n    // console.warn(\"render\", this.props, configFromConfigPage.showAssignTo)\r\n    return (\r\n      <WrapLayout>\r\n        <div\r\n          className=\"a-header\"\r\n          style={\r\n            configFromConfigPage.hideHeader === true ? { display: \"none\" } : {}\r\n          }\r\n        >\r\n          <div className=\"a-left\">\r\n            <div className=\"a-title\">My Tasks</div>\r\n          </div>\r\n          <div className=\"a-right\">\r\n            {/* <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                window.location.href = \"/pj\"\r\n              }}\r\n            >\r\n              Projects\r\n            </button> */}\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                MyModal.showFromMyUI(\r\n                  {\r\n                    type: \"prj_dailytask\",\r\n                    fnList: {\r\n                      reloadTasks: () => {\r\n                        this.requestTasks()\r\n                      },\r\n                    },\r\n                  },\r\n                  {\r\n                    title: \"Report Task\",\r\n                    size: \"xl\",\r\n                    backdrop: \"static\",\r\n                  }\r\n                )\r\n              }}\r\n            >\r\n              <i className=\"fa fa-file-text-o\" /> Report Task\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                MyModal.showFromMyUI(\r\n                  {\r\n                    type: \"prj_new_task\",\r\n                    data: {},\r\n                    fnList: {\r\n                      getCanEdit: () => {\r\n                        return true\r\n                      },\r\n                      getOptions: () => {\r\n                        return this.state.options\r\n                      },\r\n                      reloadTasks: () => {\r\n                        this.requestTasks()\r\n                      },\r\n                    },\r\n                  },\r\n                  {\r\n                    title: \"New Task\",\r\n                  }\r\n                )\r\n              }}\r\n            >\r\n              <i className=\"fa fa-plus\" /> New Task\r\n            </button>\r\n            <BtnSet />\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                MyModal.showFromMyUI(\r\n                  {\r\n                    type: \"prj_task_user_setting\",\r\n                    data: {},\r\n                  },\r\n                  {\r\n                    title: \"User Setting\",\r\n                  }\r\n                )\r\n              }}\r\n            >\r\n              <i className=\"fa fa-cog\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"a-body\">\r\n          <div className=\"a-filter\">\r\n            <MPPRJTasksFilters\r\n              fnList={{\r\n                reloadTasks: ({ filters } = {}) => {\r\n                  //eslint-disable-next-line\r\n                  this.state.filters = filters || {}\r\n                  //eslint-disable-next-line\r\n                  this.state.pagination.Page = 1\r\n                  this.requestTasks()\r\n                },\r\n                getOptions: () => {\r\n                  return this.state.options\r\n                },\r\n              }}\r\n            />\r\n            <div style={{ marginLeft: \"1rem\" }}>\r\n              <div class=\"form-check form-switch\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"cbAssignByMe\"\r\n                  defaultChecked={this.state.assignByMe}\r\n                  onChange={ev => {\r\n                    this.setState(\r\n                      {\r\n                        assignByMe: ev.currentTarget.checked,\r\n                        pagination: {\r\n                          Page: 1,\r\n                          PageSize: 20,\r\n                        },\r\n                      },\r\n                      () => {\r\n                        this.requestTasks()\r\n                      }\r\n                    )\r\n                  }}\r\n                />\r\n                <label class=\"form-check-label\" for=\"cbAssignByMe\">\r\n                  Assigned tasks to others (by me)\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {tasks != null && (\r\n            <div className=\"a-tasks\">\r\n              {tasks.length > 0 ? (\r\n                <MyUI\r\n                  type=\"grid\"\r\n                  data={tasks}\r\n                  typeItem=\"prj_task_item\"\r\n                  morePropsItem={{\r\n                    mode: \"list\",\r\n                    showAssignTo: configFromConfigPage.showAssignTo,\r\n                  }}\r\n                  fnList={{\r\n                    onClickItem: v => {\r\n                      console.log(\"onClick item:\", v)\r\n                      MyModal.showFromMyUI(\r\n                        {\r\n                          type: \"prj_task_item\",\r\n                          data: v,\r\n                          mode: \"detail\",\r\n                          fnList: {\r\n                            getCanEdit: () => {\r\n                              return true\r\n                            },\r\n                            getOptions: () => {\r\n                              return this.state.options\r\n                            },\r\n                            afterUpdateData: newData => {\r\n                              for (let k of Object.keys(newData)) {\r\n                                v[k] = newData[k]\r\n                              }\r\n                              this.forceUpdate()\r\n                            },\r\n                            reloadTasks: () => {\r\n                              this.requestTasks()\r\n                            },\r\n                          },\r\n                        },\r\n                        {\r\n                          title: \"Task\",\r\n                          backdrop: \"static\",\r\n                        }\r\n                      )\r\n                    },\r\n                  }}\r\n                />\r\n              ) : (\r\n                <div className=\"a-tasks-empty\">\r\n                  <img\r\n                    src=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\"\r\n                    width={\"120px\"}\r\n                    alt=\"empty\"\r\n                  />\r\n                  <div>You don't have any tasks to show</div>\r\n                  <div>Create new one</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div className=\"a-pagination\">\r\n            <CPagination\r\n              page={this.state.pagination.Page}\r\n              total={this.state.total}\r\n              pageSize={this.state.pagination.PageSize}\r\n              onChangePage={p => {\r\n                this.setState(\r\n                  {\r\n                    pagination: {\r\n                      Page: p,\r\n                      PageSize: this.state.pagination.PageSize,\r\n                    },\r\n                  },\r\n                  () => {\r\n                    this.requestTasks()\r\n                  }\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n          {tasks == null && this.state.loading === true && (\r\n            <div className=\"a-tasks-empty\">\r\n              <Spinner />\r\n              <div>Loading...</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrapLayout = styled.div`\r\n  & > .a-header {\r\n    display: flex;\r\n    // border-bottom: 1px solid #1c4e7e;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.01), 0 4px 4px rgba(0, 0, 0, 0.02),\r\n      0 10px 8px rgba(0, 0, 0, 0.03), 0 15px 15px rgba(0, 0, 0, 0.03);\r\n    & > .a-left {\r\n      & > .a-title {\r\n        font-size: 20px;\r\n      }\r\n    }\r\n    & > .a-right {\r\n      margin-left: auto;\r\n      & > * {\r\n        margin-left: 2px;\r\n      }\r\n    }\r\n  }\r\n  & > .a-body {\r\n    padding: 10px;\r\n    background: white;\r\n    border-radius: 4px;\r\n    & .a-filter {\r\n      margin-bottom: 10px;\r\n      display: flex;\r\n      align-items: center;\r\n      & .form-switch {\r\n        padding-left: 2.5em;\r\n        margin: 0px;\r\n      }\r\n    }\r\n    & .a-tasks-empty {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n      // background: white;\r\n      // border-radius: 10px;\r\n      padding: 2rem;\r\n    }\r\n    & .a-pagination {\r\n      margin-top: 1rem;\r\n      & .page-item.active .page-link {\r\n        background-color: #0082ff;\r\n      }\r\n      & .page-item .page-link {\r\n        border-radius: 0px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default MPDailyTask\r\n","import { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport Tabs from \"react-responsive-tabs\"\r\nimport { HUtils, MyPage } from \"@macashipo/mlib\"\r\nimport { MyModal, MyUI, Popover } from \"src/core/components\"\r\nimport classNames from \"classnames\"\r\nconst TypeFilter = {\r\n  all: \"all\",\r\n  todo: \"todo\",\r\n  doing: \"doing\",\r\n  done: \"done\",\r\n  notdone: \"notdone\",\r\n}\r\nclass MPPRJTasksFilters extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      filters: {},\r\n    }\r\n  }\r\n  componentDidMount() {}\r\n  requestTasks = () => {\r\n    const fnList = this.props.fnList || {}\r\n    HUtils.runFuntion(fnList, \"reloadTasks\", [{ filters: this.state.filters }])\r\n  }\r\n  _getTypeFilter = () => {\r\n    let _filters = this.state.filters || {}\r\n    if (Object.keys(_filters).length == 0) {\r\n      return TypeFilter.all\r\n    } else if (_filters.TaskStatusCode) {\r\n      if (_filters.TaskStatusCode == \"ToDo\") {\r\n        return TypeFilter.todo\r\n      } else if (_filters.TaskStatusCode == \"Done\") {\r\n        return TypeFilter.done\r\n      } else if (_filters.TaskStatusCode == \"Doing\") {\r\n        return TypeFilter.doing\r\n      }\r\n    } else if (_filters.TaskStatusNotDone) {\r\n      return TypeFilter.notdone\r\n    }\r\n    return \"\"\r\n  }\r\n  _clickFilter = type => {\r\n    let _filters = this.state.filters || {}\r\n    if (type == TypeFilter.all) {\r\n      _filters = {}\r\n    } else if (type == TypeFilter.todo) {\r\n      _filters.TaskStatusCode = \"ToDo\"\r\n      delete _filters.TaskStatusNotDone\r\n    } else if (type == TypeFilter.done) {\r\n      _filters.TaskStatusCode = \"Done\"\r\n      delete _filters.TaskStatusNotDone\r\n    } else if (type == TypeFilter.doing) {\r\n      _filters.TaskStatusCode = \"Doing\"\r\n      delete _filters.TaskStatusNotDone\r\n    } else if (type == TypeFilter.notdone) {\r\n      delete _filters.TaskStatusCode\r\n      _filters.TaskStatusNotDone = true\r\n    }\r\n    this.setState(\r\n      {\r\n        filters: _filters,\r\n      },\r\n      () => {\r\n        this.requestTasks()\r\n      }\r\n    )\r\n  }\r\n  render() {\r\n    var status = [\r\n      { value: TypeFilter.all, name: \"All\" },\r\n      { value: TypeFilter.todo, name: \"ToDo\" },\r\n      { value: TypeFilter.doing, name: \"Doing\" },\r\n      { value: TypeFilter.done, name: \"Done\" },\r\n      { value: TypeFilter.notdone, name: \"Not Done\" },\r\n    ]\r\n    if (this.props.mini === true) {\r\n      status = [\r\n        { value: TypeFilter.all, name: \"All\" },\r\n        { value: TypeFilter.notdone, name: \"Not Done\" },\r\n      ]\r\n    }\r\n    let _showFilterProject = false\r\n    let _options = HUtils.runFuntion(this.props.fnList, \"getOptions\", [])\r\n    if (_options && _options.ProjectList && _options.ProjectList.length > 0) {\r\n      _showFilterProject = true\r\n    }\r\n    console.log(\"_showFilterProject project:\", _options)\r\n    return (\r\n      <WrapLayout>\r\n        {status.map((v, i) => {\r\n          return (\r\n            <div\r\n              key={i}\r\n              className={classNames({\r\n                \"a-active\": this._getTypeFilter() == v.value,\r\n              })}\r\n              onClick={() => {\r\n                this._clickFilter(v.value)\r\n              }}\r\n            >\r\n              {v.name}\r\n            </div>\r\n          )\r\n        })}\r\n        {_showFilterProject === true && (\r\n          <Popover\r\n            overlay={propsOverlay => {\r\n              return (\r\n                <MyUI\r\n                  type=\"select_box_search_v2\"\r\n                  sourceData={_options?.ProjectList}\r\n                  valueSelected={this.state.filters?.ProjectId}\r\n                  onChange={itemOption => {\r\n                    console.warn(\"onChange:\", itemOption, itemOption.Value)\r\n                    let _filters = this.state.filters || {}\r\n                    _filters.ProjectId = itemOption.Value\r\n                    _filters.ProjectId_Text = itemOption.Text\r\n                    this.setState(\r\n                      {\r\n                        filters: _filters,\r\n                      },\r\n                      () => {\r\n                        propsOverlay.hide && propsOverlay.hide()\r\n                        this.requestTasks()\r\n                      }\r\n                    )\r\n                  }}\r\n                />\r\n              )\r\n            }}\r\n            overlayClassName=\"m-popover\"\r\n            placement=\"bottom\"\r\n            destroyTooltipOnHide={true}\r\n          >\r\n            <div\r\n              className={classNames(\"a-pick-project\", {\r\n                \"a-active\": this.state.filters.ProjectId != null,\r\n              })}\r\n            >\r\n              {this.state.filters && this.state.filters.ProjectId\r\n                ? `${this.state.filters.ProjectId_Text}`\r\n                : \"Chọn Project\"}\r\n            </div>\r\n          </Popover>\r\n        )}\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\nconst WrapLayout = styled.div`\r\n  display: flex;\r\n  & > div {\r\n    background: white;\r\n    padding: 0 8px;\r\n    font-size: 12px;\r\n    border: 1px solid #9f9f9f;\r\n    border-radius: 10px;\r\n    height: 20px;\r\n    margin-right: 2px;\r\n    cursor: pointer;\r\n    color: #9f9f9f;\r\n    &.a-active {\r\n      background: #2fa4e7;\r\n      color: white;\r\n      border: 1px solid #0673b1;\r\n    }\r\n  }\r\n`\r\nexport default MPPRJTasksFilters\r\n","/* eslint-disable */\r\nimport { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { HUtils, MyPage } from \"@macashipo/mlib\"\r\nimport classNames from \"classnames\"\r\nclass CPagination extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  componentDidMount() {}\r\n  onChangePage = page => {\r\n    const { onChangePage } = this.props\r\n    if (onChangePage) {\r\n      onChangePage(page)\r\n    }\r\n  }\r\n  render() {\r\n    const { page, total, pageSize } = this.props\r\n    if (total == 0 || pageSize <= 0) {\r\n      return <div></div>\r\n    }\r\n    var countPage = parseInt(total / pageSize)\r\n    if (total % pageSize > 0) {\r\n      countPage += 1\r\n    }\r\n    if (countPage < 2) {\r\n      return <div></div>\r\n    }\r\n    return (\r\n      <WrapLayout>\r\n        <nav>\r\n          <ul className=\"pagination justify-content-center\">\r\n            <li className={classNames(\"page-item\", { disabled: page < 2 })}>\r\n              <a\r\n                className=\"page-link\"\r\n                href=\"#\"\r\n                onClick={ev => {\r\n                  ev.preventDefault()\r\n                  this.onChangePage(page - 1)\r\n                }}\r\n              >\r\n                <i className=\"fa fa-chevron-left\" />\r\n              </a>\r\n            </li>\r\n            {new Array(countPage).fill(1).map((v, i) => {\r\n              return (\r\n                <li\r\n                  className={classNames(\"page-item\", {\r\n                    active: page == i + 1,\r\n                  })}\r\n                  key={i}\r\n                >\r\n                  <a\r\n                    className=\"page-link\"\r\n                    href=\"#\"\r\n                    onClick={ev => {\r\n                      ev.preventDefault()\r\n                      this.onChangePage(i + 1)\r\n                    }}\r\n                  >\r\n                    {i + 1}\r\n                  </a>\r\n                </li>\r\n              )\r\n            })}\r\n            <li\r\n              className={classNames(\"page-item\", {\r\n                disabled: page >= countPage,\r\n              })}\r\n            >\r\n              <a\r\n                className=\"page-link\"\r\n                href=\"#\"\r\n                onClick={ev => {\r\n                  ev.preventDefault()\r\n                  this.onChangePage(page + 1)\r\n                }}\r\n              >\r\n                <i className=\"fa fa-chevron-right\" />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\nconst WrapLayout = styled.div``\r\nexport default CPagination\r\n","import { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport { HFormat, HUtils } from \"@macashipo/mlib\"\r\nimport { MyModal } from \"src/core/components\"\r\nimport { Animated } from \"react-animated-css\"\r\nimport classNames from \"classnames\"\r\nclass MUIPJAPI extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: false,\r\n      data: null,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.requestList()\r\n    SharedSET.reloadBtn = () => {\r\n      if (SharedSET.data) {\r\n        this.setState({\r\n          data: SharedSET.data,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  requestList = () => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"/api/v1/TimeTrackingSystem_Mine\",\r\n            name: \"List\",\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            console.log(\"res:\", response)\r\n            let _data = []\r\n            if (response.Data && response.Data.Data) {\r\n              _data = response.Data.Data\r\n            }\r\n            this.setState(\r\n              {\r\n                data: _data,\r\n                loading: false,\r\n              },\r\n              () => {\r\n                SharedSET.data = _data\r\n              }\r\n            )\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({\r\n              loading: false,\r\n            })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const data = this.state.data\r\n    const showWarning = data != null && data.length == 0\r\n    if (this.state.loading) {\r\n      return (\r\n        <button\r\n          disabled\r\n          className={classNames(\"btn btn-primary\")}\r\n          onClick={() => {}}\r\n        >\r\n          <i className=\"fa fa-spin fa-spinner\" /> SET\r\n        </button>\r\n      )\r\n    }\r\n    return (\r\n      <button\r\n        className={classNames(\"btn btn-primary\", {\r\n          \"btn-warning ani-heartBeat ani-run infinite\": showWarning,\r\n        })}\r\n        onClick={() => {\r\n          MyModal.showFromMyUI(\r\n            {\r\n              type: \"prj_set\",\r\n              data: {},\r\n            },\r\n            {\r\n              title: \"SET\",\r\n            }\r\n          )\r\n        }}\r\n      >\r\n        <i className=\"fa fa-sign-in\" /> SET\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nconst SharedSET = {\r\n  data: null,\r\n  reloadBtn: null,\r\n}\r\nexport { SharedSET }\r\nexport default MUIPJAPI\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;"],"sourceRoot":""}