{"version":3,"sources":["modules/adminpanel/MyUI/Types/file_btn_uploadfromggdrivefolder.js","modules/adminpanel/MyUI/Types/file_manager.js","helpers/Paste.js","services/apiUpload.js"],"names":["UIContentPopover","props","React","useState","link","setLink","isLoading","setIsLoading","fnList","requestData","configItem","console","warn","style","position","type","className","value","onChange","v","attrs","placeholder","Button","color","marginTop","onClick","apiGeneric","method","url","fnListMyPage","fnGetApiPath","data","GGDriveFolderURL","then","r","Data","fnListFilesManager","onAfterAddFolderGGDrive","fnListPopover","hidePopover","catch","err","MUIFileBtnUpload","overlay","propsOverlay","overlayClassName","placement","destroyTooltipOnHide","marginLeft","Wrap","styled","div","FHelpers","cbSuccess","cbError","files","apiUpload","timeout","customHeader","MUIFileManager","configFile","photos","setPhotos","isUploading","setIsUploading","configs","setConfigs","numCol","showUploadFromGGDrive","pasteAsFile","canUploadFiles","canUpload","fnGetPhotos","Configs","Photos","onDrop","useCallback","acceptedFiles","onChangeData","useDropzone","getRootProps","getInputProps","isDragActive","open","useEffect","HPaste","addEventUploadFileAfterPaste","addEventPaste","removeEventUploadFileAfterPaste","removeEvenPaste","e","stopPropagation","display","canDelete","rData","_fieldName","FieldName","hasOwnProperty","fnListModal","hideModal","maxHeight","overflow","length","typeItem","onAfterDeleteItem","itemDelete","PasteHelper","fnUpload","fnPatse","preventDefault","items","clipboardData","_files","i","item","log","kind","_file","getAsFile","push","text","originalEvent","getData","window","document","execCommand","checkPasteSupported","el","createElement","setAttribute","onpaste","removeEventListener","addEventListener","copyTextToClipboard","navigator","clipboard","writeText"],"mappings":"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","file":"static/js/70.8370bbd8.chunk.js","sourcesContent":["import { MyBase, MyLoading } from \"@macashipo/mlib\"\r\nimport React from \"react\"\r\nimport { Button } from \"reactstrap\"\r\nimport { Popover } from \"src/core/components\"\r\nimport {\r\n  fnListFilesManager,\r\n  fnListMyPage,\r\n  fnListPopover,\r\n} from \"src/helpers/fnList\"\r\nimport apiGeneric from \"src/services/apiGeneric\"\r\nfunction UIContentPopover(props) {\r\n  const [link, setLink] = React.useState(\"\")\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const { fnList } = props\r\n  const configItem = props.configItem || {}\r\n  const { requestData } = configItem\r\n  console.warn(\"render form upload:\", props)\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <MyBase\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        value={link}\r\n        onChange={v => {\r\n          setLink(v)\r\n        }}\r\n        attrs={{\r\n          placeholder: \"Link folder google drive\",\r\n        }}\r\n      />\r\n      <Button\r\n        color=\"primary\"\r\n        style={{ marginTop: \"10px\" }}\r\n        onClick={() => {\r\n          console.warn(\"submit\", link, fnList)\r\n          setIsLoading(true)\r\n          apiGeneric({\r\n            method: \"POST\",\r\n            url: `${fnListMyPage.fnGetApiPath(fnList)}/InsertImagesFromGGDrive`,\r\n            data: {\r\n              ...requestData,\r\n              GGDriveFolderURL: link,\r\n            },\r\n          })\r\n            .then(r => {\r\n              console.warn(\"r:\", r)\r\n              if (r.Data) {\r\n                //rData la data row\r\n                fnListFilesManager.onAfterAddFolderGGDrive(fnList, [r.Data])\r\n              }\r\n              setIsLoading(false)\r\n              fnListPopover.hidePopover(fnList)\r\n            })\r\n            .catch(err => {\r\n              console.warn(\"err:\", err)\r\n              setIsLoading(false)\r\n            })\r\n        }}\r\n      >\r\n        Upload\r\n      </Button>\r\n      {isLoading === true && (\r\n        <div className=\"a-overlay a-flex-center\">\r\n          <MyLoading />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default function MUIFileBtnUpload(props) {\r\n  return (\r\n    <Popover\r\n      overlay={propsOverlay => {\r\n        return (\r\n          <UIContentPopover\r\n            {...props}\r\n            fnList={{\r\n              ...props.fnList,\r\n              ...propsOverlay,\r\n            }}\r\n          />\r\n        )\r\n      }}\r\n      overlayClassName=\"m-popover\"\r\n      placement=\"bottomLeft\"\r\n      destroyTooltipOnHide={true}\r\n    >\r\n      <Button color=\"primary\" onClick={() => {}} style={{ marginLeft: \"5px\" }}>\r\n        Upload from GGDrive\r\n      </Button>\r\n    </Popover>\r\n  )\r\n}\r\n","import { MyUI } from \"@macashipo/mlib\"\r\nimport React from \"react\"\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { Button } from \"reactstrap\"\r\nimport { fnListModal } from \"src/helpers/fnList\"\r\nimport HPaste from \"src/helpers/Paste\"\r\nimport apiGeneric from \"src/services/apiGeneric\"\r\nimport apiUpload from \"src/services/apiUpload\"\r\nimport styled from \"styled-components\"\r\nimport MUIFileBtnUpload from \"./file_btn_uploadfromggdrivefolder\"\r\n\r\nconst Wrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  & .a-overlaydrop {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #e9e9e9;\r\n    color: #323232;\r\n    border: 2px dashed grey;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    opacity: 0.9;\r\n  }\r\n  & > div.a-body {\r\n    & .a-nophotos {\r\n      min-height: 200px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  }\r\n  & > div.a-header {\r\n    display: flex;\r\n    border-bottom: 1px solid #e9ecef;\r\n    margin-bottom: 5px;\r\n    padding-bottom: 5px;\r\n  }\r\n`\r\nconst FHelpers = {\r\n  getPhotos: ({ requestData, cbSuccess, cbError }) => {\r\n    apiGeneric({\r\n      method: \"POST\",\r\n      url: \"ProjectPhoto/GetPhotos\",\r\n      data: requestData,\r\n    })\r\n      .then(r => {\r\n        console.warn(\"r:\", r)\r\n        if (cbSuccess) {\r\n          cbSuccess(r)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.warn(\"err:\", err)\r\n        if (cbError) {\r\n          cbError(err)\r\n        }\r\n      })\r\n  },\r\n  uploadFiles: ({ files, requestData, cbSuccess, cbError }) => {\r\n    apiUpload({\r\n      method: \"UPLOAD\",\r\n      url: \"ProjectPhoto/Upload\",\r\n      files: files,\r\n      timeout: 0,\r\n      customHeader: { ...requestData },\r\n    })\r\n      .then(r => {\r\n        console.warn(\"r:\", r)\r\n        if (cbSuccess) {\r\n          cbSuccess(r)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.warn(\"err:\", err)\r\n        if (cbError) {\r\n          cbError(err)\r\n        }\r\n      })\r\n  },\r\n}\r\nexport default function MUIFileManager(props) {\r\n  const configFile = props.configFile || {}\r\n  const [photos, setPhotos] = React.useState([])\r\n  const [isUploading, setIsUploading] = React.useState(false)\r\n  const [configs, setConfigs] = React.useState({\r\n    ...configFile,\r\n  })\r\n  const { numCol, showUploadFromGGDrive, pasteAsFile } = configs\r\n  const canUploadFiles = props.canUpload\r\n  const canDeleteItem = true\r\n  const { requestData, fnList } = props\r\n  const fnGetPhotos = () => {\r\n    FHelpers.getPhotos({\r\n      requestData: { ...requestData },\r\n      cbSuccess: r => {\r\n        if (r && r.Data) {\r\n          if (r.Data.Configs) {\r\n            setConfigs({ ...configs, ...r.Data.Configs })\r\n          }\r\n          if (r.Data.Photos) {\r\n            setPhotos(r.Data.Photos)\r\n          }\r\n        }\r\n      },\r\n    })\r\n  }\r\n  const onDrop = React.useCallback(acceptedFiles => {\r\n    // Do something with the files\r\n    console.warn(\"onDrop:\", acceptedFiles)\r\n    if (canUploadFiles) {\r\n      setIsUploading(true)\r\n      FHelpers.uploadFiles({\r\n        files: acceptedFiles,\r\n        requestData,\r\n        cbSuccess: r => {\r\n          console.warn(\"Update OK\", r)\r\n          setIsUploading(false)\r\n          fnGetPhotos()\r\n          if (fnList && fnList.onChangeData) {\r\n            fnList.onChangeData(r.Data)\r\n          }\r\n        },\r\n        cbError: () => {\r\n          setIsUploading(false)\r\n        },\r\n      })\r\n    }\r\n  }, [])\r\n  const { getRootProps, getInputProps, isDragActive, open } = useDropzone({\r\n    onDrop,\r\n  })\r\n  React.useEffect(() => {\r\n    console.warn(\"firstload\", props)\r\n    fnGetPhotos()\r\n    if (pasteAsFile == true) {\r\n      HPaste.addEventUploadFileAfterPaste(files => {\r\n        onDrop(files)\r\n      })\r\n      HPaste.addEventPaste()\r\n    }\r\n    return () => {\r\n      //unmount\r\n      console.warn(\"unmount file manager\")\r\n      HPaste.removeEventUploadFileAfterPaste()\r\n      HPaste.removeEvenPaste()\r\n    }\r\n  }, [])\r\n  // console.warn(\"render file manager:\", photos, props, \"configs:\", configs)\r\n  return (\r\n    <Wrap\r\n      className=\"mpat-file_manager\"\r\n      {...getRootProps()}\r\n      onClick={e => {\r\n        e.stopPropagation()\r\n      }}\r\n    >\r\n      <input {...getInputProps()} style={{ display: \"none\" }} />\r\n      <div className=\"a-header\">\r\n        {canUploadFiles && (\r\n          <div>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                console.warn(\"click\", open)\r\n                open()\r\n              }}\r\n            >\r\n              Upload\r\n            </Button>\r\n            {showUploadFromGGDrive === true && (\r\n              <MUIFileBtnUpload\r\n                {...props}\r\n                configItem={{\r\n                  canDelete: canUploadFiles && canDeleteItem,\r\n                  requestData,\r\n                }}\r\n                fnList={{\r\n                  ...fnList,\r\n                  onAfterAddFolderGGDrive: rData => {\r\n                    let _fieldName = \"\"\r\n                    console.warn(\"onAfterAddFolderGGDrive\", rData, requestData)\r\n                    if (requestData.FieldName) {\r\n                      _fieldName = requestData.FieldName\r\n                      if (rData[_fieldName]) {\r\n                        //update row\r\n                        if (fnList && fnList.onChangeData) {\r\n                          fnList.onChangeData(rData[_fieldName])\r\n                        }\r\n                        //update photos\r\n                        if (rData[_fieldName].hasOwnProperty(\"Photos\")) {\r\n                          setPhotos(rData[_fieldName].Photos || [])\r\n                        }\r\n                      }\r\n                    }\r\n                  },\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        <div style={{ marginLeft: \"auto\" }}>\r\n          <Button\r\n            onClick={() => {\r\n              fnListModal.hideModal(fnList)\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"a-body\"\r\n        style={{ maxHeight: \"calc(100vh - 9rem)\", overflow: \"hidden\" }}\r\n      >\r\n        <PerfectScrollbar>\r\n          <div style={{ maxHeight: \"calc(100vh - 9rem)\" }}>\r\n            {photos && photos.length > 0 ? (\r\n              <MyUI\r\n                type=\"grid\"\r\n                typeItem=\"file_manager_item\"\r\n                configItem={{\r\n                  canDelete: canUploadFiles && canDeleteItem,\r\n                  requestData,\r\n                }}\r\n                fnList={{\r\n                  ...fnList,\r\n                  onAfterDeleteItem: (itemDelete, rData) => {\r\n                    if (rData.hasOwnProperty(\"Photos\")) {\r\n                      setPhotos(rData.Photos || [])\r\n                    }\r\n                    if (fnList && fnList.onChangeData) {\r\n                      fnList.onChangeData(rData)\r\n                    }\r\n                  },\r\n                }}\r\n                data={photos}\r\n                numCol={numCol}\r\n              />\r\n            ) : (\r\n              <div className=\"a-nophotos\">No Photos</div>\r\n            )}\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </div>\r\n      {canUploadFiles && (isDragActive === true || isUploading === true) && (\r\n        <div className=\"a-overlaydrop\">\r\n          {isUploading === false && <div> Drop the files here ...</div>}\r\n          {isUploading === true && <div> Uploading...</div>}\r\n        </div>\r\n      )}\r\n      <div className=\"a-footer\"></div>\r\n    </Wrap>\r\n  )\r\n}\r\n","const PasteHelper = {\r\n  fnUpload: null,\r\n  fnPatse: function (e) {\r\n    e.preventDefault()\r\n    console.warn(`paste:`, e)\r\n    var items = e.clipboardData.items\r\n    console.warn(`paste items:`, items)\r\n    let _files = []\r\n    if (items) {\r\n      for (var i = 0; i < items.length; i++) {\r\n        var item = items[i]\r\n        console.log(\"Paste Item type: \" + item.type, item.kind)\r\n        if (item.kind == \"file\") {\r\n          let _file = item.getAsFile()\r\n          _files.push(_file)\r\n          console.log(\"Paste Item file: \" + item, _file)\r\n        } else {\r\n          const text = (e.originalEvent || e).clipboardData.getData(\r\n            \"text/plain\"\r\n          )\r\n          //ko biet vi sao an di - 28/12/2021 - mo lai - bo sung check null\r\n          if (window.document.execCommand) {\r\n            window.document.execCommand(\"insertText\", false, text)\r\n          }\r\n          console.log(`paste text:`, text)\r\n        }\r\n      }\r\n      console.log(`PasteHelper.fnUpload:`, PasteHelper.fnUpload)\r\n      if (PasteHelper.fnUpload && _files.length > 0) {\r\n        PasteHelper.fnUpload(_files)\r\n      }\r\n    }\r\n  },\r\n  checkPasteSupported() {\r\n    var el = document.createElement(\"div\")\r\n    el.setAttribute(\"onpaste\", \"return;\")\r\n    return typeof el.onpaste == \"function\"\r\n  },\r\n  addEventUploadFileAfterPaste: function (fnUpload) {\r\n    PasteHelper.fnUpload = fnUpload\r\n  },\r\n  removeEventUploadFileAfterPaste: function () {\r\n    PasteHelper.fnUpload = null\r\n  },\r\n  removeEvenPaste: function () {\r\n    window.removeEventListener(\"paste\", PasteHelper.fnPatse, false)\r\n  },\r\n  addEventPaste: function () {\r\n    window.addEventListener(\"paste\", PasteHelper.fnPatse, false)\r\n  },\r\n  copyTextToClipboard(text, cbSuccess) {\r\n    if (\r\n      navigator &&\r\n      navigator.clipboard &&\r\n      navigator.clipboard.writeText &&\r\n      text\r\n    ) {\r\n      navigator.clipboard.writeText(text).then(() => {\r\n        if (cbSuccess) {\r\n          cbSuccess()\r\n        }\r\n      })\r\n    }\r\n  },\r\n}\r\nexport default PasteHelper\r\n","import { apiUpload } from \"src/core/helpers/api\"\r\nexport default apiUpload\r\n"],"sourceRoot":""}