{"version":3,"sources":["modules/adminpanel/hooks/fnListOfMyPage.js","modules/adminpanel/hooks/useConfigPage.js"],"names":["fnListOfMyPage","props","onePage","configPage","_fnList","fnList","console","warn","ScreenCode","ApiController","APIName","kfnUpdatePageTitle","title","window","document","HCF","getCF","kfnGetApiPath","kfnGetScreenCode","kfnGetOnePage","kgetDataList","getDataList","kfnGetOptions","getDataOptions","kfnGetDataTotal","kfnGetExtraDataTable","getDataExtraData","kgetSourceList","getSourceList","kfnHandleSearchText","textSearch","handleSearch","_oneScreenConfig","_table","hasPagingRemote","requestList","isChangePage","kfnLoadLocalFilter","cb","_manualFilterOuts","_key","_filerByKey","_localFilter","HLocalStorage","getObj","Object","keys","k","filter","value","push","length","_oneFilters","updateCurrentFiters","_filterList","j","_itemControl","_fieldName","fieldName","currentValue","currentFilter","finish","kfnGetConfigChart","_dataOptions","ChartConfig","_chartConfig","Config","fnListMyPage","fnGetConfigPagePage","KConfigPagePage","configChart","kfnGetDataTableFilterd","kfnGetDataTable","kfnGetComponentTable","kfnGetConfigPageScreenConfig","key","df","info","HUtils","has","_objScreenConfig","get","kfnGetConfigPageHeader","_header","hasOwnProperty","kfnGetConfigPageTable","kfnGetConfigPageDetail","_detail","kfnGetConfigPageFilter","_filter","kfnGetConfigPagePage","kgetTabsIndexSelected","_index","_currentTabLevel","getTabLevel","_currentTabIdInUrl","HLink","getParameterByName","_needUpdateUrl","indexOf","replace","_arrTabId","split","_isMatch","Contents","forEach","tab","index","Id","updateParamOnUrl","join","konChangeTab","_tabId","kgetTabLevel","_tabLevel","_tabLevelParent","HIs","isNumber","kfnGetSharedRequestData","opts","_query","V","Page_GetSharedQueryOfPage","match","fnListOfParent","queryFilter","getQueryFilterServer","moreQuery","from","M_addItemToArrayOrCreateNewArray","getRequestData","fnGetSharedRequestData","apiController","cbSuccess","cbError","requestData","row","newValue","fnCustomUpdateField","ApiGeneric","method","url","data","RequestData","fromApiName","KApiName","UpdateFields","Values","FieldName","NewValue","then","v","log","Data","KConfigInRow","_UI_NeedUpdateUI","mergeObjIfExist","catch","e","kfnGetButtonList","_moreButtonsPrefix","_moreButtons","fnGetConfigPageHeader","KConfigPageHeader","showAddNew","OneButton","configButton","Type","hasSwitchView","getButtonsList","kfnChangeSwitchView","type","config","forceUpdateUI","kfnGetCurrentSwitchView","_configPage","_list","listSwitchView","_defaultSwitchView","defaultSwitchView","list","defaut","kFnConvertUIType","APHelper","kUI_FirstLoad","kUI_IsInDetail","kUI_IsInModal","kUI_NeedCallOptionsForContents","kUI_NeedShowLoading","kUI_LoadedOptions","kUI_LoadOptionError","kUI_CountRequestOptions","kUI_CountRequestList","kUI_LoadedList","kUI_TableCols","convertUITypeAllContents","contents","fnConvertUIType","i","requestOptionsForContents","forceUpdate","ScreenGUID","requestOptions","requestCustom","apiPath","apiName","requestAddNew","requestDelete","countForceUpdate","useConfigPage","needContents","needOptions","needList","configPageExt","React","useRef","refOnePage","OnePage","refCountRequestList","refCountReloadList","current","configPageExtCurrent","refFnList","fnRequestDelete","fnGetSourceDataWithKey","optionKey","useForceUpdate","onForceUpdateUI","fnRequestAddNew","withoutQueryFilter","fnRequestCustom","onReloadList","fnReloadList","onReloadPage","location","reload","onShowDialog","component","fnListUI","fnshowDialog","msg","openExternalUrl","link","target","openUrl","fnForceUpdateTable","onUpdateRow","newRow","fnGetTableConfig","defaultValue","fnHandleFilterSaveLocal","listFilterControl","_filterListControl","getScreenCode","_dataLocal","_item","_f","saveObj","fnHandleFilterTableBootstrap","filterObj","filterOuts","handleFilterData","_filerObj","_filterOuts","item","isServer","valueFilterClient","fnHandleFilterAll","withoutServer","needRequestServerAfterFilter","_configPagination","_pageCurrent","_pageStart","isFirst","isReload","isChangeSort","isRebuildTable","_currentSearchText","_requestMore","kRequestFromClient","UI_TextSearch","getQueryPagination","getQuerySort","response","_msgShowInUI","MsgShowInUI","parseListAndExtraData","DataTotal","_dataList","buildColsAfterReloadList","Table_BuildCols","fnLoadLocalFilter","fnDeleteItem","_data","splice","fnGetTableCols","fnGetIsInTableExpand","fnGetIsInModal","fnUpdatePageTitle","Title","afterChangeFilter","listFilter","afterChange","afterChangeSort","error","parseOptions","FlowUpdateSizeOfPageFromLocal","countReloadList","showLoading","errorMsg","getTabs","map","getContent","renderLoading","renderError","onSearch","fnHandleSearchText","applyClientData","options","updateComponentTable","c","runFuntion","handleFilter","handleClearFilter","itemFilterOut","clear","localStorage","removeItem"],"mappings":"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","file":"static/js/2.4a722f3f.chunk.js","sourcesContent":["import {\r\n  HCF,\r\n  HLocalStorage,\r\n  HLink,\r\n  HIs,\r\n  HUtils,\r\n  OneButton,\r\n} from \"@macashipo/mlib\"\r\nimport {\r\n  fnListMyPage,\r\n  KConfigPageHeader,\r\n  KConfigPagePage,\r\n  kfnGetApiPath,\r\n  kfnGetConfigPageScreenConfig,\r\n  kfnGetConfigPageHeader,\r\n  kfnGetConfigPageTable,\r\n  kfnGetConfigPageDetail,\r\n  kfnGetConfigPageFilter,\r\n  kfnGetConfigPagePage,\r\n  kfnGetScreenCode,\r\n  kfnHandleSearchText,\r\n  kfnLoadLocalFilter,\r\n  kfnUpdatePageTitle,\r\n  kgetSourceList,\r\n  kgetTabsIndexSelected,\r\n  konChangeTab,\r\n  kgetTabLevel,\r\n  kgetDataList,\r\n  kfnGetOnePage,\r\n  kfnGetSharedRequestData,\r\n  kfnGetConfigChart,\r\n  kfnGetOptions,\r\n  kfnGetExtraDataTable,\r\n  kfnGetDataTableFilterd,\r\n  kfnGetDataTable,\r\n  kfnGetComponentTable,\r\n  kfnChangeSwitchView,\r\n  kfnGetCurrentSwitchView,\r\n  kfnGetButtonList,\r\n  kfnGetDataTotal,\r\n} from \"src/helpers/fnList\"\r\nimport ApiGeneric from \"src/services/apiGeneric\"\r\nimport V from \"src/helpers/V\"\r\nimport { KApiName } from \"src/helpers/K\"\r\nimport { KConfigInRow } from \"src/helpers/Flows/TableCell\"\r\nconst kfnRequestUpdate = \"fnRequestUpdate\"\r\nconst fnListOfMyPage = {\r\n  init({ props, onePage, configPage }) {\r\n    let _fnList = {\r\n      ...props.fnList,\r\n    }\r\n    console.warn(\"fnList\", props.fnList)\r\n    const ScreenCode = configPage.ScreenCode\r\n    const ApiController = configPage.APIName\r\n    // const more = oneTableCell.more\r\n    // _fnList[kfnGetApiPath] = () => {\r\n    //   return HUtils.runFuntion(oneTableCell.fnList, kfnGetApiPath, [])\r\n    // }\r\n    _fnList[kfnUpdatePageTitle] = title => {\r\n      window.document.title = `${title} - ${HCF.getCF(\"title\")}`\r\n    }\r\n    _fnList[kfnGetApiPath] = () => {\r\n      return ApiController\r\n    }\r\n    _fnList[kfnGetScreenCode] = () => {\r\n      return ScreenCode\r\n    }\r\n    _fnList[kfnGetOnePage] = () => {\r\n      return onePage\r\n    }\r\n    _fnList[kgetDataList] = () => {\r\n      return onePage.getDataList()\r\n    }\r\n    _fnList[kfnGetOptions] = () => {\r\n      return onePage.getDataOptions()\r\n    }\r\n    _fnList[kfnGetDataTotal] = () => {\r\n      return onePage[\"_dataTotal\"]\r\n    }\r\n    _fnList[kfnGetExtraDataTable] = () => {\r\n      return onePage.getDataExtraData()\r\n    }\r\n    _fnList[kgetSourceList] = () => {\r\n      return onePage.getSourceList()\r\n    }\r\n    _fnList[kfnHandleSearchText] = textSearch => {\r\n      // console.info(\r\n      //   kfnHandleSearchText,\r\n      //   textSearch,\r\n      //   onePage[\"_componentTable\"],\r\n      //   onePage\r\n      // )\r\n      if (\r\n        onePage[\"_componentTable\"] &&\r\n        onePage[\"_componentTable\"].handleSearch\r\n      ) {\r\n        onePage[\"_currentSearchText\"] = textSearch\r\n        onePage[\"_componentTable\"].handleSearch(textSearch)\r\n        //check remote search\r\n        if (onePage._oneScreenConfig._table.hasPagingRemote) {\r\n          _fnList.requestList &&\r\n            _fnList.requestList({\r\n              isChangePage: true,\r\n            })\r\n        }\r\n      }\r\n    }\r\n    _fnList[kfnLoadLocalFilter] = cb => {\r\n      // console.info(kfnLoadLocalFilter, onePage, ScreenCode)\r\n      onePage._manualFilterOuts = []\r\n      if (ScreenCode) {\r\n        let _key = `${ScreenCode}_ad-filter`\r\n        let _filerByKey = {}\r\n        let _localFilter = HLocalStorage.getObj(_key, null)\r\n        if (_localFilter) {\r\n          let _keys = Object.keys(_localFilter)\r\n          for (let k of _keys) {\r\n            if (_localFilter[k] && _localFilter[k].filter) {\r\n              _filerByKey[k] = _localFilter[k].filter\r\n              //check value empty, need remove\r\n              if (\r\n                _filerByKey[k] &&\r\n                (_filerByKey[k].value === \"\" || _filerByKey[k].value === null)\r\n              ) {\r\n                delete _filerByKey[k]\r\n                continue\r\n              }\r\n              onePage._manualFilterOuts.push(_localFilter[k].filter)\r\n            }\r\n          }\r\n        }\r\n        //update oneFilter truoc de goi request list voi local saved\r\n        if (Object.keys(_filerByKey).length > 0) {\r\n          onePage._oneFilters.updateCurrentFiters(_filerByKey)\r\n        }\r\n        //sau khi co filterList, update currentFilter, currentValue\r\n        if (\r\n          onePage._filterList &&\r\n          onePage._filterList.length > 0 &&\r\n          Object.keys(_filerByKey).length > 0\r\n        ) {\r\n          for (let j = 0; j < onePage._filterList.length; j++) {\r\n            let _itemControl = onePage._filterList[j]\r\n            let _fieldName = _itemControl.fieldName\r\n            if (\r\n              _filerByKey[_fieldName] &&\r\n              _fieldName === _filerByKey[_fieldName].fieldName\r\n            ) {\r\n              _itemControl.currentValue = _filerByKey[_fieldName].value\r\n              _itemControl.currentFilter = _filerByKey[_fieldName]\r\n            }\r\n          }\r\n        }\r\n        console.warn(\r\n          \"fnLoadLocalFilter:\",\r\n          _localFilter,\r\n          onePage,\r\n          onePage._manualFilterOuts\r\n        )\r\n        if (cb) {\r\n          cb({\r\n            finish: true,\r\n          })\r\n        }\r\n      } else {\r\n        if (cb) {\r\n          cb({\r\n            finish: false,\r\n          })\r\n        }\r\n      }\r\n    }\r\n    _fnList[kfnGetConfigChart] = () => {\r\n      if (onePage && onePage._dataOptions && onePage._dataOptions.ChartConfig) {\r\n        let _chartConfig = onePage._dataOptions.ChartConfig\r\n        //\r\n        if (_chartConfig.Config == null) {\r\n          _chartConfig.Config = fnListMyPage.fnGetConfigPagePage(_fnList, [\r\n            KConfigPagePage.configChart,\r\n          ])\r\n        }\r\n        return _chartConfig\r\n      }\r\n    }\r\n    _fnList[kfnGetDataTableFilterd] = () => {\r\n      // console.warn(\"kfnGetDataTableFilterd\")\r\n      //will replace when has component table finish\r\n      return onePage.getDataList()\r\n    }\r\n    _fnList[kfnGetDataTable] = () => {\r\n      // console.warn(\"kfnGetDataTable\")\r\n      return onePage.getDataList()\r\n    }\r\n    _fnList[kfnGetComponentTable] = () => {\r\n      //will replace when has component\r\n      return null\r\n    }\r\n    _fnList[kfnGetConfigPageScreenConfig] = (key, df) => {\r\n      console.info(kfnGetConfigPageScreenConfig, onePage, ScreenCode, key, df)\r\n      if (key) {\r\n        if (HUtils.has(onePage._oneScreenConfig._objScreenConfig, key)) {\r\n          return HUtils.get(onePage._oneScreenConfig._objScreenConfig, key)\r\n        }\r\n        return df\r\n      }\r\n      return onePage._oneScreenConfig._objScreenConfig\r\n    }\r\n    _fnList[kfnGetConfigPageHeader] = (key, df) => {\r\n      console.info(kfnGetConfigPageHeader, onePage, ScreenCode, key, df)\r\n      if (key) {\r\n        if (onePage._oneScreenConfig._header.hasOwnProperty(key)) {\r\n          return onePage._oneScreenConfig._header[key]\r\n        }\r\n        return df\r\n      }\r\n      return onePage._oneScreenConfig._header\r\n    }\r\n    _fnList[kfnGetConfigPageTable] = (key, df) => {\r\n      // console.info(kfnGetConfigPageTable, key, df, onePage, ScreenCode)\r\n      if (key) {\r\n        if (onePage._oneScreenConfig._table.hasOwnProperty(key)) {\r\n          return onePage._oneScreenConfig._table[key]\r\n        }\r\n        return df\r\n      }\r\n      return onePage._oneScreenConfig._table\r\n    }\r\n    _fnList[kfnGetConfigPageDetail] = (key, df) => {\r\n      // console.info(kfnGetConfigPageDetail, onePage, ScreenCode, key, df)\r\n      if (key) {\r\n        if (onePage._oneScreenConfig._detail.hasOwnProperty(key)) {\r\n          return onePage._oneScreenConfig._detail[key]\r\n        }\r\n        return df\r\n      }\r\n      return onePage._oneScreenConfig._detail\r\n    }\r\n    _fnList[kfnGetConfigPageFilter] = (key, df) => {\r\n      // console.info(kfnGetConfigPageFilter, onePage, ScreenCode, key, df)\r\n      if (key) {\r\n        if (onePage._oneScreenConfig._filter.hasOwnProperty(key)) {\r\n          return onePage._oneScreenConfig._filter[key]\r\n        }\r\n        return df\r\n      }\r\n      return onePage._oneScreenConfig._filter\r\n    }\r\n    _fnList[kfnGetConfigPagePage] = (key, df) => {\r\n      // console.info(kfnGetConfigPagePage, onePage, ScreenCode, key, df)\r\n      return _fnList[kfnGetConfigPageScreenConfig](`Page.${key}`)\r\n    }\r\n    _fnList[kgetTabsIndexSelected] = () => {\r\n      let _index = 0\r\n      let _currentTabLevel = fnListMyPage.getTabLevel(_fnList)\r\n      let _currentTabIdInUrl = HLink.getParameterByName(\"tab\") || \"\"\r\n      let _needUpdateUrl = false\r\n      if (_currentTabIdInUrl) {\r\n        if (_currentTabIdInUrl.indexOf(\"%257c\") > -1) {\r\n          _currentTabIdInUrl = _currentTabIdInUrl.replace(/\\%257c/g, \"|\")\r\n          _needUpdateUrl = true\r\n        }\r\n        if (_currentTabIdInUrl.indexOf(\"%7c\") > -1) {\r\n          _currentTabIdInUrl = _currentTabIdInUrl.replace(/\\%7c/g, \"|\")\r\n          _needUpdateUrl = true\r\n        }\r\n      }\r\n      let _arrTabId = _currentTabIdInUrl.split(\"|\")\r\n      // console.warn(\r\n      //   kgetTabsIndexSelected,\r\n      //   \"tab:\",\r\n      //   _currentTabLevel,\r\n      //   _currentTabIdInUrl\r\n      // )\r\n      let _isMatch = false\r\n      if (configPage.Contents && _currentTabLevel >= 0) {\r\n        configPage.Contents.forEach((tab, index) => {\r\n          if (tab.Id === _arrTabId[_currentTabLevel]) {\r\n            _index = index\r\n            _isMatch = true\r\n          }\r\n        })\r\n        if (_isMatch === false && configPage.Contents.length > 0) {\r\n          _arrTabId[_currentTabLevel] = configPage.Contents[0].Id\r\n          _needUpdateUrl = true\r\n        }\r\n      }\r\n      if (_needUpdateUrl) {\r\n        HLink.updateParamOnUrl(\"tab\", _arrTabId.join(\"|\"))\r\n      }\r\n\r\n      return _index\r\n    }\r\n    _fnList[konChangeTab] = index => {\r\n      // console.warn(konChangeTab, \"onChange\")\r\n      if (configPage.Contents && configPage.Contents.length > index) {\r\n        let _tab = configPage.Contents[index]\r\n        let _tabId = _tab.Id\r\n        let _currentTabLevel = fnListMyPage.getTabLevel(_fnList)\r\n        let _currentTabIdInUrl = HLink.getParameterByName(\"tab\")\r\n        let _arrTabId = _currentTabIdInUrl.split(\"|\")\r\n        // if (_arrTabId.length > _currentTabLevel) {\r\n        _arrTabId[_currentTabLevel] = _tabId\r\n        // }\r\n        // HLink.updateParamOnUrl(\"tab\", _tabId)\r\n        HLink.updateParamOnUrl(\"tab\", _arrTabId.join(\"|\"))\r\n      }\r\n    }\r\n    _fnList[kgetTabLevel] = () => {\r\n      let _tabLevel = 0\r\n      let _tabLevelParent = fnListMyPage.getTabLevel(props.fnList)\r\n      if (_tabLevelParent != null && HIs.isNumber(_tabLevelParent)) {\r\n        _tabLevel = _tabLevelParent + 1\r\n      }\r\n      // console.warn(\r\n      //   \"tablevel:\",\r\n      //   _fnList,\r\n      //   props.fnList,\r\n      //   _tabLevelParent,\r\n      //   _tabLevel\r\n      // )\r\n      return _tabLevel\r\n    }\r\n\r\n    _fnList[kfnGetSharedRequestData] = (opts = {}) => {\r\n      let _query = V.Page_GetSharedQueryOfPage(configPage, {\r\n        match: props.match,\r\n        fnListOfParent: props.fnList,\r\n        queryFilter: onePage.getQueryFilterServer(),\r\n        ...opts,\r\n        moreQuery: {\r\n          // ...this.getSharedQueryDataMore(),\r\n          // ...this._sharedQueryDataMorev2,\r\n        },\r\n        from: V.M_addItemToArrayOrCreateNewArray(opts.from, props),\r\n        // from: [...opts.from,this.props]\r\n      })\r\n      // console.warn(\"\\n\\n\\n\\nshared:\\n\\n\\n\\n\\n\", opts, this, _query)\r\n      return _query\r\n    }\r\n    _fnList.getRequestData = (moreQuery = {}, opts = {}) => {\r\n      let _query = {\r\n        ...fnListMyPage.fnGetSharedRequestData(_fnList, [opts]),\r\n        ...moreQuery,\r\n      }\r\n      return _query\r\n    }\r\n\r\n    _fnList[kfnRequestUpdate] = ({\r\n      apiController,\r\n      cbSuccess,\r\n      cbError,\r\n      requestData,\r\n      row,\r\n      newValue,\r\n      fieldName,\r\n    } = {}) => {\r\n      console.warn(\r\n        \"requestUpdateField\",\r\n        apiController,\r\n        requestData,\r\n        row,\r\n        fieldName,\r\n        newValue\r\n      )\r\n      // row[`_UI_WillUpdate_${fieldName}`] = newValue\r\n      if (_fnList.fnCustomUpdateField) {\r\n        _fnList.fnCustomUpdateField({\r\n          apiController,\r\n          cbSuccess,\r\n          cbError,\r\n          requestData,\r\n          row,\r\n          newValue,\r\n          fieldName,\r\n        })\r\n      } else {\r\n        ApiGeneric({\r\n          method: \"POST\",\r\n          url: `${apiController}/UpdateFields`,\r\n          data: {\r\n            ...requestData,\r\n            RequestData: _fnList.getRequestData(\r\n              {},\r\n              { fromApiName: KApiName.UpdateFields }\r\n            ),\r\n            Id: row.Id,\r\n            Values: [\r\n              {\r\n                FieldName: fieldName,\r\n                NewValue: newValue,\r\n              },\r\n            ],\r\n          },\r\n        })\r\n          .then(v => {\r\n            console.log(\"requestUpdateField:\", v)\r\n            if (v && v.Data && v.Data.Id == row.Id) {\r\n              row[KConfigInRow._UI_NeedUpdateUI] = true\r\n              HUtils.mergeObjIfExist(row, v.Data)\r\n            }\r\n            if (cbSuccess) {\r\n              cbSuccess(v)\r\n            }\r\n          })\r\n          .catch(e => {\r\n            console.warn(\"e:\", e)\r\n            if (cbError) {\r\n              cbError(e)\r\n            }\r\n          })\r\n      }\r\n    }\r\n    _fnList[kfnGetButtonList] = () => {\r\n      let _moreButtonsPrefix = []\r\n      let _moreButtons = []\r\n      if (\r\n        fnListMyPage.fnGetConfigPageHeader(_fnList, [\r\n          KConfigPageHeader.showAddNew,\r\n        ]) === true\r\n      ) {\r\n        _moreButtons.push(\r\n          new OneButton({\r\n            configButton: {\r\n              Type: \"add_new\",\r\n              // More: '{\"withoutQueryFilter\": true}',\r\n            },\r\n            onePage: onePage,\r\n          })\r\n        )\r\n      }\r\n      if (\r\n        fnListMyPage.fnGetConfigPagePage(_fnList, [\r\n          KConfigPagePage.hasSwitchView,\r\n        ]) === true\r\n      ) {\r\n        _moreButtonsPrefix.push(\r\n          new OneButton({\r\n            configButton: {\r\n              Type: \"switch_view\",\r\n            },\r\n            onePage: onePage,\r\n          })\r\n        )\r\n      }\r\n\r\n      //test fn api select row\r\n      // _moreButtonsPrefix.push(\r\n      //   new OneButton({\r\n      //     configButton: {\r\n      //       Type: \"api_select\",\r\n      //     },\r\n      //     onePage: onePage,\r\n      //   })\r\n      // )\r\n\r\n      return [\r\n        ..._moreButtonsPrefix,\r\n        ...onePage.getButtonsList(),\r\n        ..._moreButtons,\r\n      ]\r\n    }\r\n\r\n    _fnList[kfnChangeSwitchView] = ({ type, config } = {}) => {\r\n      onePage[\"_currentSwitchView\"] = type\r\n      onePage[\"_currentSwitchViewConfig\"] = config\r\n      onePage.forceUpdateUI()\r\n      //update ui\r\n    }\r\n    _fnList[kfnGetCurrentSwitchView] = () => {\r\n      let _configPage = fnListMyPage.fnGetConfigPagePage(_fnList, [])\r\n      let _list = fnListMyPage.fnGetConfigPagePage(_fnList, [\r\n        KConfigPagePage.listSwitchView,\r\n      ])\r\n      let _defaultSwitchView = fnListMyPage.fnGetConfigPagePage(_fnList, [\r\n        KConfigPagePage.defaultSwitchView,\r\n      ])\r\n      return {\r\n        configPage: _configPage,\r\n        type: onePage[\"_currentSwitchView\"] || _defaultSwitchView,\r\n        config: onePage[\"_currentSwitchViewConfig\"],\r\n        list: _list,\r\n        defaut: _defaultSwitchView,\r\n      }\r\n    }\r\n    return _fnList\r\n  },\r\n}\r\n\r\nconst helpersOfMyPage = {}\r\nexport { helpersOfMyPage, fnListOfMyPage }\r\n","/*eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState } from \"react\"\r\nimport {\r\n  HCF,\r\n  HUtils,\r\n  MyPage,\r\n  OnePage,\r\n  MyTableCell,\r\n  MyTableCellHelpers,\r\n  HJson,\r\n  OneButton,\r\n  HLink,\r\n  HLocalStorage,\r\n} from \"@macashipo/mlib\"\r\nimport ApiGeneric from \"src/services/apiGeneric\"\r\nimport { fnListOfMyPage } from \"./fnListOfMyPage\"\r\nimport {\r\n  fnListMyPage,\r\n  fnListUI,\r\n  KConfigPageHeader,\r\n  KConfigPagePage,\r\n} from \"src/helpers/fnList\"\r\nimport V from \"src/helpers/V\"\r\nimport useForceUpdate from \"./useForceUpdate\"\r\nimport { KConfigInRow } from \"src/helpers/Flows/TableCell\"\r\nimport { kRequestFromClient } from \"src/helpers/K\"\r\nimport {\r\n  FlowGetConfigInLocalStorageOfPage,\r\n  FlowUpdateSizeOfPageFromLocal,\r\n} from \"src/helpers/Flows/Page\"\r\n\r\nconst kFnConvertUIType = \"fnConvertUIType\"\r\n\r\nconst APHelper = {\r\n  kUI_FirstLoad: \"UI_FirstLoad\",\r\n  kUI_IsInDetail: \"UI_IsInDetail\",\r\n  kUI_IsInModal: \"UI_IsInModal\",\r\n  kUI_NeedCallOptionsForContents: \"UI_NeedCallOptionsForContents\",\r\n  kUI_NeedShowLoading: \"UI_NeedShowLoading\",\r\n  kUI_LoadedOptions: \"UI_LoadedOptions\",\r\n  kUI_LoadOptionError: \"UI_LoadOptionError\",\r\n  kUI_CountRequestOptions: \"UI_CountRequestOptions\",\r\n  kUI_CountRequestList: \"UI_CountRequestList\",\r\n  kUI_LoadedList: \"UI_LoadedList\",\r\n  kUI_TableCols: \"UI_TableCols\",\r\n  convertUITypeAllContents: (contents, fnConvertUIType) => {\r\n    if (contents && contents.length > 0) {\r\n      for (let i = 0; i < contents.length; i++) {\r\n        fnConvertUIType(contents[i])\r\n        if (contents[i].Contents) {\r\n          APHelper.convertUITypeAllContents(\r\n            contents[i].Contents,\r\n            fnConvertUIType\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n  requestOptionsForContents: (configPage = {}, { forceUpdate } = {}) => {\r\n    ApiGeneric({\r\n      method: \"POST\",\r\n      url: `${configPage.APIName}/Options`,\r\n      data: {\r\n        ScreenGUID: configPage.Id,\r\n      },\r\n    })\r\n      .then(v => {\r\n        console.warn(\"v:\", v, HUtils.get(v, \"Data.PageConfig.Contents\"))\r\n        configPage[APHelper.kUI_NeedCallOptionsForContents] = false\r\n        configPage[APHelper.kUI_NeedShowLoading] = false\r\n        configPage.Contents = HUtils.get(v, \"Data.PageConfig.Contents\")\r\n        //truong hop null, hoac ko co, thi set rong de tranh bi goi nhieu lan\r\n        if (configPage.Contents == null) {\r\n          configPage.Contents = []\r\n        }\r\n        const fnConvertUIType = HCF.getCF(kFnConvertUIType)\r\n        if (fnConvertUIType) {\r\n          APHelper.convertUITypeAllContents(\r\n            configPage.Contents,\r\n            fnConvertUIType\r\n          )\r\n        }\r\n        if (forceUpdate) {\r\n          forceUpdate()\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.warn(\"e:\", e)\r\n      })\r\n  },\r\n  requestOptions: (\r\n    configPage = {},\r\n    { onePage, cbSuccess, cbError, requestData } = {}\r\n  ) => {\r\n    console.warn(\"requestOptions\", configPage)\r\n    ApiGeneric({\r\n      method: \"POST\",\r\n      url: `${configPage.APIName}/Options`,\r\n      data: {\r\n        ScreenGUID: configPage.Id,\r\n        ...requestData,\r\n      },\r\n    })\r\n      .then(v => {\r\n        console.warn(\"requestOptions:\", v)\r\n        onePage[APHelper.kUI_LoadedOptions] = true\r\n        if (cbSuccess) {\r\n          cbSuccess(v)\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.warn(\"e:\", e)\r\n        if (cbError) {\r\n          cbError(e)\r\n        }\r\n      })\r\n  },\r\n  requestList: (configPage = {}, { cbSuccess, requestData } = {}) => {\r\n    console.log(\"requestList start:\", configPage, requestData)\r\n    ApiGeneric({\r\n      method: \"POST\",\r\n      url: `${configPage.APIName}/List`,\r\n      data: {\r\n        ScreenGUID: configPage.Id,\r\n        ...requestData,\r\n      },\r\n    })\r\n      .then(v => {\r\n        console.log(\"requestList res:\", v)\r\n        configPage[APHelper.kUI_LoadedList] = true\r\n        if (cbSuccess) {\r\n          cbSuccess(v)\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.warn(\"e:\", e)\r\n      })\r\n  },\r\n  requestCustom: (\r\n    configPage = {},\r\n    { apiPath, apiName, cbSuccess, cbError, requestData } = {}\r\n  ) => {\r\n    console.log(\"requestCustom\", configPage)\r\n    ApiGeneric({\r\n      method: \"POST\",\r\n      url: `${apiPath || configPage.APIName}/${apiName || \"NoApiName\"}`,\r\n      data: {\r\n        ScreenGUID: configPage.Id,\r\n        ...requestData,\r\n      },\r\n    })\r\n      .then(v => {\r\n        console.log(\"requestCustom finish:\", v)\r\n        if (cbSuccess) {\r\n          cbSuccess(v)\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.warn(\"e:\", e)\r\n        if (cbError) {\r\n          cbError(e)\r\n        }\r\n      })\r\n  },\r\n  requestAddNew: (\r\n    configPage = {},\r\n    { cbSuccess, cbError, requestData } = {}\r\n  ) => {\r\n    console.warn(\"requestAddNew\", configPage)\r\n    ApiGeneric({\r\n      method: \"POST\",\r\n      url: `${configPage.APIName}/Add`,\r\n      data: {\r\n        ScreenGUID: configPage.Id,\r\n        ...requestData,\r\n      },\r\n    })\r\n      .then(v => {\r\n        console.warn(\"requestAddNew:\", v)\r\n        if (cbSuccess) {\r\n          cbSuccess(v)\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.warn(\"e:\", e)\r\n        if (cbError) {\r\n          cbError(e)\r\n        }\r\n      })\r\n  },\r\n  requestDelete: (\r\n    configPage = {},\r\n    { row, cbSuccess, cbError, requestData, moreQuery } = {}\r\n  ) => {\r\n    console.warn(\"requestDelete\", configPage, row)\r\n    ApiGeneric({\r\n      method: \"POST\",\r\n      url: `${configPage.APIName}/Delete/${row.Id}`,\r\n      data: {\r\n        ScreenGUID: configPage.Id,\r\n        ...moreQuery,\r\n        ...requestData,\r\n      },\r\n    })\r\n      .then(v => {\r\n        console.warn(\"requestDelete:\", v)\r\n        if (cbSuccess) {\r\n          cbSuccess(v)\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.warn(\"e:\", e)\r\n        if (cbError) {\r\n          cbError(e)\r\n        }\r\n      })\r\n  },\r\n}\r\n\r\nvar countForceUpdate = 0\r\n// const countForceUpdateMax = 200\r\nfunction useConfigPage(\r\n  configPage,\r\n  { needContents, needOptions, needList, props } = {}\r\n) {\r\n  countForceUpdate++\r\n  // const [valueFU, setValueFU] = useState(0) // integer state\r\n  const configPageExt = React.useRef({ ...configPage })\r\n  const refOnePage = React.useRef(\r\n    new OnePage({\r\n      configPage: configPage,\r\n    })\r\n  )\r\n  const refCountRequestList = React.useRef(0)\r\n  const refCountReloadList = React.useRef(1)\r\n  const onePage = refOnePage.current\r\n  const configPageExtCurrent = configPageExt.current\r\n  const refFnList = React.useRef(\r\n    fnListOfMyPage.init({ props, onePage, configPage: configPageExtCurrent })\r\n  )\r\n  const fnList = refFnList.current\r\n\r\n  fnList.fnRequestDelete = opts => {\r\n    APHelper.requestDelete(configPageExtCurrent, {\r\n      ...opts,\r\n    })\r\n  }\r\n\r\n  fnList.fnGetSourceDataWithKey = ({ optionKey }) => {\r\n    console.warn(\"fnGetSourceDataWithKey\", onePage, fnList)\r\n    return (onePage.getDataOptions() || {})[optionKey]\r\n  }\r\n\r\n  const forceUpdate = useForceUpdate()\r\n  //update forceUpdateUI in onePage\r\n  onePage.onForceUpdateUI = () => {\r\n    forceUpdate()\r\n  }\r\n  fnList.fnRequestAddNew = (opts = {}) => {\r\n    console.warn(\"fnRequestAddNew:\", opts)\r\n    APHelper.requestAddNew(configPageExtCurrent, {\r\n      ...opts,\r\n      requestData: {\r\n        ...(HUtils.get(props, \"match.params\") || {}),\r\n        ...fnList.fnGetSharedRequestData({\r\n          withoutQueryFilter: true,\r\n        }),\r\n        ...opts.requestData,\r\n      },\r\n    })\r\n  }\r\n\r\n  fnList.fnRequestCustom = (opts = {}) => {\r\n    APHelper.requestCustom(configPageExtCurrent, {\r\n      ...opts,\r\n      requestData: {\r\n        ...(HUtils.get(props, \"match.params\") || {}),\r\n        ...fnList.fnGetSharedRequestData(),\r\n        ...opts.requestData,\r\n      },\r\n    })\r\n  }\r\n  fnList.onReloadList = fnList.fnReloadList //danh cho cell goi khi can reload list\r\n  // window.testReload = fnList.fnReloadList\r\n  fnList.onReloadPage = () => {\r\n    window.location.reload()\r\n  }\r\n  fnList.onShowDialog = (title, component) => {\r\n    // console.error(\"missing on show dialog\", title, component)\r\n    fnListUI.fnshowDialog({\r\n      title,\r\n      msg: component,\r\n    })\r\n  }\r\n  fnList.openExternalUrl = (link, target) => {\r\n    HLink.openUrl(link, target)\r\n  }\r\n\r\n  fnList.fnForceUpdateTable = () => {\r\n    console.warn(\"fnForceUpdateTable\")\r\n    forceUpdate()\r\n  }\r\n  fnList.onUpdateRow = ({ row, newRow }) => {\r\n    console.warn(\"onUpdateRow\", row, newRow)\r\n    if (row && newRow && row.Id === newRow.Id) {\r\n      row[KConfigInRow._UI_NeedUpdateUI] = true\r\n      HUtils.mergeObjIfExist(row, newRow)\r\n      forceUpdate()\r\n    }\r\n  }\r\n\r\n  fnList.fnGetTableConfig = (key, defaultValue) => {\r\n    return HUtils.get(onePage, `_oneScreenConfig._table.${key}`, defaultValue)\r\n  }\r\n\r\n  fnList.fnHandleFilterSaveLocal = listFilterControl => {\r\n    let _filterListControl = listFilterControl || onePage._filterList\r\n    // console.warn(\"fnHandleFilterSaveLocal\", listFilterControl)\r\n    if (_filterListControl) {\r\n      let _key = `${onePage._configPage.getScreenCode()}_ad-filter`\r\n      let _dataLocal = {}\r\n      for (let i = 0; i < _filterListControl.length; i++) {\r\n        let _item = _filterListControl[i]\r\n        let _f = _item.fieldName\r\n        if (_f && _item.currentFilter != null) {\r\n          _dataLocal[_f] = {\r\n            // value: _item.currentValue,\r\n            filter: _item.currentFilter,\r\n          }\r\n        }\r\n      }\r\n      if (_dataLocal) {\r\n        HLocalStorage.saveObj(_key, _dataLocal)\r\n      }\r\n    }\r\n  }\r\n  fnList.fnHandleFilterTableBootstrap = ({ filterObj, filterOuts } = {}) => {\r\n    // console.warn(\"fnHandleFilterTableBootstrap\")\r\n    if (\r\n      onePage[\"_componentTable\"] &&\r\n      onePage[\"_componentTable\"].handleFilterData\r\n      //&& filterObj\r\n      //&& filterOuts\r\n    ) {\r\n      let _filerObj = filterObj || {}\r\n      let _filterOuts = filterOuts || onePage._manualFilterOuts\r\n      if (_filterOuts && _filterOuts.length > 0) {\r\n        for (let item of _filterOuts) {\r\n          if (item.isServer !== true) {\r\n            _filerObj[item.fieldName] = {\r\n              value: item.valueFilterClient || item.value,\r\n              type: item.type,\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // console.warn(\"filter table:\", _filerObj)\r\n      onePage[\"_componentTable\"].handleFilterData(_filerObj)\r\n    } else {\r\n      //kiem tra neu chua kip load component table, thi bo sung _waiting, de khi co omponent thi goi filter sau\r\n      let _filterOuts = filterOuts || onePage._manualFilterOuts\r\n      if (_filterOuts && _filterOuts.length > 0) {\r\n        onePage[\"_waitingComponentTableForFilter\"] = true\r\n      }\r\n    }\r\n  }\r\n  fnList.fnHandleFilterAll = ({\r\n    filterObj,\r\n    filterOuts,\r\n    withoutServer,\r\n  } = {}) => {\r\n    console.warn(\"fnHandleFilterAll:\")\r\n    //filter server\r\n    //van de bi loop khi goi fnList.fnReloadList\r\n    if (\r\n      withoutServer !== true &&\r\n      onePage._oneFilters.needRequestServerAfterFilter\r\n    ) {\r\n      onePage._configPagination._pageCurrent =\r\n        onePage._configPagination._pageStart\r\n      fnList.fnReloadList()\r\n    }\r\n    //filter bootstrap\r\n    fnList.fnHandleFilterTableBootstrap({ filterObj, filterOuts })\r\n    forceUpdate()\r\n  }\r\n\r\n  fnList.requestList = ({\r\n    isFirst,\r\n    isReload,\r\n    isChangePage,\r\n    isChangeSort,\r\n    isRebuildTable,\r\n  } = {}) => {\r\n    let _currentSearchText = onePage[\"_currentSearchText\"]\r\n    let _requestMore = {}\r\n    if (_currentSearchText) {\r\n      _requestMore[kRequestFromClient.UI_TextSearch] = _currentSearchText\r\n    }\r\n    refCountRequestList.current++\r\n    APHelper.requestList(configPageExtCurrent, {\r\n      requestData: {\r\n        ...(HUtils.get(props, \"match.params\") || {}),\r\n        ...onePage.getQueryPagination(),\r\n        ...onePage.getQuerySort(),\r\n        ...fnList.fnGetSharedRequestData(),\r\n        ..._requestMore,\r\n      },\r\n      cbSuccess: response => {\r\n        onePage._msgShowInUI = response.MsgShowInUI\r\n        if (response.Data) {\r\n          if (isRebuildTable || isFirst) {\r\n            refCountReloadList.current++\r\n          }\r\n          console.log(\"cb request list:\", refCountReloadList.current)\r\n          onePage.parseListAndExtraData(response.Data)\r\n          //update dataTotal trong khi chua co\r\n          if (response.Data && response.Data.DataTotal) {\r\n            onePage[\"_dataTotal\"] = response.Data.DataTotal\r\n          }\r\n          //for test\r\n          if (onePage._dataList && onePage._dataList.length > 0) {\r\n            for (let i = 0; i < onePage._dataList.length; i++) {\r\n              onePage._dataList[i][\"_UI_CountReloadList\"] =\r\n                refCountRequestList.current\r\n            }\r\n            // onePage._dataList[0][\"_UI_CountReloadList\"] =\r\n            //   refCountRequestList.current\r\n\r\n            //test change value first item\r\n            // if (refCountRequestList.current == 2) {\r\n            //   onePage._dataList[0].btn_ExportConfigJson = \"\"\r\n            //   console.warn(\"item change:\", onePage._dataList[0])\r\n            // }\r\n          }\r\n          if (isReload || isChangePage || isChangeSort) {\r\n            if (onePage._oneScreenConfig._table.buildColsAfterReloadList) {\r\n              configPageExtCurrent[APHelper.kUI_TableCols] = V.Table_BuildCols({\r\n                fnList,\r\n                onePage,\r\n              })\r\n            }\r\n            forceUpdate()\r\n          } else if (isFirst) {\r\n            configPageExtCurrent[APHelper.kUI_TableCols] = V.Table_BuildCols({\r\n              fnList,\r\n              onePage,\r\n            })\r\n            console.log(\"after request list\", onePage, onePage._filterList)\r\n            //update filter list after first request list, //tuong duong voi forceupdate, nen ko can forceupdate nua\r\n            // forceUpdate()\r\n            if (onePage && onePage._filterList) {\r\n              fnListMyPage.fnLoadLocalFilter(fnList, [\r\n                ({ finish } = {}) => {\r\n                  if (finish) {\r\n                    fnList.fnHandleFilterAll({ withoutServer: true }) //add without server, vi sau khi get list, ko can goi get list nua, truyen data query tu list truoc do\r\n                  } else {\r\n                    forceUpdate()\r\n                  }\r\n                },\r\n              ])\r\n            } else {\r\n              forceUpdate()\r\n            }\r\n          }\r\n        } else {\r\n          forceUpdate()\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  fnList.fnReloadList = () => {\r\n    fnList.requestList && fnList.requestList({ isReload: true })\r\n    // APHelper.requestList(configPageExtCurrent, {\r\n    //   requestData: {\r\n    //     ...(HUtils.get(props, \"match.params\") || {}),\r\n    //     ...fnList.fnGetSharedRequestData(),\r\n    //   },\r\n    //   cbSuccess: response => {\r\n    //     onePage._msgShowInUI = response.MsgShowInUI\r\n    //     if (response.Data) {\r\n    //       refCountReloadList.current++\r\n    //       onePage.parseListAndExtraData(response.Data)\r\n    //       //check need change config columns\r\n    //       if (onePage._oneScreenConfig._table.buildColsAfterReloadList) {\r\n    //         configPageExtCurrent[APHelper.kUI_TableCols] = V.Table_BuildCols({\r\n    //           fnList,\r\n    //           onePage,\r\n    //         })\r\n    //       }\r\n    //       forceUpdate()\r\n    //     }\r\n    //   },\r\n    // })\r\n  }\r\n\r\n  fnList.fnDeleteItem = (row = {}) => {\r\n    let _data = onePage._dataList\r\n    console.warn(\"fnDeleteItem:\", _data)\r\n    if (_data && _data.length > 0) {\r\n      for (let i = 0; i < _data.length; i++) {\r\n        if (_data[i].Id === row.Id) {\r\n          _data.splice(i, 1)\r\n          break\r\n        }\r\n      }\r\n    }\r\n    forceUpdate()\r\n    if (fnList.fnGetTableConfig(\"needReloadAfterDelete\", false) === true) {\r\n      fnList.fnReloadList()\r\n    }\r\n  }\r\n\r\n  fnList.fnGetTableCols = () => {\r\n    return configPageExtCurrent[APHelper.kUI_TableCols]\r\n  }\r\n\r\n  //first load\r\n  if (onePage[APHelper.kUI_FirstLoad] !== false) {\r\n    onePage[APHelper.kUI_FirstLoad] = false\r\n    onePage[APHelper.kUI_IsInDetail] = fnListMyPage.fnGetIsInTableExpand(fnList)\r\n    onePage[APHelper.kUI_IsInModal] = fnListMyPage.fnGetIsInModal(fnList)\r\n    if (\r\n      onePage[APHelper.kUI_IsInDetail] !== true &&\r\n      onePage[APHelper.kUI_IsInModal] !== true\r\n    ) {\r\n      fnListMyPage.fnUpdatePageTitle(fnList, [configPageExtCurrent.Title])\r\n    }\r\n    onePage._oneFilters.afterChangeFilter = () => {\r\n      console.warn(\"afterChangeFilter:\", onePage._oneFilters.listFilter)\r\n    }\r\n\r\n    //load form local, de co request goi list\r\n    fnListMyPage.fnLoadLocalFilter(fnList, [\r\n      () => {\r\n        //after load local filter\r\n        console.warn(\"cb load local filter:\", onePage._manualFilterOuts)\r\n      },\r\n    ])\r\n    if (onePage._configPagination) {\r\n      onePage._configPagination.afterChange = () => {\r\n        console.warn(\"afterChange Page:\")\r\n        if (onePage._oneScreenConfig._table.hasPagingRemote) {\r\n          fnList.requestList &&\r\n            fnList.requestList({\r\n              isChangePage: true,\r\n            })\r\n        }\r\n      }\r\n    }\r\n    if (onePage._oneFilters) {\r\n      onePage._oneFilters.afterChangeSort = () => {\r\n        if (onePage._oneScreenConfig._table.hasPagingRemote) {\r\n          fnList.requestList &&\r\n            fnList.requestList({\r\n              isChangeSort: true,\r\n            })\r\n        }\r\n      }\r\n    }\r\n    //load options va list\r\n    console.error(\"Load first page: \", configPageExtCurrent, onePage)\r\n  }\r\n\r\n  //check needContens, needList to first request\r\n  if (needContents && !configPageExtCurrent.Contents) {\r\n    configPageExtCurrent[APHelper.kUI_NeedCallOptionsForContents] = true\r\n    configPageExtCurrent[APHelper.kUI_NeedShowLoading] = true\r\n    APHelper.requestOptionsForContents(configPageExtCurrent, {\r\n      forceUpdate: () => {\r\n        forceUpdate()\r\n      },\r\n    })\r\n  } else if (needContents !== true) {\r\n    if (\r\n      needOptions !== false &&\r\n      onePage[APHelper.kUI_CountRequestOptions] == null &&\r\n      onePage[APHelper.kUI_LoadedOptions] !== true &&\r\n      onePage[APHelper.kUI_LoadOptionError] == null\r\n    ) {\r\n      onePage[APHelper.kUI_CountRequestOptions] = 1\r\n      APHelper.requestOptions(configPageExtCurrent, {\r\n        onePage,\r\n        requestData: {\r\n          ...(HUtils.get(props, \"match.params\") || {}),\r\n          ...fnList.fnGetSharedRequestData(),\r\n        },\r\n        cbSuccess: response => {\r\n          if (response.Data) {\r\n            onePage[APHelper.kUI_LoadOptionError] = null\r\n            onePage.parseOptions(response.Data)\r\n            //check sizeOfPage local\r\n            FlowUpdateSizeOfPageFromLocal(onePage)\r\n            forceUpdate()\r\n          }\r\n        },\r\n        cbError: e => {\r\n          onePage[APHelper.kUI_LoadOptionError] = e\r\n          forceUpdate()\r\n        },\r\n      })\r\n    }\r\n    if (\r\n      needList !== false &&\r\n      onePage[APHelper.kUI_CountRequestList] == null &&\r\n      configPageExtCurrent[APHelper.kUI_LoadedList] !== true &&\r\n      (needOptions === false || onePage[APHelper.kUI_LoadedOptions] === true)\r\n    ) {\r\n      onePage[APHelper.kUI_CountRequestList] = 1\r\n      fnList.requestList &&\r\n        fnList.requestList({\r\n          isFirst: true,\r\n        })\r\n    }\r\n  }\r\n\r\n  console.log(\r\n    \"renderPage: useConfigPage:\",\r\n    props,\r\n    countForceUpdate,\r\n    configPageExtCurrent,\r\n    onePage,\r\n    HUtils.get(props, \"match.params\")\r\n  )\r\n  return {\r\n    forceUpdate,\r\n    countReloadList: refCountReloadList.current,\r\n    configPageExt: configPageExtCurrent,\r\n    showLoading: configPageExtCurrent[APHelper.kUI_NeedShowLoading],\r\n    errorMsg: null,\r\n    contents: configPageExtCurrent.Contents,\r\n    getTabs: () => {\r\n      if (configPageExtCurrent && configPageExtCurrent.Contents) {\r\n        return configPageExtCurrent.Contents.map((tab, index) => ({\r\n          title: tab.Title,\r\n          getContent: () => {\r\n            return <MyPage configPage={tab} fnList={fnList} />\r\n          },\r\n          key: index,\r\n        }))\r\n      }\r\n    },\r\n    onePage,\r\n    // getTableCols: () => {//chuyen sang fnGetTableCols\r\n    //   return configPageExtCurrent[APHelper.kUI_TableCols]\r\n    // },\r\n    renderLoading: () => {\r\n      return <div>Loading...</div>\r\n    },\r\n    renderError: msg => {\r\n      return <div>{msg}</div>\r\n    },\r\n    onSearch: textSearch => {\r\n      console.warn(\"onSearch:\", textSearch)\r\n      fnList.fnHandleSearchText(textSearch)\r\n    },\r\n    applyClientData: (options, list) => {\r\n      if (options != null) {\r\n        onePage[APHelper.kUI_LoadOptionError] = null\r\n        onePage.parseOptions(options)\r\n        forceUpdate()\r\n      }\r\n      if (list != null) {\r\n        onePage.parseListAndExtraData(list)\r\n        configPageExtCurrent[APHelper.kUI_TableCols] = V.Table_BuildCols({\r\n          fnList,\r\n          onePage,\r\n        })\r\n        forceUpdate()\r\n      }\r\n    },\r\n    updateComponentTable: c => {\r\n      if (onePage[\"_componentTable\"] == null) {\r\n        //check first set component\r\n        // console.warn(\"check first load component\")\r\n        onePage[\"_componentTable\"] = c\r\n        // bo di vi ko biet lam gi -> filter lam page chuyen ve trang 1\r\n        // HUtils.runFuntion(fnList, \"fnHandleFilterTableBootstrap\", [])\r\n      } else {\r\n        onePage[\"_componentTable\"] = c\r\n      }\r\n      if (\r\n        onePage[\"_componentTable\"] &&\r\n        onePage[\"_waitingComponentTableForFilter\"] == true\r\n      ) {\r\n        onePage[\"_waitingComponentTableForFilter\"] = false\r\n        HUtils.runFuntion(fnList, \"fnHandleFilterTableBootstrap\", [])\r\n      }\r\n    },\r\n    handleFilter: () => {\r\n      onePage._manualFilterOuts = onePage._oneFilters.listFilter\r\n      console.warn(\r\n        \"handleFilter\",\r\n        onePage._manualFilterOuts,\r\n        onePage._oneFilters.needRequestServerAfterFilter\r\n      )\r\n      fnList.fnHandleFilterAll()\r\n      //save local\r\n      fnList.fnHandleFilterSaveLocal()\r\n    },\r\n    handleClearFilter: itemFilterOut => {\r\n      console.warn(\"handleClearFilter\", itemFilterOut)\r\n      if (itemFilterOut) {\r\n        if (onePage._filterList) {\r\n          for (let i = 0; i < onePage._filterList.length; i++) {\r\n            let _item = onePage._filterList[i]\r\n            if (_item.fieldName === itemFilterOut.fieldName) {\r\n              _item.clear()\r\n              break\r\n            }\r\n          }\r\n        }\r\n        //clear oneFilters in onePage\r\n        if (\r\n          onePage._oneFilters.listFilter &&\r\n          onePage._oneFilters.listFilter.length > 0\r\n        ) {\r\n          onePage._oneFilters.listFilter =\r\n            onePage._oneFilters.listFilter.filter((v, i) => {\r\n              if (v.fieldName === itemFilterOut.fieldName) {\r\n                return false\r\n              }\r\n              return true\r\n            })\r\n        }\r\n        if (onePage._manualFilterOuts && onePage._manualFilterOuts.length > 0) {\r\n          for (let i = 0; i < onePage._manualFilterOuts.length; i++) {\r\n            let _item = onePage._manualFilterOuts[i]\r\n            if (_item.fieldName === itemFilterOut.fieldName) {\r\n              onePage._manualFilterOuts.splice(i, 1)\r\n              break\r\n            }\r\n          }\r\n        }\r\n        fnList.fnHandleFilterAll()\r\n        fnList.fnHandleFilterSaveLocal()\r\n      } else {\r\n        onePage._manualFilterOuts = []\r\n        if (onePage._filterList) {\r\n          let _key = `${onePage._configPage.getScreenCode()}_ad-filter`\r\n          for (let i = 0; i < onePage._filterList.length; i++) {\r\n            let _item = onePage._filterList[i]\r\n            _item.clear()\r\n          }\r\n          localStorage.removeItem(_key)\r\n        }\r\n        //clear oneFilters in onePage\r\n        if (onePage._oneFilters) {\r\n          onePage._oneFilters.updateCurrentFiters({})\r\n        }\r\n        fnList.fnHandleFilterAll()\r\n        // onePage.clearFilter()//dang ko hoat dong\r\n      }\r\n    },\r\n    fnList,\r\n  }\r\n}\r\n\r\nexport default useConfigPage\r\n"],"sourceRoot":""}