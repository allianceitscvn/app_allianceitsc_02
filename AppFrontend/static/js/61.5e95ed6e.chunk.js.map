{"version":3,"sources":["modules/adminpanel/MyUI/Types/select_box_search_v2.js","helpers/AText.js","modules/adminpanel/MyUI/Types/_variable.js"],"names":["WrapSelect","styled","div","MUISelectBox","props","sourceData","valueSelected","onChange","hasRightPanel","configFormAddNew","onSubmitAddNew","isRadio","multi","renderOptionText","simpleValue","arraySplitChar","showLoading","React","useState","sourceDataFilterd","setSourceDataFilterd","isAddNew","setIsAddNew","textSearch","setTextSearch","setTextSearchDone","handlerSearch","useCallback","debounce","s","console","warn","length","_arrFilter","filter","v","i","_textFilter","Text_Filter","Text","AText","compareTextForSearch","searchKoDau","_listData","_multi","_isRadio","isSelected","option","_v","Value","Array","isArray","split","indexOf","_listSelected","onSelectOption","clearAll","clear","log","className","type","placeholder","i18next","t","value","ev","_s","currentTarget","style","maxHeight","HeightScrollSelect2Box","overflow","options","wheelPropagation","map","classnames","selected","onClick","readOnly","checked","marginLeft","cursor","color","fontWeight","configForm","fnList","renderFooter","cForm","getCurrentValues","cbSuccess","text","opts","_textSearch","toLowerCase","_text","HText"],"mappings":"wTAWMA,EAAaC,IAAOC,IAAV,osFAuJD,SAASC,EAAaC,GACnC,IACEC,EAYED,EAZFC,WACAC,EAWEF,EAXFE,cACAC,EAUEH,EAVFG,SACAC,EASEJ,EATFI,cACAC,EAQEL,EARFK,iBACAC,EAOEN,EAPFM,eACAC,EAMEP,EANFO,QACAC,EAKER,EALFQ,MAEAC,GAGET,EAJFU,YAIEV,EAHFS,kBACAE,EAEEX,EAFFW,eACAC,EACEZ,EADFY,YAEF,EAAkDC,IAAMC,SAASb,GAAjE,mBAAOc,EAAP,KAA0BC,EAA1B,KACA,EAAgCH,IAAMC,UAAS,GAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCL,IAAMC,SAAS,IAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA4CP,IAAMC,SAAS,IAA3D,mBAAuBO,GAAvB,WACMC,EAAgBT,IAAMU,YAC1BC,oBAAS,SAAAC,GAEP,GADAC,QAAQC,KAAK,UAAWF,GACpBxB,GAAcA,EAAW2B,OAAS,EAAG,CACvC,IAAIC,EAAa5B,EAAW6B,QAAO,SAACC,EAAGC,GACrC,IAAIC,EAAcF,EAAEG,aAAeH,EAAEI,KACrC,QACEC,IAAMC,qBAAqBJ,EAAaR,EAAG,CAAEa,aAAa,OAM9DtB,EAAqBa,GACrBR,EAAkBI,MAEnB,KACH,IAEEc,EAAYtC,EACZkB,GAAcA,EAAWS,OAAS,IACpCW,EAAYxB,GAEd,IAAIyB,GAAmB,IAAVhC,EAETiC,GAAsB,IAAXD,EACA,MAAXjC,IACFkC,EAAWlC,GAEb,IAAMmC,EAAa,SAAAC,GACjB,IAAIC,EAAKD,EAAOE,MAChB,GAAKL,GAIE,GAAItC,EAAe,CAOxB,IALI4C,MAAMC,QAAQ7C,GACCA,EAEAA,EAAc8C,MAAMrC,GAAkB,MAEtCsC,QAAQL,IAAO,EAChC,OAAO,QAXT,GAAIA,IAAO1C,EACT,OAAO,EAcX,OAAO,GAGLgD,EAAgB,GAChBX,IACFW,EAAgBjD,EAAW6B,QAAO,SAACC,EAAGC,GACpC,OAAOU,EAAWX,OAItB,IAAMoB,EAAiB,WAA4C,IAA3CR,EAA0C,uDAAjC,GAAiC,yDAAP,GAApBS,EAA2B,EAA3BA,SACjCR,GAD4D,EAAjBS,MACtCV,IACQ,IAAbS,IACFR,EAAK,IAIHzC,GACFA,EAASyC,IAIb,OADAlB,QAAQ4B,IAAI,gBAAiBrD,EAAYC,EAAeF,GAEtD,eAACJ,EAAD,CAAY2D,UAAU,iBAAtB,UACE,gCACE,sBAAKA,UAAU,WAAf,UACE,mBAAGA,UAAU,iBACb,uBACEC,KAAK,OAOLC,YAAaC,IAAQC,EAAE,aACvBC,MAAOzC,EACPhB,SAAU,SAAA0D,GACR,IAAIC,EAAKD,EAAGE,cAAcH,MAC1BxC,EAAc0C,GACdxC,EAAcwC,SAgCnB3C,GAAcA,EAAWS,OAAS,GAAyB,GAApBW,EAAUX,QAChD,qBAAK2B,UAAU,oBAAf,SACGG,IAAQC,EAAE,qBAGf,wBACA,qBAAKK,MAAO,CAAEC,UAAWC,IAAwBC,SAAU,UAA3D,SACE,cAAC,IAAD,CAAkBC,QAAS,CAAEC,kBAAkB,GAA/C,SACE,qBAAKL,MAAO,CAAEC,UAAWC,KAAzB,SACG3B,GACCA,EAAU+B,KAAI,SAACvC,EAAGC,GAChB,OACE,sBAEEuB,UAAWgB,IAAW,SAAU,CAC9BC,SAAU9B,EAAWX,KAEvB0C,QAAS,WACPtB,EAAepB,IANnB,UASE,qBAAKwB,UAAU,aAAf,SACE,uBACEC,MAAmB,IAAbf,EAAoB,QAAU,WACpCiC,UAAQ,EACRC,QAASjC,EAAWX,OAGH,MAApBtB,EACCA,EAAiBsB,GAEjB,8BAAMA,EAAEI,SAlBLH,eA2BpB5B,IAA8B,IAAba,GAChB,sBAAKsC,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACGL,EAActB,OAAS,EAAvB,UACMsB,EAActB,OADpB,aAEG,gBACHsB,EAActB,OAAS,GACtB,sBACE2B,UAAU,QACVS,MAAO,CAAEY,WAAY,OAAQC,OAAQ,WACrCJ,QAAS,WACPtB,EAAe,KAAM,CAAEC,UAAU,KAJrC,SAOGM,IAAQC,EAAE,kBAIjB,qBAAKK,MAAO,CAAEC,UAAW,QAASE,SAAU,UAA5C,SACE,cAAC,IAAD,UACE,qBAAKZ,UAAU,YAAYS,MAAO,CAAEC,UAAW,SAA/C,SACGf,EAAcoB,KAAI,SAACvC,EAAGC,GACrB,OACE,sBAEEuB,UAAWgB,IAAW,SAAU,CAC9BC,UAAU,IAHd,UAME,qBAAKjB,UAAU,SAAf,SAAyBxB,EAAEI,OAC3B,qBAAKoB,UAAU,WAAf,SACE,cAAC,IAAD,CACEuB,MAAM,OACNL,QAAS,WACPtB,EAAepB,EAAG,CAAEsB,OAAO,KAH/B,SAME,mBAAGE,UAAU,sBAbZvB,gBAwBP,IAAbf,GACC,sBAAKsC,UAAU,wBAAf,UACE,qBAAKA,UAAU,WAAWS,MAAO,CAAEe,WAAY,QAA/C,SACGrB,IAAQC,EAAE,aAEb,qBAAKK,MAAO,CAAEC,UAAW,QAASE,SAAU,UAA5C,SACE,cAAC,IAAD,UACE,qBAAKZ,UAAU,YAAYS,MAAO,CAAEC,UAAW,SAA/C,SACE,qBAAKV,UAAU,SAAf,SACE,cAAC,IAAD,CACEyB,WAAY3E,EACZ4E,OAAQ,GACRC,aAAc,SAAAC,GACZ,OACE,sBAAK5B,UAAU,gBAAf,UACE,cAAC,IAAD,CACEkB,QAAS,WACPvD,GAAY,IAFhB,SAKGwC,IAAQC,EAAE,WAEb,cAAC,IAAD,CACEmB,MAAM,UACNL,QAAS,WACHnE,GACFA,EAAe6E,EAAMC,mBAAoB,CACvCC,UAAW,WACTnE,GAAY,OANtB,SAYGwC,IAAQC,EAAE,2BAYhB,IAAhB/C,GACC,qBAAK2C,UAAU,gBAAf,SACE,mBAAGA,UAAU,iC,iCCpbvB,WACMnB,EAAQ,CAEZC,qBAFY,WAE4C,IAAnCiD,EAAkC,uDAA3B,GAAInE,EAAuB,uDAAV,GAAIoE,EAAM,uCACrD,GAAIpE,EAAW8B,QAAQ,MAAQ,GAAK9B,EAAW8B,QAAQ,MAAQ,EAAG,CAChE,IAAIuC,EAAcrE,EAAWsE,cACzBC,EAAQJ,EAAKG,cACjB,OAAIC,EAAMzC,QAAQuC,IAAgB,EAMpC,OAAOG,QAAMtD,qBAAqBiD,EAAMnE,EAAYoE,KAIzCnD,O,iCCjBf,kCAAO,IAAM8B,EAAyB","file":"static/js/61.5e95ed6e.chunk.js","sourcesContent":["import React from \"react\"\r\nimport classnames from \"classnames\"\r\nimport { Button } from \"reactstrap\"\r\nimport { debounce } from \"lodash\"\r\nimport { HText } from \"@macashipo/mlib\"\r\nimport styled from \"styled-components\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport MyForm from \"src/core/components/MyForm/MyForm\"\r\nimport i18next from \"i18next\"\r\nimport { HeightScrollSelect2Box } from \"./_variable\"\r\nimport AText from \"src/helpers/AText\"\r\nconst WrapSelect = styled.div`\r\n  padding: 0rem 0px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  & .a-btn {\r\n    cursor: pointer;\r\n    padding: 2px 4px;\r\n    border-radius: 4px;\r\n    &:hover {\r\n      background: #033c73;\r\n      color: white;\r\n    }\r\n    &.active {\r\n      background: #033c73;\r\n      color: white;\r\n    }\r\n  }\r\n  & .a-search-no-found {\r\n    padding: 0.5rem;\r\n    text-align: center;\r\n  }\r\n  & .a-search {\r\n    position: relative;\r\n    border-bottom: 2px solid #0b4277;\r\n    & i {\r\n      position: absolute;\r\n      left: 10px;\r\n      top: 11px;\r\n    }\r\n    & input {\r\n      width: 100%;\r\n      border: 0px;\r\n      height: 35px;\r\n      padding: 0rem;\r\n      padding-left: 28px;\r\n      border-radius: 4px;\r\n      margin-bottom: 0rem;\r\n      &:focus {\r\n        outline: 0;\r\n        background: var(--color-bg-focus);\r\n      }\r\n    }\r\n  }\r\n  & .a-bar {\r\n    height: 30px;\r\n    border-bottom: 1px solid #bcc3cd;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0px 0.5rem;\r\n    background: #f9fafb;\r\n    & .a-right {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n  & .option {\r\n    color: #575757;\r\n    min-height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.5rem;\r\n    padding-left: 0.5rem;\r\n    cursor: pointer;\r\n    position: relative;\r\n    border-bottom: 1px solid #e9ecef;\r\n    & .a-checkbox {\r\n      margin-right: 0.5rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  }\r\n  & .option:last-child {\r\n    border-bottom: 0px;\r\n  }\r\n  & .option:hover {\r\n    color: #546c84;\r\n    background-color: #fbfbfb;\r\n  }\r\n  & .option.selected {\r\n    background: #f7fbff;\r\n  }\r\n  & .a-rightpanel {\r\n    width: 180px;\r\n    border-left: 1px solid #bcc3cd;\r\n    & .a-header {\r\n      height: 37px;\r\n      border-bottom: 2px solid #225383;\r\n      display: flex;\r\n      padding: 0.5rem;\r\n      align-items: center;\r\n    }\r\n    & .a-content {\r\n      & .a-remove {\r\n        margin-left: auto;\r\n      }\r\n      & .option {\r\n        background: transparent;\r\n        border-bottom: 0px;\r\n        padding: 0.25rem 0.5rem;\r\n        & .a-text {\r\n          white-space: nowrap;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n        }\r\n        & .a-remove button {\r\n          padding: 0px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  & .a-addnew {\r\n    & .a-content {\r\n      padding: 0.5rem;\r\n      & .a-form-footer {\r\n        margin-top: 0.5rem;\r\n        & button {\r\n          padding: 5px;\r\n          margin: 2px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  & .a-loading-all {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #ffffff75;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n  }\r\n`\r\n\r\n// const TestConfigForm = {\r\n//   defaultValues: {\r\n//     fName: \"Test fName\",\r\n//   },\r\n//   controls: [\r\n//     {\r\n//       label: \"Name\",\r\n//       fieldName: \"fName\",\r\n//       type: \"text\",\r\n//       more: {\r\n//         relativeTo: [\"fName2\"],\r\n//       },\r\n//     },\r\n//   ],\r\n// }\r\nexport default function MUISelectBox(props) {\r\n  const {\r\n    sourceData,\r\n    valueSelected,\r\n    onChange,\r\n    hasRightPanel,\r\n    configFormAddNew,\r\n    onSubmitAddNew,\r\n    isRadio,\r\n    multi,\r\n    simpleValue,\r\n    renderOptionText,\r\n    arraySplitChar,\r\n    showLoading,\r\n  } = props\r\n  const [sourceDataFilterd, setSourceDataFilterd] = React.useState(sourceData)\r\n  const [isAddNew, setIsAddNew] = React.useState(false)\r\n  const [textSearch, setTextSearch] = React.useState(\"\")\r\n  const [textSearchDone, setTextSearchDone] = React.useState(\"\")\r\n  const handlerSearch = React.useCallback(\r\n    debounce(s => {\r\n      console.warn(\"search:\", s)\r\n      if (sourceData && sourceData.length > 0) {\r\n        let _arrFilter = sourceData.filter((v, i) => {\r\n          let _textFilter = v.Text_Filter || v.Text\r\n          if (\r\n            AText.compareTextForSearch(_textFilter, s, { searchKoDau: true })\r\n          ) {\r\n            return true\r\n          }\r\n          return false\r\n        })\r\n        setSourceDataFilterd(_arrFilter)\r\n        setTextSearchDone(s)\r\n      }\r\n    }, 300),\r\n    []\r\n  )\r\n  let _listData = sourceData\r\n  if (textSearch && textSearch.length > 0) {\r\n    _listData = sourceDataFilterd\r\n  }\r\n  let _multi = multi === true\r\n  let _simpleValue = simpleValue === true\r\n  let _isRadio = _multi === false\r\n  if (isRadio != null) {\r\n    _isRadio = isRadio\r\n  }\r\n  const isSelected = option => {\r\n    let _v = option.Value\r\n    if (!_multi) {\r\n      if (_v === valueSelected) {\r\n        return true\r\n      }\r\n    } else if (valueSelected) {\r\n      let _valueSelected = []\r\n      if (Array.isArray(valueSelected)) {\r\n        _valueSelected = valueSelected\r\n      } else {\r\n        _valueSelected = valueSelected.split(arraySplitChar || \",\")\r\n      }\r\n      if (_valueSelected.indexOf(_v) > -1) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  let _listSelected = []\r\n  if (_listData) {\r\n    _listSelected = sourceData.filter((v, i) => {\r\n      return isSelected(v)\r\n    })\r\n  }\r\n\r\n  const onSelectOption = (option = {}, { clearAll, clear } = {}) => {\r\n    let _v = option\r\n    if (clearAll === true) {\r\n      _v = []\r\n    }\r\n    if (_multi) {\r\n    }\r\n    if (onChange) {\r\n      onChange(_v)\r\n    }\r\n  }\r\n  console.log(\"MUISelectBox:\", sourceData, valueSelected, props)\r\n  return (\r\n    <WrapSelect className=\"mui-select_box\">\r\n      <div>\r\n        <div className=\"a-search\">\r\n          <i className=\"fa fa-search\" />\r\n          <input\r\n            type=\"text\"\r\n            // autoFocus //bo di vi no se auto scroll top page\r\n            // ref={r => {\r\n            //   if (r && r.focus) {\r\n            //     r.focus()\r\n            //   }\r\n            // }}\r\n            placeholder={i18next.t(\"Search...\")}\r\n            value={textSearch}\r\n            onChange={ev => {\r\n              let _s = ev.currentTarget.value\r\n              setTextSearch(_s)\r\n              handlerSearch(_s)\r\n            }}\r\n          />\r\n        </div>\r\n        {/* <div className=\"a-bar\">\r\n          <div\r\n            className=\"a-btn\"\r\n            onClick={() => {\r\n              if (_listData && _listData.length > 0) {\r\n                if (onChange) {\r\n                  onChange(\r\n                    _listData.map((v, i) => {\r\n                      return v.Value\r\n                    })\r\n                  )\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {_listData.length > 0 && \"Select all\"}\r\n          </div>\r\n          {configFormAddNew && (\r\n            <div\r\n              className={classnames(\"a-btn a-right\", { active: isAddNew })}\r\n              onClick={() => {\r\n                setIsAddNew(true)\r\n              }}\r\n            >\r\n              Add new\r\n            </div>\r\n          )}\r\n        </div> */}\r\n        {textSearch && textSearch.length > 0 && _listData.length == 0 && (\r\n          <div className=\"a-search-no-found\">\r\n            {i18next.t(\"No search found\")}\r\n          </div>\r\n        )}\r\n        <div></div>\r\n        <div style={{ maxHeight: HeightScrollSelect2Box, overflow: \"hidden\" }}>\r\n          <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n            <div style={{ maxHeight: HeightScrollSelect2Box }}>\r\n              {_listData &&\r\n                _listData.map((v, i) => {\r\n                  return (\r\n                    <div\r\n                      key={i}\r\n                      className={classnames(\"option\", {\r\n                        selected: isSelected(v),\r\n                      })}\r\n                      onClick={() => {\r\n                        onSelectOption(v)\r\n                      }}\r\n                    >\r\n                      <div className=\"a-checkbox\">\r\n                        <input\r\n                          type={_isRadio === true ? \"radio\" : \"checkbox\"}\r\n                          readOnly\r\n                          checked={isSelected(v)}\r\n                        />\r\n                      </div>\r\n                      {renderOptionText != null ? (\r\n                        renderOptionText(v)\r\n                      ) : (\r\n                        <div>{v.Text}</div>\r\n                      )}\r\n                    </div>\r\n                  )\r\n                })}\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div>\r\n      {hasRightPanel && isAddNew !== true && (\r\n        <div className=\"a-rightpanel\">\r\n          <div className=\"a-header\">\r\n            {_listSelected.length > 0\r\n              ? `${_listSelected.length} selected`\r\n              : \"None selected\"}\r\n            {_listSelected.length > 0 && (\r\n              <span\r\n                className=\"a-btn\"\r\n                style={{ marginLeft: \"auto\", cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  onSelectOption(null, { clearAll: true })\r\n                }}\r\n              >\r\n                {i18next.t(\"Clear all\")}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ maxHeight: \"330px\", overflow: \"hidden\" }}>\r\n            <PerfectScrollbar>\r\n              <div className=\"a-content\" style={{ maxHeight: \"330px\" }}>\r\n                {_listSelected.map((v, i) => {\r\n                  return (\r\n                    <div\r\n                      key={i}\r\n                      className={classnames(\"option\", {\r\n                        selected: true,\r\n                      })}\r\n                    >\r\n                      <div className=\"a-text\">{v.Text}</div>\r\n                      <div className=\"a-remove\">\r\n                        <Button\r\n                          color=\"link\"\r\n                          onClick={() => {\r\n                            onSelectOption(v, { clear: true })\r\n                          }}\r\n                        >\r\n                          <i className=\"fa fa-times\" />\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isAddNew === true && (\r\n        <div className=\"a-rightpanel a-addnew\">\r\n          <div className=\"a-header\" style={{ fontWeight: \"bold\" }}>\r\n            {i18next.t(\"Add new\")}\r\n          </div>\r\n          <div style={{ maxHeight: \"330px\", overflow: \"hidden\" }}>\r\n            <PerfectScrollbar>\r\n              <div className=\"a-content\" style={{ maxHeight: \"330px\" }}>\r\n                <div className=\"a-form\">\r\n                  <MyForm\r\n                    configForm={configFormAddNew}\r\n                    fnList={{}}\r\n                    renderFooter={cForm => {\r\n                      return (\r\n                        <div className=\"a-form-footer\">\r\n                          <Button\r\n                            onClick={() => {\r\n                              setIsAddNew(false)\r\n                            }}\r\n                          >\r\n                            {i18next.t(\"Close\")}\r\n                          </Button>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              if (onSubmitAddNew) {\r\n                                onSubmitAddNew(cForm.getCurrentValues(), {\r\n                                  cbSuccess: () => {\r\n                                    setIsAddNew(false)\r\n                                  },\r\n                                })\r\n                              }\r\n                            }}\r\n                          >\r\n                            {i18next.t(\"Add\")}\r\n                          </Button>\r\n                        </div>\r\n                      )\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showLoading === true && (\r\n        <div className=\"a-loading-all\">\r\n          <i className=\"fa fa-spin fa-spinner\" />\r\n        </div>\r\n      )}\r\n    </WrapSelect>\r\n  )\r\n}\r\n","import { HText } from \"@macashipo/mlib\"\r\nconst AText = {\r\n  //bo sung compareTextForSearch, truong hop search ki tu []\r\n  compareTextForSearch(text = \"\", textSearch = \"\", opts) {\r\n    if (textSearch.indexOf(\"[\") > -1 || textSearch.indexOf(\"]\") > -1) {\r\n      let _textSearch = textSearch.toLowerCase()\r\n      let _text = text.toLowerCase()\r\n      if (_text.indexOf(_textSearch) > -1) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n    return HText.compareTextForSearch(text, textSearch, opts)\r\n  },\r\n}\r\n\r\nexport default AText\r\n","export const HeightScrollSelect2Box = \"315px\"\r\n"],"sourceRoot":""}