{"version":3,"sources":["modules/adminpanel/MyUI/Types/admintable_header_mini.js"],"names":["MUIATHeader","props","React","useState","show","setShow","firstMouseEnter","setFirstMouseEnter","showPinned","setShowPinned","refDiv","useRef","refTimeout","useEffect","console","warn","current","clearTimeout","style","setTimeout","display","className","onMouseLeave","type","visible","animationInDuration","animationIn","animationOut","animateOnMount","innerRef","r","color","onClick","onMouseEnter","ReactDOM","unstable_batchedUpdates"],"mappings":"gPAIe,SAASA,EAAYC,GAClC,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8CH,IAAMC,UAAS,GAA7D,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAoCL,IAAMC,UAAS,GAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KACMC,EAASR,IAAMS,OAAO,MACtBC,EAAaV,IAAMS,OAAO,MA4BhC,OAxBAT,IAAMW,WAAU,YACD,IAATT,IAAiC,IAAfI,GACpBM,QAAQC,KAAK,SAAUL,EAAOM,SAC1BJ,EAAWI,SACbC,aAAaL,EAAWI,SAEtBN,EAAOM,SAAWN,EAAOM,QAAQE,QACnCN,EAAWI,QAAUG,YAAW,WAC1BT,EAAOM,SAAWN,EAAOM,QAAQE,QACnCR,EAAOM,QAAQE,MAAME,QAAU,UAEhC,OAIHV,EAAOM,SACPN,EAAOM,QAAQE,OACkB,SAAjCR,EAAOM,QAAQE,MAAME,UAErBV,EAAOM,QAAQE,MAAME,QAAU,WAGlC,CAAChB,EAAMI,IACVM,QAAQC,KAAK,qBAAsBX,EAAMI,GAEvC,qBAAKa,UAAU,kCAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,uBACf,sBACEA,UAAU,qBACVC,aAAc,YACC,IAATlB,GACFC,GAAQ,IAJd,UAQE,cAAC,OAAD,CACEkB,KAAK,UACLC,SAAwB,IAAfhB,GAA6BJ,EACtCc,MAAO,CAAEE,QAAS,QAClBK,oBAAqB,IACrBC,YAAY,cACZC,aAAa,eACbC,gBAAgB,EAChBC,SAAU,SAAAC,GACJA,IACFpB,EAAOM,QAAUc,IAVvB,SAcE,cAAC,OAAD,2BAAU7B,GAAV,IAAiBsB,KAAK,iCAExB,8BACE,cAAC,IAAD,CACEQ,MAAM,UACNC,QAAS,WACPvB,GAAeD,IAEjByB,aAAc,YACY,IAApB3B,EACF4B,IAASC,yBAAwB,WAC/B1B,GAAc,GACdF,GAAmB,GACnBF,GAAQ,MAGVA,GAAQ,IAbd,SAiBE,mBAAGgB,UAAU","file":"static/js/216.d32ddbb6.chunk.js","sourcesContent":["import { MyUI } from \"@macashipo/mlib\"\r\nimport { Button } from \"reactstrap\"\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nexport default function MUIATHeader(props) {\r\n  const [show, setShow] = React.useState(false)\r\n  const [firstMouseEnter, setFirstMouseEnter] = React.useState(true)\r\n  const [showPinned, setShowPinned] = React.useState(false)\r\n  const refDiv = React.useRef(null)\r\n  const refTimeout = React.useRef(null)\r\n  // const enablePageTitleIcon = true\r\n  // const enablePageTitleSubheading = true\r\n  // const configPage = props.configPage\r\n  React.useEffect(() => {\r\n    if (show === false && showPinned === false) {\r\n      console.warn(\"refDiv\", refDiv.current)\r\n      if (refTimeout.current) {\r\n        clearTimeout(refTimeout.current)\r\n      }\r\n      if (refDiv.current && refDiv.current.style) {\r\n        refTimeout.current = setTimeout(() => {\r\n          if (refDiv.current && refDiv.current.style) {\r\n            refDiv.current.style.display = \"none\"\r\n          }\r\n        }, 200)\r\n      }\r\n    } else {\r\n      if (\r\n        refDiv.current &&\r\n        refDiv.current.style &&\r\n        refDiv.current.style.display === \"none\"\r\n      ) {\r\n        refDiv.current.style.display = \"block\"\r\n      }\r\n    }\r\n  }, [show, showPinned])\r\n  console.warn(\"render header mini\", show, showPinned)\r\n  return (\r\n    <div className=\"mpat-header-mini app-page-title\">\r\n      <div className=\"page-title-wrapper\">\r\n        <div className=\"page-title-heading\"></div>\r\n        <div\r\n          className=\"page-title-actions\"\r\n          onMouseLeave={() => {\r\n            if (show === true) {\r\n              setShow(false)\r\n            }\r\n          }}\r\n        >\r\n          <MyUI\r\n            type=\"animate\"\r\n            visible={showPinned === true ? true : show}\r\n            style={{ display: \"none\" }}\r\n            animationInDuration={200}\r\n            animationIn=\"fadeInRight\"\r\n            animationOut=\"fadeOutRight\"\r\n            animateOnMount={false}\r\n            innerRef={r => {\r\n              if (r) {\r\n                refDiv.current = r\r\n              }\r\n            }}\r\n          >\r\n            <MyUI {...props} type=\"admintable_header_buttons\" />\r\n          </MyUI>\r\n          <div>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                setShowPinned(!showPinned)\r\n              }}\r\n              onMouseEnter={() => {\r\n                if (firstMouseEnter === true) {\r\n                  ReactDOM.unstable_batchedUpdates(() => {\r\n                    setShowPinned(true)\r\n                    setFirstMouseEnter(false)\r\n                    setShow(true)\r\n                  })\r\n                } else {\r\n                  setShow(true)\r\n                }\r\n              }}\r\n            >\r\n              <i className=\"fa fa-ellipsis-h\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}