{"version":3,"sources":["modules/qlproject/MyUI/prj_set.js","modules/qlproject/MyUI/prj_set_btn.js"],"names":["WrapLayout","styled","div","MUIPJAPI","props","onFocus","console","log","Date","checkLastTimeShowSET","now","getTime","last","parseInt","localStorage","getItem","setItem","diffTime","Math","abs","requestList","_lastRequestTime","setState","loading","ApiGeneric","request","method","path","name","data","successCallBack","response","_data","Data","SharedSET","reloadBtn","errorCallBack","err","requestSet","logout","state","this","me","_checkTime","setInterval","window","addEventListener","clearInterval","removeEventListener","_showCheckOut","length","className","onClick","disabled","style","textAlign","gridTemplateColumns","border","margin","map","v","i","fontWeight","TypeSet","HFormat","format","TimeSet","type","Component","showWarning","classNames","MyModal","showFromMyUI","title"],"mappings":"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","file":"static/js/167.9d85c5b8.chunk.js","sourcesContent":["import { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport { HFormat, HUtils } from \"@macashipo/mlib\"\r\nimport { SharedSET } from \"./prj_set_btn\"\r\nconst WrapLayout = styled.div`\r\n  & .a-list {\r\n    border: 1px solid #cbcbcb;\r\n    padding: 1rem;\r\n    margin-top: 1rem;\r\n    box-shadow: rgb(141 141 141 / 40%) 0 2px 4px,\r\n      rgb(181 181 181 / 30%) 0 7px 13px -3px,\r\n      rgb(169 169 169 / 50%) 0 -3px 0 inset;\r\n    & > div {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      padding: 5px 0px;\r\n      border-bottom: 1px solid #d9d9d9;\r\n    }\r\n  }\r\n  & .a-loading {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: #ffffffa8;\r\n  }\r\n  & .a-set {\r\n    display: grid;\r\n    gap: 10px;\r\n    grid-template-columns: 1fr 1fr;\r\n    & button {\r\n      align-items: center;\r\n      appearance: none;\r\n      background-image: radial-gradient(\r\n        100% 100% at 100% 0,\r\n        #5adaff 0,\r\n        #5468ff 100%\r\n      );\r\n      border: 0;\r\n      border-radius: 6px;\r\n      box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\r\n        rgba(45, 35, 66, 0.3) 0 7px 13px -3px,\r\n        rgba(58, 65, 111, 0.5) 0 -3px 0 inset;\r\n      box-sizing: border-box;\r\n      color: #fff;\r\n      cursor: pointer;\r\n      display: inline-flex;\r\n      font-family: \"JetBrains Mono\", monospace;\r\n      height: 48px;\r\n      justify-content: center;\r\n      line-height: 1;\r\n      list-style: none;\r\n      overflow: hidden;\r\n      padding-left: 16px;\r\n      padding-right: 16px;\r\n      position: relative;\r\n      text-align: left;\r\n      text-decoration: none;\r\n      transition: box-shadow 0.15s, transform 0.15s;\r\n      user-select: none;\r\n      -webkit-user-select: none;\r\n      touch-action: manipulation;\r\n      white-space: nowrap;\r\n      will-change: box-shadow, transform;\r\n      font-size: 18px;\r\n      &:hover {\r\n        box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\r\n          rgba(45, 35, 66, 0.3) 0 7px 13px -3px;\r\n        transform: translateY(-2px);\r\n      }\r\n      &:disabled {\r\n        opacity: 0.2;\r\n      }\r\n    }\r\n    & .a-set-in {\r\n      border: 0px;\r\n      background-image: radial-gradient(\r\n        100% 100% at 100% 0,\r\n        #5de77c 0,\r\n        #28a745 100%\r\n      );\r\n      color: white;\r\n    }\r\n    & .a-set-out {\r\n      border: 0px;\r\n      background-image: radial-gradient(\r\n        100% 100% at 100% 0,\r\n        #ff7e83 0,\r\n        #c71c22 100%\r\n      );\r\n      color: white;\r\n    }\r\n  }\r\n`\r\n\r\nclass MUIPJAPI extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: false,\r\n      data: null,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.requestList()\r\n    this.checkLastTimeShowSET()\r\n    const me = this\r\n    this._checkTime = setInterval(function () {\r\n      me.checkLastTimeShowSET()\r\n    }, 60000)\r\n    window.addEventListener(\"focus\", this.onFocus)\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this._checkTime)\r\n    window.removeEventListener(\"focus\", this.onFocus)\r\n  }\r\n\r\n  onFocus = () => {\r\n    console.log(\"on focus:\", new Date())\r\n    this.checkLastTimeShowSET()\r\n  }\r\n  checkLastTimeShowSET = () => {\r\n    let now = new Date().getTime()\r\n    let last = parseInt(localStorage.getItem(\"checkLastTimeShowSET\")) || now\r\n    localStorage.setItem(\"checkLastTimeShowSET\", `${now}`)\r\n    const diffTime = Math.abs(now - last + 10000)\r\n    console.log(\"time:\", new Date(), now, last, diffTime)\r\n    if (diffTime > 120000) {\r\n      console.log(\"need refresh\")\r\n      this.requestList()\r\n    } else {\r\n      if (this._lastRequestTime) {\r\n        let _diffTimeFromOpoen = Math.abs(now - this._lastRequestTime)\r\n        if (_diffTimeFromOpoen > 60 * 1000 * 60) {\r\n          //1h\r\n          this.requestList()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  requestList = () => {\r\n    this._lastRequestTime = new Date().getTime()\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"/api/v1/TimeTrackingSystem_Mine\",\r\n            name: \"List\",\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            console.log(\"res:\", response)\r\n            let _data = []\r\n            if (response.Data && response.Data.Data) {\r\n              _data = response.Data.Data\r\n            }\r\n            this.setState(\r\n              {\r\n                data: _data,\r\n                loading: false,\r\n              },\r\n              () => {\r\n                SharedSET.data = _data\r\n                if (SharedSET.reloadBtn) {\r\n                  SharedSET.reloadBtn()\r\n                }\r\n              }\r\n            )\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({\r\n              loading: false,\r\n            })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  requestSet = (logout = false) => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"/api/v1/TimeTrackingSystem_Mine\",\r\n            name: logout == true ? \"SetLogout\" : \"SetLogin\",\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            console.log(\"res:\", response)\r\n            this.requestList()\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({\r\n              loading: false,\r\n            })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let _showCheckOut = false\r\n    const data = this.state.data\r\n    if (data != null && data.length > 0) {\r\n      _showCheckOut = true\r\n    }\r\n    return (\r\n      <WrapLayout>\r\n        <div className=\"a-set\">\r\n          <button\r\n            className=\"a-set-in\"\r\n            onClick={() => {\r\n              this.requestSet()\r\n            }}\r\n          >\r\n            Check IN\r\n          </button>\r\n          <button\r\n            disabled={_showCheckOut == false}\r\n            className=\"a-set-out\"\r\n            onClick={() => {\r\n              this.requestSet(true)\r\n            }}\r\n          >\r\n            Check OUT\r\n          </button>\r\n        </div>\r\n        <div className=\"a-list\">\r\n          {(data == null || data.length == 0) && (\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                gridTemplateColumns: \"1fr\",\r\n                border: \"0px\",\r\n                margin: \"10px 0px\",\r\n              }}\r\n            >\r\n              No information\r\n            </div>\r\n          )}\r\n          {this.state.data != null &&\r\n            this.state.data.length > 0 &&\r\n            this.state.data.map((v, i) => {\r\n              return (\r\n                <div key={i}>\r\n                  <div style={{ fontWeight: \"bold\" }}>\r\n                    {v.TypeSet || \"[Empty]\"}\r\n                  </div>\r\n                  <div>{HFormat.format(v.TimeSet, { type: \"datetime\" })}</div>\r\n                </div>\r\n              )\r\n            })}\r\n        </div>\r\n        {this.state.loading === true && (\r\n          <div className=\"a-loading\">\r\n            <i className=\"fa fa-spin fa-spinner\" />\r\n          </div>\r\n        )}\r\n      </WrapLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MUIPJAPI\r\n","import { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ApiGeneric } from \"src/services/apiServices\"\r\nimport { HFormat, HUtils } from \"@macashipo/mlib\"\r\nimport { MyModal } from \"src/core/components\"\r\nimport { Animated } from \"react-animated-css\"\r\nimport classNames from \"classnames\"\r\nclass MUIPJAPI extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: false,\r\n      data: null,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.requestList()\r\n    SharedSET.reloadBtn = () => {\r\n      if (SharedSET.data) {\r\n        this.setState({\r\n          data: SharedSET.data,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  requestList = () => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        ApiGeneric({\r\n          request: {\r\n            method: \"POST\",\r\n            path: \"/api/v1/TimeTrackingSystem_Mine\",\r\n            name: \"List\",\r\n          },\r\n          data: {},\r\n          successCallBack: response => {\r\n            console.log(\"res:\", response)\r\n            let _data = []\r\n            if (response.Data && response.Data.Data) {\r\n              _data = response.Data.Data\r\n            }\r\n            this.setState(\r\n              {\r\n                data: _data,\r\n                loading: false,\r\n              },\r\n              () => {\r\n                SharedSET.data = _data\r\n              }\r\n            )\r\n          },\r\n          errorCallBack: err => {\r\n            console.log(err)\r\n            this.setState({\r\n              loading: false,\r\n            })\r\n          },\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const data = this.state.data\r\n    const showWarning = data != null && data.length == 0\r\n    if (this.state.loading) {\r\n      return (\r\n        <button\r\n          disabled\r\n          className={classNames(\"btn btn-primary\")}\r\n          onClick={() => {}}\r\n        >\r\n          <i className=\"fa fa-spin fa-spinner\" /> SET\r\n        </button>\r\n      )\r\n    }\r\n    return (\r\n      <button\r\n        className={classNames(\"btn btn-primary\", {\r\n          \"btn-warning ani-heartBeat ani-run infinite\": showWarning,\r\n        })}\r\n        onClick={() => {\r\n          MyModal.showFromMyUI(\r\n            {\r\n              type: \"prj_set\",\r\n              data: {},\r\n            },\r\n            {\r\n              title: \"SET\",\r\n            }\r\n          )\r\n        }}\r\n      >\r\n        <i className=\"fa fa-sign-in\" /> SET\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nconst SharedSET = {\r\n  data: null,\r\n  reloadBtn: null,\r\n}\r\nexport { SharedSET }\r\nexport default MUIPJAPI\r\n"],"sourceRoot":""}